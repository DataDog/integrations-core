name: Gitlab
files:
- name: gitlab.yaml
  options:
  - template: init_config
    options:
      - template: init_config/openmetrics
  - template: instances
    options:
    - name: gitlab_url
      display_priority: 2
      description: |
        The GitLab external URL to probe for service health status
        If authentication is required, use this URL with
        the authorization token: http://localhost/?access_token=<TOKEN>
      value:
        type: string
    - name: api_token
      display_priority: 1
      description: |
        The GitLab API token for this instance
        used to collect the GitLab version.
      value:
        type: string
    - name: prometheus_endpoint
      description: |
        Deprecated alias for `prometheus_url`.
      hidden: true
      value:
        type: string
    - template: instances/openmetrics
      overrides:
        openmetrics_endpoint.required: false
        openmetrics_endpoint.enabled: true
        openmetrics_endpoint.display_priority: 4
        openmetrics_endpoint.value.example: http://<GITLAB_URL>/-/metrics
        openmetrics_endpoint.description: |
          To enable GitLab metrics using OpenMetricsBaseCheckV2 you must specify the 
          `openmetrics_endpoint` option.

          Either `prometheus_url` or `openmetrics_endpoint` must be specified.
          See documentation: https://docs.datadoghq.com/integrations/gitlab
        tags.display_priority: 1
    - template: instances/openmetrics_legacy_base
      hidden: true
      overrides:
        prometheus_url.required: false
        prometheus_url.hidden: false
        prometheus_url.display_priority: 3
        prometheus_url.value.example: http://<GITLAB_URL>/-/metrics
        prometheus_url.description: |
          To enable GitLab metrics using the legacy OpenMetricsBaseCheckV1 you must specify the `prometheus_url` option.

          Either `prometheus_url` or `openmetrics_endpoint` must be specified.
          See documentation: https://docs.datadoghq.com/integrations/gitlab
        health_service_check.value.example: false
        health_service_check.value.default: false
  - template: logs
    example:
    - type: file
      path: /var/log/gitlab/gitlab-rails/production_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/integrations_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/production.log
      service: <SERVICE_NAME>
      source: gitlab
      log_processing_rules:
       - type: multi_line
         pattern: 'Started [A-Z]+ "[^"]+" for'
         name: new_log_start_pattern
    - type: file
      path: /var/log/gitlab/gitlab-rails/api_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/application.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/integrations_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/kubernetes.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/audit_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/sidekiq.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/gitlab-shell.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-shell/gitlab-shell.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/unicorn_stderr.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/graphql_json.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-rails/sidekiq_exporter.log
      service: <SERVICE_NAME>
      source: gitlab
      log_processing_rules:
        - type: multi_line
          pattern: 'Started [A-Z]+ "[^"]+" for'
          name: new_log_start_pattern
    - type: file
      path: /var/log/gitlab/gitaly/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/alertmanager/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/gitlab-workhorse/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/postgres-exporter/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/prometheus/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/redis-exporter/current
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/unicorn/*.log
      service: <SERVICE_NAME>
      source: gitlab
    - type: file
      path: /var/log/gitlab/nginx/*.log
      service: <SERVICE_NAME>
      source: nginx
