machine:
    python:
        version: 2.7.10
    ruby:
        version: 2.2.6
    services:
        - docker
    environment:
        NOSE_FILTER: 'not windows and not fixme'
        VOLATILE_DIR: '/tmp/integration-sdk-testing'
        INTEGRATIONS_DIR: "$HOME/embedded"
        CI_BUILD_DIR: "$HOME/$CIRCLE_PROJECT_REPONAME"
        PIP_CACHE: "$HOME/.cache/pip"
        SDK_TESTING: "true"
        DD_AGENT_BRANCH: "master"
        EXTRAS_BRANCH: "master"
        REQ_LOCALS: "$CI_BUILD_DIR,$HOME/dd-agent,$HOME/integrations-extras"

dependencies:
    pre:
        - sudo apt-get update ; sudo apt-get install -y curl apt-transport-https git libpq-dev
        - git -C $HOME/dd-agent pull || git clone -b $DD_AGENT_BRANCH --depth 1 https://github.com/DataDog/dd-agent.git $HOME/dd-agent
        - git -C $HOME/integrations-extras pull || git clone -b $EXTRAS_BRANCH --depth 1 https://github.com/DataDog/integrations-extras.git $HOME/integrations-extras
        - echo "$HOME/dd-agent/" > $(dirname $(pyenv which python))/../lib/python2.7/site-packages/datadog-agent.pth
        - echo "$HOME/dd-agent/" > $(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")/datadog-agent.pth
        - pip install pip --upgrade
        - pip install docker-compose
        - pip install pylint
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements-test.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements-test.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/requirements-opt.txt ]; then pip install -r ~/$CIRCLE_PROJECT_REPONAME/requirements-opt.txt; fi
        - if [ -e ~/dd-agent/requirements.txt ]; then pip install -r ~/dd-agent/requirements.txt; fi
        - if [ -e ~/$CIRCLE_PROJECT_REPONAME/Gemfile ]; then cd ~/$CIRCLE_PROJECT_REPONAME ; bundle install; cd - ; fi

test:
    override:
        - bundle exec rake prep_travis_ci
        - rake ci:run[default]
        - rake ci:run[mysql]
        - rake ci:run[twemproxy]
        - rake ci:run[tokumx]
        - rake ci:run[postgres]
        - rake ci:run[supervisord]
        - rake ci:run[mongo]
        - rake ci:run[fluentd]
        - rake ci:run[rabbitmq]
        - rake ci:run[cassandra]
        - rake ci:run[tomcat]
        - rake ci:run[gearmand]
        - rake ci:run[redisdb]
        - rake ci:run[ssh_check]
        - rake ci:run[haproxy]
        - rake ci:run[go_expvar]
        - rake ci:run[kong]
        - rake ci:run[nginx]
        - rake ci:run[zk]
        - rake ci:run[riak]
        - rake ci:run[pgbouncer]
        - rake ci:run[apache]
        - rake ci:run[couch]
        - rake ci:run[elastic]
        - rake ci:run[snmp]
        - rake ci:run[etcd]
        - rake ci:run[gunicorn]
        - rake ci:run[mcache]
        - rake ci:run[lighttpd]
        - rake ci:run[statsd]
        - rake ci:run[solr]
        - rake ci:run[powerdns_recursor]
        - rake ci:run[kyototycoon]
        - rake ci:run[consul]
        - rake ci:run[activemq_xml]
        - rake ci:run[sqlserver]
        - rake ci:run[openstack]
        - rake ci:run[php_fpm]
        - rake ci:run[win32_event_log]
        - rake ci:run[kafka_consumer]
        - rake ci:run[kafka]
        - rake ci:run[docker_daemon]
        - bundle exec rake requirements
    post:
        - if [[ $(docker ps -a -q) ]]; then docker stop $(docker ps -a -q); fi
