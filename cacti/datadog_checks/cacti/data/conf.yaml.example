## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

    ## @param mysql_host - string - required
    ## URL of your MySQL database
    #
  - mysql_host: localhost

    ## @param mysql_port - integer - optional - default: 3306
    ## Port of your MySQL database
    #
    # mysql_port: 3306

    ## @param mysql_user - string - required
    ## User to use to connect to MySQL in order to gather metrics.
    #
    mysql_user: <MYSQL_USER>

    ## @param mysql_password - string - optional
    ## Password to use to connect to MySQL in order to gather metrics.
    #
    # mysql_password: <MYSQL_PASSWORD>

    ## @param mysql_db - string - optional - default: cacti
    ## The MySQL database to connect to
    #
    # mysql_db: cacti

    ## @param rrd_path - string - required
    ## The Cacti checks requires access to the Cacti DB in MySQL and to the RRD
    ## files that contain the metrics tracked in Cacti.
    ## In almost all cases, you'll only need one instance pointing to the Cacti
    ## database.
    ## The `rrd_path` will probably be `/var/lib/cacti/rra` on Ubuntu
    ## or `/var/www/html/cacti/rra` on any other machines.
    #
    rrd_path: <CACTI_RRA_PATH>

    ## @param field_names - list of strings - optional
    ## The `field_names` specifies which field_names should be used
    ## to determine if a device is a real device. You can leave it commented
    ## out as the default values [ifName, dskDevice] should satisfy your needs.
    ## You can run the following query to determine your field names:
    ##       SELECT
    ##            h.hostname as hostname,
    ##            hsc.field_value as device_name,
    ##            dt.data_source_path as rrd_path,
    ##            hsc.field_name as field_name
    ##        FROM data_local dl
    ##            JOIN host h on dl.host_id = h.id
    ##            JOIN data_template_data dt on dt.local_data_id = dl.id
    ##            LEFT JOIN host_snmp_cache hsc on h.id = hsc.host_id
    ##                AND dl.snmp_index = hsc.snmp_index
    ##        WHERE dt.data_source_path IS NOT NULL
    ##        AND dt.data_source_path != ''
    #
    # field_names:
    #   - ifName
    #   - dskDevice

    ## @param rrd_whitelist - string - optional
    ## The `rrd_whitelist` is a path to a text file that has a list of file patterns,
    ## one per line, that should be fetched. If no whitelist is specified, all
    ## metrics are fetched.
    #
    # rrd_whitelist: <RRD_WHITELIST_FILE_PATH>

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which integration sent the logs.
## encoding - optional - For file specifies the file encoding, default is utf-8, other
##                       possible values are utf-16-le and utf-16-be.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /opt/cacti/log/cacti.log
#     source: cacti
