name: Measure Disk Usage

on:
  pull_request:
    branches:
      - master

env:
  PYTHON_VERSION: "3.12"

jobs:
  measure-disk-usage:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch master and PR branch explicitly (safely)
        run: |
          git fetch origin master:refs/remotes/origin/master
          git fetch origin ${{ github.head_ref }}:refs/remotes/origin/temp-${{ github.head_ref }}


      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install ddev
        run: |
          pip install -e ./datadog_checks_dev[cli]
          pip install -e ./ddev

      # Dummy test artifact for demo
      - name: Create artifact
        run: |
          echo "hola" > hola.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: uncompressed_status.csv
          path: hola.txt
          if-no-files-found: error

      - name: Get merge base commit with master
        id: merge_base
        run: |
          base=$(git merge-base origin/temp-${{ github.head_ref }} origin/master)
          echo "sha=$base" >> $GITHUB_OUTPUT
          echo "sha=$base" >> $GITHUB_STEP_SUMMARY


      - name: Find exact workflow run by head SHA using GitHub API
        id: find_run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Looking for workflow run at SHA: ${{ steps.merge_base.outputs.sha }}"
          response=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=${{ steps.merge_base.outputs.sha }}")

          run_id=$(echo "$response" | jq -r '.workflow_runs[] | select(.name == "Measure Disk Usage") | .id' | head -n 1)

          if [ -z "$run_id" ]; then
            echo "❌ No workflow run found at that SHA."
            exit 1
          fi

          echo "✅ Found run_id=$run_id"
          echo "run_id=$run_id" >> $GITHUB_OUTPUT
          echo "run_id=$run_id" >> $GITHUB_STEP_SUMMARY


      - name: Download artifact from merge base
        run: gh run download ${{ steps.find_run.outputs.run_id }} --name uncompressed_status.csv
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List downloaded files
        run: find . -type f >> $GITHUB_STEP_SUMMARY


    # run: gh run download ${{ steps.find_run.outputs.run_id }} --name uncompressed_status.csv

    # ------------------------------------------------------------
    # - name: Measure disk usage (uncompressed)
    #   run: | 
    #     ddev size status --to-dd-key ${{secrets.DD_API_KEY}} > size-uncompressed.txt 
    #     ddev size status  --format png,csv,markdown
    #     cat size-uncompressed.txt
    #     echo "# Size (uncompressed)" >> $GITHUB_STEP_SUMMARY
    #     cat uncompressed_status.md >> $GITHUB_STEP_SUMMARY
  
    # - name: Measure disk usage (compressed)
    #   run: |
    #     ddev size status --compressed --to-dd-key ${{secrets.DD_API_KEY}} > size-compressed.txt 
    #     ddev size status --compressed  --format png,csv,markdown
    #     cat size-compressed.txt
    #     echo "# Size (compressed)" >> $GITHUB_STEP_SUMMARY
    #     cat compressed_status.md >> $GITHUB_STEP_SUMMARY



    # - name: Measure disk usage differences from last commit (uncompressed)
    #   run: | 
    #     BEFORE=$(git rev-parse HEAD^)
    #     AFTER=$(git rev-parse HEAD)
    #     ddev size diff $BEFORE $AFTER > diff-uncompressed.txt
    #     ddev size diff $BEFORE $AFTER  --format png,csv,markdown
    #     cat diff-uncompressed.txt
    #     echo "# Size diff (uncompressed)" >> $GITHUB_STEP_SUMMARY
    #     if [ -f uncompressed_diff.md ]; then
    #         cat uncompressed_diff.md >> $GITHUB_STEP_SUMMARY
    #     fi

    # - name: Measure disk usage differences from last commit (compressed)
    #   run: | 
    #     BEFORE=$(git rev-parse HEAD^)
    #     AFTER=$(git rev-parse HEAD)
    #     ddev size diff $BEFORE $AFTER --compressed > diff-compressed.txt
    #     ddev size diff $BEFORE $AFTER --compressed  --format png,csv,markdown
    #     cat diff-compressed.txt
    #     echo "# Size diff (compressed)" >> $GITHUB_STEP_SUMMARY
    #     if [ -f compressed_diff.md ]; then
    #         cat compressed_diff.md >> $GITHUB_STEP_SUMMARY
    #     fi

    # - name: Upload file sizes (uncompressed)
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: uncompressed_status.csv
    #     path: uncompressed_status.csv
    #     if-no-files-found: error

    # - name: Upload file sizes (compressed)
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: compressed_status.csv
    #     path: compressed_status.csv
    #     if-no-files-found: error
  
    # - name: Upload file sizes diff (uncompressed)
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: uncompressed_diff.csv
    #     path: uncompressed_diff.csv
    #     if-no-files-found: warn

    # - name: Upload file sizes diff (compressed)
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: compressed_diff.csv
    #     path: compressed_diff.csv
    #     if-no-files-found: warn

    # - name: Upload status PNGs
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: size-visuals
    #     path: size_status_visualizations/
    #     if-no-files-found: error

    # - name: Upload diff PNGs
    #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
    #   with:
    #     name: diff-visuals
    #     path: size_diff_visualizations/
    #     if-no-files-found: warn
    
