name: Measure Disk Usage

on:
  # workflow_run:
  #   workflows: ['Resolve Dependencies and Build Wheels']
  #   types:
  #     - completed
  workflow_call:
env:
  PYTHON_VERSION: "3.12"

jobs:

  set-platforms:
    runs-on: ubuntu-22.04
    outputs:
      platforms: ${{ steps.set.outputs.platforms }}
    steps:
      - id: set
        run: echo 'platforms=["macos-x86_64","macos-aarch64","linux-aarch64","linux-x86_64","windows-x86_64"]' >> "$GITHUB_OUTPUT"

  measure-disk-usage:
    runs-on: ubuntu-22.04
    needs:
      - set-platforms
    permissions:
        contents: read
        actions: read
    # strategy:
    #   matrix:
    #     platform: ${{ fromJSON(needs.set-platforms.outputs.platforms) }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install ddev
      run: |
        pip install -e ./datadog_checks_dev[cli]
        pip install -e ./ddev

    - name: Configure ddev
      run: |
            ddev config override

    - name: Measure disk usage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cmd="ddev size status \
        --dependency-commit ${{github.event.pull_request.head.sha }} \
        --format json"

        # TODO: change to ${{ github.event.workflow_run.head_sha }}
        # Send metrics to Datadog only on push to master

        # if [ "${{ github.event.workflow_run.event }}" = "push" ] && [ "${{ github.ref_name }}" = "master" ]; then
        #   cmd="$cmd --to-dd-key $DD_API_KEY"
        # fi

        $cmd --to-dd-key ${{ secrets.DD_API_KEY}}
        $cmd --compressed

    - name: Upload JSON uncompressed sizes artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: status_uncompressed.json
        path: status_uncompressed.json
        if-no-files-found: error

    - name: Upload JSON compressed sizes artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: status_compressed.json
        path: status_compressed.json
        if-no-files-found: error

  calculate-diff:
    runs-on: ubuntu-22.04
    needs:
      - set-platforms
      - measure-disk-usage
    outputs:
      passed: ${{ steps.check_diff.outputs.passed }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install ddev
      run: |
        pip install -e ./datadog_checks_dev[cli]
        pip install -e ./ddev

    - name: Configure ddev
      run: |
            ddev config override

    - name: Calculate diff
      run: |
        ddev size diff ${{github.event.pull_request.head.sha }} --format json --use-artifacts --quality-gate-threshold ${{ env.SIZE_THRESHOLD }} # TODO: change to ${{ github.event.workflow_run.head_sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIZE_THRESHOLD: -1000000000000

    - name: Check diff
      id: check_diff
      if: github.event_name == 'pull_request'
      run: |
        if [ -s diff.html ]; then
          echo "Quality gates not passed"
          echo "passed=false" >> "$GITHUB_OUTPUT"
        else
          echo "Quality gates passed"
          echo "passed=true" >> "$GITHUB_OUTPUT"
        fi

    - name: Find last comment
      if: github.event_name == 'pull_request' && steps.check_diff.outputs.passed == 'false'
      uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
      id: find_comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: "<h3>Size Changes</h3>"
        direction: last

    - name: Delete last comment
      if: github.event_name == 'pull_request' && steps.check_diff.outputs.passed == 'false' && steps.find_comment.outputs.comment-id != ''
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
          script: |
            const commentId = ${{ steps.find_comment.outputs.comment-id }};
            await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: commentId,
              });

    - name: Create comment
      if: github.event_name == 'pull_request' && steps.check_diff.outputs.passed == 'false'
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body-file diff.html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
