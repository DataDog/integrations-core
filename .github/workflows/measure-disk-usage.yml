name: Measure Disk Usage

on:
  pull_request:
    branches:
    - master 
env:
  PYTHON_VERSION: "3.12"
permissions:
  contents: read
  pull-requests: write

jobs:
  measure-disk-usage:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    - name: Add justification section
      if: false 
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        PR_BODY: ${{ github.event.pull_request.body }}
      run: |
        # The new section to add. You can use \n for new lines.
        section_title="New Dependency Motivation"
        new_section="### $section_title
        
        <!-- Please explain why this new dependency is necessary and why similar existing libraries are not suitable. -->
        
        "
          
        # The text to insert the section before.
        landmark_text="### Review checklist"

        # Only add the section if it doesn't already exist
        if [[ "$PR_BODY" != *"$section_title"* ]]; then
          echo "Dependency file changed and justification section not found. Adding it now."
          
          # Split the body at the landmark text and insert the new section
          body_before_landmark="${PR_BODY%%"$landmark_text"*}"
          body_after_landmark="${PR_BODY#"$body_before_landmark"}"
          
          new_body="$body_before_landmark$new_section$body_after_landmark"

          gh pr edit $PR_NUMBER --body "$new_body"
        else
          echo "$section_title section already exists. No changes made."
        fi
  require-approval:
    runs-on: ubuntu-22.04
    environment: quality-gates
    steps:
      - name: Request review from manager
        env:
          # Use the GitHub CLI, which is pre-installed on the runner
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # The PR number is available in the event payload
          PR_NUMBER: ${{ github.event.pull_request.number }}
          # IMPORTANT: Change this to your manager's GitHub username or a team name
          # For a team, use your-org/team-slug (e.g., my-company/engineering-managers)
          REVIEWER: "lucia-sb"
        run: |
          echo "Requesting review from ${{ env.REVIEWER }} on PR #${{ env.PR_NUMBER }}"
          gh pr edit ${{ env.PR_NUMBER }} --add-reviewer ${{ env.REVIEWER }}