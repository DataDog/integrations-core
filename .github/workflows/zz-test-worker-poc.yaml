name: ZZ - POC - Test Worker

on:
  workflow_dispatch:
    inputs:
      matrix_json:
        description: 'JSON string defining the dynamic matrices for all jobs'
        required: true
        type: string
      ref:
        description: 'Git ref to check out (branch, tag, or SHA). Use PR head SHA to report as PR check.'
        required: false
        type: string
        default: 'master'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      work_matrix: ${{ steps.set_matrix.outputs.work_matrix }}

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.13'

      - name: Parse matrix and set matrix output
        id: set_matrix
        run: |
          COMBINED_MATRIX=$(python .github/workflows/scripts/explode-matrix.py '${{ inputs.matrix_json }}')

          if [ $? -ne 0 ]; then
            echo "::error::Python script failed to generate matrix."
            exit 1
          fi

          echo "work_matrix=$COMBINED_MATRIX" >> $GITHUB_OUTPUT

          echo "Debug: Combined Matrix: $COMBINED_MATRIX"

  run_work:
    needs: setup
    runs-on: ubuntu-latest
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.setup.outputs.work_matrix) }}

    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ inputs.ref }}

      - name: Run Generic Task
        run: |
          echo "Running generic logic for job: ${{ matrix.name }}"
          echo "Platform: ${{ matrix.platform }}"
          echo "Runner: ${{ matrix.runner }}"
          echo "Target: ${{ matrix.target }}"
          echo "Git SHA: $(git rev-parse HEAD)"
