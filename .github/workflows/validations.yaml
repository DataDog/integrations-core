name: validations

on:
  workflow_call:
    inputs:
      check:
        type: string
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Upgrade Python packaging tools
      run: pip install --disable-pip-version-check --upgrade pip setuptools wheel

    - name: Install ddev
      run: pip install -e ./datadog_checks_dev[cli]

    - name: Configure ddev
      run: |
        ddev config set repos.core .
        ddev config set repo core

    - name: Run agent requirements validation
      run: |
        ddev validate agent-reqs ${{ inputs.check }}

    - name: Run CI validation
      run: |
        ddev validate ci

    - name: Run configuration validation
      run: |
        ddev validate config ${{ inputs.check }}

    - name: Run dashboard validation
      run: |
        ddev validate dashboards ${{ inputs.check }}

    - name: Run dependency validation
      run: |
        ddev validate dep

    - name: Run HTTP wrapper validation
      run: |
        ddev validate http ${{ inputs.check }}

    - name: Run imports validation
      run: |
        ddev validate imports ${{ inputs.check }}

    - name: Run integration style and best practices validation
      run: |
        ddev validate integration-style ${{ inputs.check }} --verbose

    - name: Run JMX metrics validation
      run: |
        ddev validate jmx-metrics ${{ inputs.check }}

    - name: Run legacy signature validation
      run: |
        ddev validate legacy-signature ${{ inputs.check }}

    - name: Run licenses validation
      run: |
        ddev validate licenses

    - name: Run manifest validation
      run: |
        ddev validate manifest ${{ inputs.check }}

    - name: Run metadata validation
      run: |
        ddev validate metadata ${{ inputs.check }}

    - name: Run models validation
      run: |
        ddev validate models ${{ inputs.check }}
        
    - name: Run package validation
      run: |
        ddev validate package ${{ inputs.check }}
        
    - name: Run readmes validation
      run: |
        ddev validate readmes ${{ inputs.check }}

    - name: Run recommended monitors validation
      run: |
        ddev validate recommended-monitors ${{ inputs.check }}

    - name: Run saved views validation
      run: |
        ddev validate saved-views ${{ inputs.check }}

    - name: Run service checks validation
      run: |
        ddev validate service-checks ${{ inputs.check }}

    - name: Comment PR on failure
      if: ${{ failure() && github.event.pull_request.merged != true }}
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: "The `validations` job has failed; please review the `Files changed` tab for possible suggestions to resolve." });

