name: Test FIPS

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      runner:
        required: true
        type: string
      zip_url:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  run:
    name: FIPS test on "${{ inputs.platform }}"
    runs-on: ${{ fromJson(inputs.runner) }}

    env:
      FORCE_COLOR: "1"
      DEBIAN_FRONTEND: "noninteractive"
      LD_LIBRARY_PATH: /usr/local/lib
      OPENSSL_FIPS: 1
      PYTHON_VERSION: "3.12"
      OPENSSL_VERSION: "3.0.15"
      FIPS_MODULE_VERSION:  "3.0.9"


    steps:

    - uses: actions/checkout@v4

    - name: Install System Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update 
        sudo apt install -y --no-install-recommends \
          wget \
          build-essential \
          gcc \
          make \
          perl \
          libc6-dev

    - name: Install OpenSSL
      if: runner.os == 'Linux'
      run: |
        wget https://www.openssl.org/source/openssl-3.0.9.tar.gz \
        && tar -xvzf openssl-3.0.9.tar.gz \
        && cd openssl-3.0.9 \
        && ./Configure enable-fips \
        && make \
        && sudo make install

    - name: Download python-windows-combined
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        Invoke-WebRequest -Uri '${{ inputs.zip_url }}' -OutFile 'python_combined.zip'

    - name: Unzip python_combined.zip
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        Expand-Archive -Path python_combined.zip -DestinationPath .\python_dir

    - name: Run fipsintall.exe
      if: runner.os == 'Windows'
      working-directory: .\python_dir
      shell: powershell
      run: |
        .\openssl.exe fipsinstall -module .\ossl-modules\fips.dll -out fipsmodule.cnf

    - name: Configure OpenSSL for FIPS
      if: runner.os == 'Windows'
      working-directory: .\python_dir
      shell: powershell
      run: |
        # Create openssl.cnf to enable FIPS mode
        $OpenSSLConf = @"
        config_diagnostics = 1
        openssl_conf = openssl_init

        .include fipsmodule.cnf

        [openssl_init]
        providers = provider_sect
        alg_section = algorithm_sect

        [provider_sect]
        fips = fips_sect
        base = base_sect

        [base_sect]
        activate = 1

        [algorithm_sect]
        default_properties = fips=yes
        "@
        $OpenSSLConf | Set-Content -Path ".\openssl.cnf"

    - name: Verify OpenSSL and FIPS Provider
      if: runner.os == 'Windows'
      working-directory: .\python_dir
      shell: powershell
      run: |
        .\openssl.exe version -a
        .\openssl.exe list -providers

    - name: Verify OpenSSL with FIPS ENV vars
      if: runner.os == 'Windows'
      working-directory: .\python_dir
      shell: powershell
      run: |
        $env:OPENSSL_MODULES = ".\ossl-modules"
        $env:OPENSSL_CONF = ".\openssl.cnf"
        .\openssl.exe list -providers

