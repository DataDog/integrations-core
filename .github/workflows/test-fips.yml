name: Test FIPS

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      runner:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  run:
    name: FIPS test on "${{ inputs.platform }}"
    runs-on: ${{ fromJson(inputs.runner) }}

    env:
      FORCE_COLOR: "1"
      DEBIAN_FRONTEND: "noninteractive"
      LD_LIBRARY_PATH: /usr/local/lib
      OPENSSL_CONF: /usr/local/ssl/openssl.cnf
      OPENSSL_FIPS: 1
      PYTHON_VERSION: "3.12"

    steps:

    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
        cache: 'pip'

    - name: Install System Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update && \
        sudo apt install -y --no-install-recommends \
          wget \
          build-essential \
          gcc \
          make \
          perl \
          libc6-dev && \
        sudo apt-get clean && \
        sudo rm -rf /var/lib/apt/lists/*

    - name: Install OpenSSL
      if: runner.os == 'Linux'
      run: |
        wget https://www.openssl.org/source/openssl-3.0.9.tar.gz \
        && tar -xvzf openssl-3.0.9.tar.gz \
        && cd openssl-3.0.9 \
        && ./Configure enable-fips \
        && make \
        && sudo make install

    - name: Download and Extract OpenSSL and FIPS Module
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        # Define URLs for OpenSSL and FIPS module
        $OpenSSLUrl = "https://agent-ints-python-build-sandbox.s3.eu-north-1.amazonaws.com/openssl-windows-openssl-3.0.15-amd64-5BD585.zip"
        $FIPSModuleUrl = "https://agent-ints-python-build-sandbox.s3.eu-north-1.amazonaws.com/fips-windows-openssl-3.0.9-amd64-118D97.zip"
        
        # Download OpenSSL
        Invoke-WebRequest -Uri $OpenSSLUrl -OutFile openssl.zip
        Expand-Archive -Path openssl.zip -DestinationPath "C:\Program Files\OpenSSL" -Force
        Remove-Item -Path openssl.zip

        # Download FIPS Module
        Invoke-WebRequest -Uri $FIPSModuleUrl -OutFile fipsmodule.zip
        if (-Not (Test-Path "C:\Program Files\OpenSSL\lib\ossl-modules")) {
          New-Item -ItemType Directory -Path "C:\Program Files\OpenSSL\lib\ossl-modules"
        }
        Expand-Archive -Path fipsmodule.zip -DestinationPath "C:\Program Files\OpenSSL\lib\ossl-modules" -Force
        Remove-Item -Path fipsmodule.zip

        if (-Not (Test-Path "C:\Program Files\OpenSSL\ssl")) {
          New-Item -ItemType Directory -Path "C:\Program Files\OpenSSL\ssl"
        }
        Move-Item -Path "C:\Program Files\OpenSSL\lib\ossl-modules\fipsmodule.cnf" -Destination "C:\Program Files\OpenSSL\ssl\fipsmodule.cnf" -Force

    - name: Configure OpenSSL FIPS
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        # Create openssl.cnf file
        $OpenSSLConf = @"
        config_diagnostics = 1
        openssl_conf = openssl_init

        .include C:\Program Files\OpenSSL\ssl\fipsmodule.cnf

        [openssl_init]
        providers = provider_sect
        alg_section = algorithm_sect

        [provider_sect]
        fips = fips_sect
        base = base_sect

        [base_sect]
        activate = 1

        [algorithm_sect]
        default_properties = fips=yes
        "@
        $OpenSSLConf | Set-Content -Path "C:\Program Files\OpenSSL\ssl\openssl.cnf"

    - name: Verify OpenSSL and FIPS
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        [Environment]::SetEnvironmentVariable("OPENSSL_CONF", "C:\Program Files\OpenSSL\ssl\openssl.cnf", "Process")

        & "C:\Program Files\OpenSSL\openssl.exe" version -a
        & "C:\Program Files\OpenSSL\openssl.exe" list -providers

    - name: Install Cryptography
      run: pip install cryptography

    # Verify OpenSSL Installation
    - name: Verify OpenSSL and FIPS Provider
      run: |
        # Check installed OpenSSL version
        openssl version -a
        # Confirm FIPS provider is installed
        openssl list -providers
