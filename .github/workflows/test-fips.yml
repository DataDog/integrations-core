name: Test FIPS

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      runner:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  run:
    name: FIPS test on "${{ inputs.platform }}"
    runs-on: ${{ fromJson(inputs.runner) }}

    env:
      FORCE_COLOR: "1"
      DEBIAN_FRONTEND: "noninteractive"
      LD_LIBRARY_PATH: /usr/local/lib
      OPENSSL_CONF: /usr/local/ssl/openssl.cnf
      OPENSSL_FIPS: 1
      PYTHON_VERSION: "3.12"

    steps:

    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: "${{ env.PYTHON_VERSION }}"
        cache: 'pip'

    - name: Install System Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt update && \
        sudo apt install -y --no-install-recommends \
          wget \
          build-essential \
          gcc \
          make \
          perl \
          libc6-dev && \
        sudo apt-get clean && \
        sudo rm -rf /var/lib/apt/lists/*

    - name: Install OpenSSL
      if: runner.os == 'Linux'
      run: |
        wget https://www.openssl.org/source/openssl-3.0.9.tar.gz \
        && tar -xvzf openssl-3.0.9.tar.gz \
        && cd openssl-3.0.9 \
        && ./Configure enable-fips \
        && make \
        && sudo make install

    # Configure environment for Visual Studio
    - name: Setup Visual Studio Environment
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $vswherePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe";
        $vsInstallPath = & $vswherePath -latest -products * -requires Microsoft.Component.MSBuild -property installationPath;
        $vsDevCmd = "$vsInstallPath\Common7\Tools\VsDevCmd.bat";
        echo "VS_DEV_CMD=$vsDevCmd" >> $env:GITHUB_ENV;

    # Install OpenSSL and FIPS
    - name: Download and Install OpenSSL with FIPS
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        $OPENSSL_VERSION = "3.0.9";
        Invoke-WebRequest -Uri "https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz" -OutFile "openssl-${OPENSSL_VERSION}.tar.gz";
        tar -xzf "openssl-${OPENSSL_VERSION}.tar.gz";
        cd "openssl-${OPENSSL_VERSION}";
        perl Configure VC-WIN64A enable-fips;
        nmake;
        nmake install;

    - name: Install Cryptography
      run: pip install cryptography

    # Verify OpenSSL Installation
    - name: Verify OpenSSL and FIPS Provider
      run: |
        # Check installed OpenSSL version
        openssl version -a
        # Confirm FIPS provider is installed
        openssl list -providers
