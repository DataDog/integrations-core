name: PR test

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string

      setup-env-vars:
        required: false
        default: ""
        type: string
      python-version:
        required: false
        default: ""
        type: string
      pytest-args:
        description: "Arguments to pass to pytest"
        required: false
        type: string
        default: ""

jobs:
  compute-matrix:
    uses: ./.github/workflows/compute-matrix.yml
    # this job always fails in the merge queue due to lack of
    # github.event.pull_request.head.sha and github.event.pull_request.base.sha,
    # and we don't run tests in the merge queue now so it's not needed
    if: github.event_name != 'merge_group'
    with:
      repo: "${{ inputs.repo }}"

  test:
    needs:
    - compute-matrix
    if: needs.compute-matrix.outputs.matrix != '[]' && github.event_name != 'merge_group'
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.compute-matrix.outputs.matrix) }}

    uses: ./.github/workflows/test-target.yml
    with:
      job-name: "${{ matrix.name }}"
      target: "${{ matrix.target }}"
      target-env: "${{ matrix.target-env }}"
      platform: "${{ matrix.platform }}"
      runner: "${{ toJson(matrix.runner) }}"
      repo: "${{ inputs.repo }}"

      # Options
      # We never test Python in integrations-core, but some partners may want to keep testing it
      # in marketplace and integrations-extras.
      test-py2: ${{ inputs.repo != 'core' && (!matrix.python-support || contains(matrix.python-support, '2')) }}
      test-py3: ${{ !matrix.python-support || contains(matrix.python-support, '3') }}

      # For other repositories
      setup-env-vars: "${{ inputs.setup-env-vars }}"
      python-version: "${{ inputs.python-version }}"
      pytest-args: ${{ inputs.pytest-args }}
    secrets: inherit

  test-minimum-base-package:
    needs:
    - compute-matrix
    if: needs.compute-matrix.outputs.matrix != '[]' && github.event_name != 'merge_group'
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.compute-matrix.outputs.matrix) }}

    uses: ./.github/workflows/test-target.yml
    with:
      job-name: "minimum-base-package-${{ matrix.name }}"
      target: "${{ matrix.target }}"
      target-env: "${{ matrix.target-env }}"
      platform: "${{ matrix.platform }}"
      runner: "${{ toJson(matrix.runner) }}"
      repo: "${{ inputs.repo }}"
      minimum-base-package: true

      # Options
      # We never test Python in integrations-core, but some partners may want to keep testing it
      # in marketplace and integrations-extras.
      test-py2: ${{ inputs.repo != 'core' && (!matrix.python-support || contains(matrix.python-support, '2')) }}
      test-py3: ${{ !matrix.python-support || contains(matrix.python-support, '3') }}

      # For other repositories
      setup-env-vars: "${{ inputs.setup-env-vars }}"
      python-version: "${{ inputs.python-version }}"
      pytest-args: ${{ inputs.pytest-args }}
    secrets: inherit

  save-event:
    needs:
    - test
    - test-minimum-base-package
    if: success() || failure()

    uses: ./.github/workflows/save-event.yml

  submit-traces:
    needs:
    - test
    - test-minimum-base-package
    if: inputs.repo == 'core' && (success() || failure()) && github.event.pull_request.head.repo.full_name == github.repository

    uses: ./.github/workflows/submit-traces.yml
    secrets: inherit

  upload-coverage:
    needs:
    - test
    - test-minimum-base-package
    if: >
      !github.event.repository.private &&
      (success() || failure()) &&
      inputs.pytest-args != '-m flaky'
    runs-on: ubuntu-latest
    permissions:
      # needed for codecov, allows the action to get a JWT signed by Github
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Download all coverage artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        pattern: coverage-*
        path: coverage-reports
        merge-multiple: false

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@15559ed290fa727036809b67ab0f646ffa6c5158
      with:
        use_oidc: true
        directory: coverage-reports
        fail_ci_if_error: false

  check:
    needs:
    - test
    - test-minimum-base-package
    # In integrations-core and integrations-extras repos the tests are flaky enough that
    # it would be a pain to merge PRs with the Merge Queue enabled.
    # While we work on the tests, we skip the job if it's triggered by Merge Queue.
    # Github treats skipped jobs as successful, thus we unblock the Merge Queue.
    if: always() && github.event_name != 'merge_group'
    runs-on: ubuntu-latest

    steps:
    - name: Check status of required jobs
      uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
        allowed-skips: test, test-minimum-base-package
