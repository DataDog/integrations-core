init_config:

    ## @param proxy - object - optional
    ## Set HTTP or HTTPS proxies for all instances. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

instances:

    ## @param name - string - required
    ## Unique identifier for this instance.
    #
  - name: <INSTANCE_NAME>

    ## @param user - object - required
    ## Password authentication is the only auth method supported
    ## User expects username, password, and user domain id
    ## `user` should resolve to a structure like
    ## {'password': '<PASSWORD>', 'name': '<USER_NAME>', 'domain': {'id': '<DOMAIN_ID>'}}
    ## The check uses the Unscoped token method to collect information about all available projects to the user.
    #
    user:
        password: <PASSWORD>
        name: <USER_NAME>
        domain:
            id: <DOMAIN_ID>

    ## @param whitelist_project_names - list of strings - optional - default: []
    ## IDs of projects to whitelist for monitoring (by default the agent collects limit metrics from all projects)
    ## Regex expressions for the project names are supported.
    ## Blacklist takes precedence over whitelist in case of overlap.
    #
    # whitelist_project_names:
    #   - <PROJECT_NAME>
    #   - <PROJECT_PREFIX>*

    ## @param blacklist_project_names - list of strings - optional - default: []
    ## IDs of projects to blacklist for monitoring (by default the agent collects limit metrics from all projects)
    ## Regex expressions for the project names are supported.
    ## Blacklist takes precedence over whitelist in case of overlap.
    #
    # blacklist_project_names:
    #   - <PROJECT_NAME>
    #   - <PROJECT_PREFIX>*

    ## @param exclude_server_ids - list of strings - optional - default: []
    ## IDs of servers to exclude from monitoring. (by default the agent collects metrics from all guest servers)
    ## Regex expressions for the server IDs are supported.
    #
    # exclude_server_ids:
    #   - <SERVER_ID>
    #   - <SERVER_ID_PREFIX>*

    ## @param exclude_network_ids - list of strings - optional - default: []
    ## IDs of networks to exclude from monitoring (by default the agent collects metrics from networks returned by the
    ## neutron:get_networks operation)
    ## Regex expressions for the network IDs to exclude are supported.
    #
    # exclude_network_ids:
    #   - <NETWORK_ID>
    #   - <NETWORK_ID_PREFIX>*

    ## @param use_agent_proxy - boolean - optional - default: true
    ## Whether the dd-agent proxy should also be used for openstack API requests (if set).
    #
    # use_agent_proxy: true

    ## @param paginated_limit - integer - optional - default: 1000
    ## paginated_limit sets the number of items some api calls should return.
    #
    # paginated_limit: 1000

    ## @param openstack_config_file_path - string - optional
    ## Absolute path of the configuration file for the connection to openstack with openstacksdk.
    #
    # openstack_config_file_path: <PATH_TO_YAML_FILE>

    ## @param openstack_cloud_name - string - optional
    ## Name of the cloud configuration to use.
    ## If this parameter is specified, the connection to Openstack will be using only the configuration file specified in
    ## openstack_config_file_path, or at the default location:
    ## ~/.config/openstack or /etc/openstack
    #
    # openstack_cloud_name: <CLOUD_NAME>

    ## @param keystone_server_url - string - optional
    ## URL of your identity server. NOTE: The server must support Identity API v3.
    ## This parameter is required if openstack_config_file_path or openstack_cloud_name are not specified.
    #
    # keystone_server_url: https://<KEYSTONE_ENDPOINT>:<PORT>/

    ## @param collect_hypervisor_load - boolean - optional - default: true
    ## Collects hypervisor_load.1/5/15 for each hypervisor
    ## Disabled by default to increase performance of the check.
    ## With this enabled there is an extra N requests per check run (N = # of hypervisors)
    ## If the Agent is installed on each hypervisor, this metric is available as system.load.1/5/15
    #
    # collect_hypervisor_load: true

    ## @param collect_hypervisor_metrics - boolean - optional - default: true
    ## Collects hypervisor metrics (including hypervisor_load).
    #
    # collect_hypervisor_metrics: true

    ## @param collect_project_metrics - boolean - optional - default: true
    ## The admin user defined for Datadog starts with a "default" project.
    ## If this option is disabled, project limits metrics are only collected from projects the
    ## datadog defined user has access to view.
    #
    # collect_project_metrics: true

    ## @param collect_network_metrics - boolean - optional - default: true
    ## Collects network metrics.
    #
    # collect_network_metrics: true

    ## @param collect_server_flavor_metrics - boolean - optional - default: true
    ## Collect server flavor metrics.
    #
    # collect_server_flavor_metrics: true

    ## @param collect_diagnostic_flavor_metrics - boolean - optional - default: true
    ## Collect server diagnostic metrics. Enabling this may result in performance decrease.
    ## This is fine for small deployments. For large deployment, turn it off and install the agent on VMs directly.
    #
    # collect_server_diagnostic_metrics: true

    ## @param use_shortname - boolean - optional - default: false
    ## In some OpenStack environments, the hostname registered to Nova is the shortname.
    ## Enabling this enforces the check to split the hostname up to the first period when
    ## comparing against nova responses. Only affects aggregate tagging.
    #
    # use_shortname: false

    ## @param tags - list of key:value elements - optional
    ## List of tags to attach to every metric, event and service check emitted by this integration.
    ## Note: server metrics override the host tag and thus do not get the host-level tags specified in datadog.(conf/yaml)
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param username - string - optional
    ## The username to use if services are behind basic auth.
    #
    # username: <USERNAME>

    ## @param ntlm_domain - string - optional
    ## If your services uses NTLM authentication, you can
    ## specify a domain that is used in the check. For NTLM Auth,
    ## append the username to domain, not as the `username` parameter.
    ## Example: <NTLM_DOMAIN>\<USERNAME>
    #
    # ntlm_domain: <DOMAIN>

    ## @param password - string - optional
    ## The password to use if services are behind basic or NTLM auth.
    #
    # password: <PASSWORD>

    ## @param connect_timeout - integer - optional
    ## Overrides the default connection timeout value,
    ## and fails the check if the time to establish the (TCP) connection
    ## exceeds the connect_timeout value (in seconds)
    #
    # connect_timeout: <VALUE_IN_SECOND>

    ## @param read_timeout - integer - optional
    ## Overrides the default received timeout value, and fails the check if the time to receive
    ## the server status from the server exceeds the read_timeout value (in seconds)
    #
    # read_timeout: <VALUE_IN_SECOND>

    ## @param proxy - object - optional
    ## This overrides the `proxy` setting in `init_config`.
    ##
    ## Set HTTP or HTTPS proxies. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## This overrides the `skip_proxy` setting in `init_config`.
    ##
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

    ## @param kerberos_auth - string - optional - default: disabled
    ## If your service uses Kerberos authentication, you can specify the Kerberos
    ## strategy to use between:
    ##  * required
    ##  * optional
    ##  * disabled
    ##
    ## See https://github.com/requests/requests-kerberos#mutual-authentication
    #
    # kerberos_auth: disabled

    ## @param kerberos_delegate - boolean - optional - default: false
    ## Set to `true` to enable kerberos delegation of credentials to a server that requests delegation.
    ## See https://github.com/requests/requests-kerberos#delegation
    #
    # kerberos_delegate: false

    ## @param kerberos_force_initiate - boolean - optional - default: false
    ## Set to `true` to preemptively initiate the Kerberos GSS exchange and present a Kerberos ticket on the initial
    ## request (and all subsequent requests).
    ## See https://github.com/requests/requests-kerberos#preemptive-authentication
    #
    # kerberos_force_initiate: false

    ## @param kerberos_hostname - string - optional
    ## Override the hostname used for the Kerberos GSS exchange if its DNS name doesn't match its kerberos
    ## hostname (e.g., behind a content switch or load balancer).
    ## See https://github.com/requests/requests-kerberos#hostname-override
    #
    # kerberos_hostname: null

    ## @param kerberos_principal - string - optional
    ## Set an explicit principal, to force Kerberos to look for a matching credential cache for the named user.
    ## See https://github.com/requests/requests-kerberos#explicit-principal
    #
    # kerberos_principal: null

    ## @param kerberos_keytab - string - optional
    ## Set the path to your Kerberos key tab file.
    #
    # kerberos_keytab: <KEYTAB_FILE_PATH>

    ## @param kerberos_cache - string - optional
    ## Sets the KRB5CCNAME environment variable.
    ## It should point to a credential cache with a valid TGT.
    #
    # kerberos_cache: <KRB5CCNAME>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## If `tls_verify` is disabled, security warnings are logged by the check.
    ## Disable these by setting `tls_ignore_warning` to true.
    ##
    ## Note: `tls_ignore_warning` set to true is currently only reliable if used by one instance of one integration. 
    ## If enabled for multiple instances, spurious warnings might still appear even if `tls_ignore_warning` is set
    ## to true.
    #
    # tls_ignore_warning: false

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificate’s authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param headers - list of key:value elements - optional
    ## The headers parameter allows you to send specific headers with every request.
    ## You can use it for explicitly specifying the host header or adding headers for
    ## authorization purposes.
    ##
    ## This overrides any default headers.
    #
    # headers:
    #   Host: <ALTERNATIVE_HOSTNAME>
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to services.
    #
    # timeout: 10

    ## @param log_requests - boolean - optional - default: false
    ## Whether or not to debug log the HTTP(S) requests made, including the method and URL.
    #
    # log_requests: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling for increased performance.
    #
    # persist_connections: false
