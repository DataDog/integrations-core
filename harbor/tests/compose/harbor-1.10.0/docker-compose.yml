services:
  registry:
    image: goharbor/registry-photon:v1.10.11
    container_name: registry
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - ./config/registry/config.yml:/etc/registry/config.yml
      - ../common/root.crt:/etc/registry/root.crt
    networks:
      - harbor-110
    dns_search: .
  # The following service is not essential for the integration tests and has been commented out to improve stability and startup time.
  # registryctl:
  #   image: goharbor/harbor-registryctl:v1.10.11
  #   container_name: registryctl
  #   env_file:
  #     - ./config/registryctl/env
  #   restart: always
  #   cap_drop:
  #     - ALL
  #   cap_add:
  #     - CHOWN
  #     - SETGID
  #     - SETUID
  #   volumes:
  #     - ./config/registryctl/config.yml:/etc/registryctl/config.yml
  #   networks:
  #     - harbor-110
  #   dns_search: .
  postgresql:
    image: goharbor/harbor-db:v1.10.11
    container_name: harbor-db
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    networks:
       - harbor-110
    dns_search: .
    env_file:
      - ./config/db/env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  core:
    image: goharbor/harbor-core:v1.10.11
    container_name: harbor-core
    env_file:
      - ./config/core/env
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    volumes:
      - type: bind
        source: ./config/core/app.conf
        target: /etc/core/app.conf
      - type: bind
        source: ./config/core/private_key.pem
        target: /etc/core/private_key.pem
      - type: bind
        source: ../common/secretkey
        target: /etc/core/key
    networks:
      harbor-110:
      harbor-chartmuseum-110:
        aliases:
          - harbor-core
    dns_search: .
    depends_on:
      registry:
        condition: service_started
      redis:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://127.0.0.1:8080/api/systeminfo -o /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
  # The following services are not essential for the integration tests and have been commented out to improve stability and startup time.
  # portal:
  #   image: goharbor/harbor-portal:v1.10.11
  #   container_name: harbor-portal
  #   user: root
  #   restart: always
  #   networks:
  #     - harbor-110
  #   dns_search: .
  #   depends_on:
  #     core:
  #       condition: service_healthy
  # jobservice:
  #   image: goharbor/harbor-jobservice:v1.10.11
  #   container_name: harbor-jobservice
  #   env_file:
  #     - ./config/jobservice/env
  #   restart: always
  #   cap_drop:
  #     - ALL
  #   cap_add:
  #     - CHOWN
  #     - SETGID
  #     - SETUID
  #   volumes:
  #     - type: bind
  #       source: ./config/jobservice/config.yml
  #       target: /etc/jobservice/config.yml
  #   networks:
  #     - harbor-110
  #   dns_search: .
  #   depends_on:
  #     core:
  #       condition: service_healthy
  redis:
    image: goharbor/redis-photon:v1.10.11
    container_name: redis
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    networks:
      harbor-110:
      harbor-chartmuseum-110:
        aliases:
          - redis
    dns_search: .
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  proxy:
    image: goharbor/nginx-photon:v1.10.11
    container_name: nginx
    restart: always
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE
    volumes:
      - ./config/nginx:/etc/nginx:z
      - ../common/cert/:/etc/cert:z
    networks:
      - harbor-110
    dns_search: .
    ports:
      - 80:8080
      - 443:8443
    depends_on:
      registry:
        condition: service_started
      core:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://core:8080/api/systeminfo -o /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
  # The following service is not essential for the integration tests and has been commented out to improve stability and startup time.
  # chartmuseum:
  #   container_name: chartmuseum
  #   image: goharbor/chartmuseum-photon:v1.10.11
  #   restart: always
  #   cap_drop:
  #     - ALL
  #   cap_add:
  #     - CHOWN
  #     - DAC_OVERRIDE
  #     - SETGID
  #     - SETUID
  #   networks:
  #     - harbor-chartmuseum-110
  #   dns_search: .
  #   volumes:
  #     - ./config/chartserver:/etc/chartserver:z
  #   env_file:
  #     ./config/chartserver/env
networks:
  harbor-110:
    external: false
  harbor-chartmuseum-110:
    external: false
