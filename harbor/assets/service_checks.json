[
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.status",
        "statuses": ["ok", "critical"],
        "name": "Overall status",
        "description": "Returns `OK` if the Harbor API is reachable and answers correctly, `CRITICAL` if connection is not possible or if the API says the registry is unhealthy."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.chartmuseum.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Chartmuseum` service",
        "description": "Service checks is not emitted if the chartmuseum is not configured. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.registry.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Registry` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.redis.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Redis` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.jobservice.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Jobservice` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.registryctl.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Registryctl` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.portal.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Portal` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwis.e"
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.core.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Core` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host"],
        "check": "harbor.component.database.status",
        "statuses": ["ok","critical"],
        "name": "Status of the `Database` service",
        "description": "Only available with Harbor > 1.8. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    },
    {
        "agent_version": "6.13.0",
        "integration": "harbor",
        "groups": ["host", "registry"],
        "check": "harbor.registry.status",
        "statuses": ["ok","critical"],
        "name": "External registries status",
        "description": "Monitor the health of external registries used by Harbor for replication. Returns `OK` if the service is healthy, `CRITICAL` otherwise."
    }
]
