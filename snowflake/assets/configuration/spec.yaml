name: Snowflake
files:
- name: snowflake.yaml
  options:
  - template: init_config
    options:
      - template: init_config/db
      - name: proxy
        value:
          example:
            http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
            https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
            no_proxy:
              - <HOSTNAME_1>
              - <HOSTNAME_2>
          type: object
          properties:
            - name: http
              type: string
            - name: https
              type: string
            - name: no_proxy
              type: array
              items:
                type: string
        description: |
          Set HTTP or HTTPS proxies for all instances. Use the `no_proxy` list
          to specify hosts that must bypass proxies.

          The SOCKS protocol is also supported like so:

            socks5://user:pass@host:port

          Using the scheme `socks5` causes the DNS resolution to happen on the
          client, rather than on the proxy server. This is in line with `curl`,
          which uses the scheme to decide whether to do the DNS resolution on
          the client or proxy. If you want to resolve the domains on the proxy
          server, use `socks5h` as the scheme.
      - name: skip_proxy
        value:
          example: false
          type: boolean
        description: |
          If set to `true`, this makes the check bypass any proxy
          settings enabled and attempt to reach services directly.
      - template: init_config/default
  - template: instances
    options:
      - name: account
        required: true
        description: |
          Name of your account (provided by Snowflake), including the platform and region if applicable.
          For more information on Snowflake account names,
          see https://docs.snowflake.com/en/user-guide/connecting.html#your-snowflake-account-name
        value:
          type: string
          example: <ACCOUNT>
      - name: user
        required: true
        description: Login name for the user.
        value:
          type: string
          example: <USER>
      - name: password
        required: true
        description: Password for the user
        value:
          type: string
          example: <PASSWORD>
      - name: database
        description: Name of the default database to use.
        value:
          type: string
          example: SNOWFLAKE
      - name: schema
        description: Name of the default schema to use for the database.
        value:
          type: string
          example: ACCOUNT_USAGE
      - name: role
        description: Name of the default role to use.
        value:
          type: string
          example: ACCOUNTADMIN
      - name: warehouse
        description: Name of the default warehouse to use.
        value:
          type: string
          example: <WAREHOUSE>
      - name: client_prefetch_threads
        description: |
          The number of threads used to download the results sets. Increasing the value improves fetch
          performance but requires more memory.
        value:
          type: integer
          example: 4
      - name: login_timeout
        description: |
          Timeout in seconds for login. The login request gives up after the timeout length if the HTTP response succeeds.
        value:
          type: integer
          example: 60
      - name: ocsp_response_cache_filename
        description: |
          Path for the OCSP response cache file. By default, the file is created in the cache directory:
            Linux   - ~/.cache/snowflake/ocsp_response_cache
            macOS   - ~/Library/Caches/Snowflake/ocsp_response_cache
            Windows - %USERPROFILE%\AppData\Local\Snowflake\Caches\ocsp_response_cache
        value:
          type: string
          example: <OCSP_RESPONSE_CACHE_FILENAME>
      - name: authenticator
        description: |
          Authenticator for Snowflake. The default `snowflake` uses the internal Snowflake authenticator.
          Use `oauth` to authenticate with OAuth, be sure to set the `token` option as well.
        value:
          type: string
          default: snowflake
      - name: token
        description: Token used for OAuth connection to Snowflake.
        value:
          type: string
      - name: client_session_keep_alive
        description: |
          If set to true, Snowflake keeps the session active indefinitely as long as the connection is active,
          even if there is no activity from the user.

          By default, the connection will need to be renewed after four hours of inactivity.
        value:
          type: boolean
          example: false
      - name: metric_groups
        description: |
          List Snowflake metric groups to collect. Metric groups are determined by the metric prefixes.

          The available metric groups are:

            - snowflake.query
            - snowflake.billing
            - snowflake.storage
            - snowflake.storage.database
            - snowflake.storage.table
            - snowflake.logins
            - snowflake.data_transfer
            - snowflake.auto_recluster
            - snowflake.pipe
            - snowflake.replication
        value:
          type: array
          items:
            type: string
          example:
            - snowflake.query
            - snowflake.billing
            - snowflake.storage
            - snowflake.logins
      - template: instances/db
        overrides:
          custom_queries.value.example:
            - query: SELECT foo, COUNT(*) FROM table.events GROUP BY foo
              columns:
                - name: foo
                  type: tag
                - name: event.total
                  type: gauge
              tags:
                - test:snowflake
      - name: proxy
        value:
          example:
            http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
            https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
            no_proxy:
              - <HOSTNAME_1>
              - <HOSTNAME_2>
          type: object
          properties:
            - name: http
              type: string
            - name: https
              type: string
            - name: no_proxy
              type: array
              items:
                type: string
        description: |
          This overrides the `proxy` setting in `init_config`.

          Set HTTP or HTTPS proxies for this instance. Use the `no_proxy` list
          to specify hosts that must bypass proxies.

          The SOCKS protocol is also supported, for example:

            socks5://user:pass@host:port

          Using the scheme `socks5` causes the DNS resolution to happen on the
          client, rather than on the proxy server. This is in line with `curl`,
          which uses the scheme to decide whether to do the DNS resolution on
          the client or proxy. If you want to resolve the domains on the proxy
          server, use `socks5h` as the scheme.
      - name: skip_proxy
        value:
          example: false
          type: boolean
        description: |
          This overrides the `skip_proxy` setting in `init_config`.

          If set to `true`, this makes the check bypass any proxy
          settings enabled and attempt to reach services directly.
      - template: instances/default
        overrides:
          min_collection_interval.description: |
            This changes the collection interval of the check. For more information, see:
            https://docs.datadoghq.com/developers/write_agent_check/#collection-interval

            NOTE: Most Snowflake ACCOUNT_USAGE views are populated on an hourly basis,
            so to minimize unnecessary queries the `min_collection_interval` defaults to 1 hour.

            Most metrics are aggregated by day, you can increase the interval to reduce the number of queries.
          min_collection_interval.default: 3600
          min_collection_interval.value.example: 3600
          min_collection_interval.enabled: 3600
