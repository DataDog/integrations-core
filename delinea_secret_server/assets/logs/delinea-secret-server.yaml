id: delinea-secret-server
metric_id: delinea-secret-server
backend_only: false
facets:
  - groups:
      - Geoip
    name: City Name
    path: network.client.geoip.city.name
    source: log
  - groups:
      - Geoip
    name: Continent Code
    path: network.client.geoip.continent.code
    source: log
  - groups:
      - Geoip
    name: Continent Name
    path: network.client.geoip.continent.name
    source: log
  - groups:
      - Geoip
    name: Country ISO Code
    path: network.client.geoip.country.iso_code
    source: log
  - groups:
      - Geoip
    name: Country Name
    path: network.client.geoip.country.name
    source: log
  - groups:
      - Geoip
    name: Subdivision ISO Code
    path: network.client.geoip.subdivision.iso_code
    source: log
  - groups:
      - Geoip
    name: Subdivision Name
    path: network.client.geoip.subdivision.name
    source: log
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
  - groups:
      - User
    name: User ID
    path: usr.id
    source: log
  - groups:
      - User
    name: User Name
    path: usr.name
    source: log
pipeline:
  type: pipeline
  name: Delinea Secret Server
  enabled: true
  filter:
    query: source:delinea-secret-server
  processors:
    - type: grok-parser
      name: Parsing the log of Delinea Secret Server
      enabled: true
      source: message
      samples:
        - "2025-02-27T10:00:27.461Z DSS-01 CEF:0|Thycotic Software|Secret
          Server|11.7.000061|10004|SECRET - VIEW|2|msg=[[SecretServer]] Event:
          [Secret] Action: [View] By User: admin Item name: Test SSH KeyTemplate
          (Item Id: 9) Container name: admin (Container Id: 2)  suid=2
          suser=admin cs4=admin cs4Label=suser Display Name src=10.10.10.10
          rt=Feb 27 2025 10:00:26 fname=Test SSH KeyTemplate fileType=Secret
          fileId=9 cs3Label=Folder cs3=admin"
        - "2025-02-25T07:19:03.058Z DSS-01 CEF:0|Thycotic Software|Secret
          Server|11.7.000061|10140|GROUP - CREATE|2|msg=[[SecretServer]] Event:
          [Group] Action: [Create] By User: admin Item name: Dev-Team (Item Id:
          5)  suid=2 suser=admin cs4=admin cs4Label=suser Display Name
          src=10.10.10.10 rt=Feb 25 2025 07:19:01"
        - "2025-02-26T06:46:47.420Z DSS-01 CEF:0|Thycotic Software|Secret
          Server|11.7.000061|19|USER - PASSWORDCHANGE|2|msg=[[SecretServer]]
          Event: [User] Action: [Password change] By User: john Item name:
          john (Item Id: 4)  suid=4 suser=john cs4=john cs4Label=suser
          Display Name duser=john duid=4 fname=john fileType=User fileId=4
          src=10.10.10.10 rt=Feb 26 2025 06:46:37"
        - "2025-02-25T07:00:33.005Z DSS-01 CEF:0|Thycotic Software|Secret
          Server|11.7.000061|15|CONFIGURATION - EDIT|2|msg=[[SecretServer]]
          Event: [Configuration] Action: [Edit] By User: admin
          Details:  AuthenticateAgainstActiveDirectory: false to true;
          EnableActiveDirectoryIntegration: false to true;
          AllowActiveDirectorySynchronization: false to true;
          EnableAutomaticADUserDisabling: false to true;
          AutomaticADUserDisablingIntervalMonths: blank to 3; suid=2 suser=admin
          cs4=admin cs4Label=suser Display Name src=10.10.10.10 rt=Feb 25 2025
          07:00:26"
        - '2025-02-27T12:28:37.382Z DSS-01 CEF:0|Thycotic Software|Secret
          Server|11.7.000061|10052|SECRETPOLICY - EDIT|2|msg=[[SecretServer]]
          Event: [Secret policy] Action: [Edit] By User: admin Item name: Test
          (Item Id: 1) Details:  Require check out changed (Setting: "Not Set"
          to "Enforced", Value: "< Not Set >" to "Yes"), Event pipeline policy
          changed (Setting: "Not Set" to "Enforced", Value: "" to "0"), Editors
          also Require Approval changed (Value: "< Not Set >" to "No"), Owners
          and Approvers also Require Approval changed (Value: "< Not Set >" to
          "No"), Enable session recording changed (Setting: "Not Set" to
          "Enforced", Value: "< Not Set >" to "Yes"), Run Launcher using SSH Key
          changed (Setting: "Not Set" to "Enforced", Value: "< None >" to
          "SecretId: 9") suid=2 suser=admin cs4=admin cs4Label=suser Display
          Name src=10.10.10.10 rt=Feb 27 2025 12:28:31'
      grok:
        supportRules: >-
          extract_data_till_pipe_delimited %{regex("[^|]*")}

          extract_key_value_pair %{data::keyvalue("=","\\]\\[{}\"\" :;,/!''\\(\\)*~#&$%^?+\\\\<>`")}
        matchRules: >
          delinea_secret_server_rule
          %{extract_data_till_pipe_delimited}\|%{extract_data_till_pipe_delimited}\|%{extract_data_till_pipe_delimited:application_name}\|%{extract_data_till_pipe_delimited:application_version}\|%{extract_data_till_pipe_delimited:action_id}\|%{extract_data_till_pipe_delimited:event}\|%{integer:syslog.severity}\|%{extract_key_value_pair}
    - type: grok-parser
      name: Extract action from event
      enabled: true
      source: event
      samples:
        - SECRET - ACCESS_APPROVED
        - System Log
        - SECRET - PASSWORD CHANGE MAX ATTEMPTS REACHED
        - SECRET - EXPIRES07DAYS
      grok:
        supportRules: parse_event_type %{regex("[A-Za-z0-9\\s_]*")}
        matchRules: >-
          extract_action %{word: event_type:lowercase} - %{parse_event_type:
          action:lowercase}


          exctract_event_type %{parse_event_type: event_type:lowercase}
    - type: grok-parser
      name: Parsing the `rt` attribute to convert it into milliseconds
      enabled: true
      source: rt
      samples:
        - Feb 26 2025 06:47:18
      grok:
        supportRules: ""
        matchRules: convert_to_millisecond %{date("MMM dd yyyy HH:mm:ss"):rt}
    - type: date-remapper
      name: Define `rt` as the official date of the log
      enabled: true
      sources:
        - rt
    - type: pipeline
      name: Extract item details
      enabled: true
      filter:
        query: "@event_type:(secretpolicy OR secrettemplate OR siteconnector OR
          ipaddressrange OR group OR site OR engine OR user  OR scriptpowershell
          OR scriptsql OR scriptssh)"
      processors:
        - type: grok-parser
          name: Extract item details from msg
          enabled: true
          source: msg
          samples:
            - '[[SecretServer]] Event: [Secret policy] Action: [Create] By User:
              admin Item name: Test (Item Id: 1) Details:  admin created secret
              policy "Test".'
            - '[[SecretServer]] Event: [Secret policy] Action: [Edit] By User:
              admin Item name: Test (Item Id: 1) Details:  Require check out
              changed (Setting: "Not Set" to "Enforced", Value: "< Not Set >" to
              "Yes"), Event pipeline policy changed (Setting: "Not Set" to
              "Enforced", Value: "" to "0"), Editors also Require Approval
              changed (Value: "< Not Set >" to "No"), Owners and Approvers also
              Require Approval changed (Value: "< Not Set >" to "No"), Enable
              session recording changed (Setting: "Not Set" to "Enforced",
              Value: "< Not Set >" to "Yes"), Run Launcher using SSH Key changed
              (Setting: "Not Set" to "Enforced", Value: "< None >" to "SecretId:
              9")'
            - "[[SecretServer]] Event: [Secret template] Action: [Create] By
              User: admin Item name: Test for log creation (Item Id: 6054)"
            - "[[SecretServer]] Event: [IP address range] Action: [Delete] By
              User: admin Details:  Test pipeline"
          grok:
            supportRules: skip_data %{regex(".*(?=\\])")}\]
            matchRules: >-
              extract_item_with_details %{regex(".*(?= Event)")} Event:
              %{skip_data} Action: %{skip_data} By User: %{regex(".*(?= Item
              name)")} Item name: %{regex(".*(?= \\(Item Id)"):item_name} \(Item
              Id: %{integer:item_id}\)( Details:\s+%{data:details})?


              extract_details %{regex(".*(?= Event)")} Event: %{skip_data} Action: %{skip_data} By User: %{regex(".*(?= Details)")} Details:\s+%{data:details}
    - type: pipeline
      name: Extract container details
      enabled: true
      filter:
        query: "@event_type:(secret OR folder)"
      processors:
        - type: grok-parser
          name: Extract container details from msg
          enabled: true
          source: msg
          samples:
            - "[[SecretServer]] Event: [Secret] Action: [View] By User: admin
              Item name: Test Secret (Item Id: 5) Container name: Windows
              (Container Id: 4) Details:   Account Name: administrator  Account
              Domain: test-dns.local"
            - "[[SecretServer]] Event: [Secret] Action: [Edit] By User: admin
              Item name: Test Secret (Item Id: 5) Container name: Windows
              (Container Id: 4) Details:  Settings: (Inherit Secret Policy)
              Account Name: administrator  Account Domain: test-dns.local"
            - "[[SecretServer]] Event: [Secret] Action: [Edit] By User: admin
              Item name: Test Secret (Item Id: 5) Container name: admin
              (Container Id: 2) Details:  John Peter (Granted View)
              Account Name: admin"
            - "[[SecretServer]] Event: [Secret] Action: [Password displayed] By
              User: admin Item name: Test Secret (Item Id: 5) Details:  Fields:
              (Client Secret) Account Domain: test-dns.local"
          grok:
            supportRules: skip_data %{regex(".*(?=\\])")}\]
            matchRules: >-
              extract_account_details %{regex(".*(?= Event)")} Event:
              %{skip_data} Action: %{skip_data} By User: %{regex(".*(?= Item)")}
              Item name: %{regex(".*(?= \\(Item Id)"):item_name} \(Item Id:
              %{integer:item_id}\)( Container name: %{regex(".*(?=
              \\(Container)"):folder_name} \(Container Id:
              %{integer:folder_id}\))? (Details:\s+%{regex(".*(?= Account
              Name)"):details} Account Name: %{regex(".*(?=  Account
              Domain)"):account_name}  Account Domain:
              %{data:account_domain}|Details:\s+%{regex(".*(?= Account
              Name)"):details} Account Name:
              %{data:account_name}|Details:\s+%{regex(".*(?= Account
              Domain)"):details} Account Domain: %{data:account_domain})


              extract_details %{regex(".*(?= Event)")} Event: %{skip_data} Action: %{skip_data} By User: %{regex(".*(?= Item)")} Item name: %{regex(".*(?= \\(Item Id)"):item_name} \(Item Id: %{integer:item_id}\)( Container name: %{regex(".*(?= \\(Container)"):folder_name} \(Container Id: %{integer:folder_id}\))?( Details:\s+%{data:details})?
        - type: category-processor
          name: Check the log for secret's permission changes
          enabled: true
          categories:
            - filter:
                query: "@event_type:secret @action:edit @details:(*Granted* OR *Revoked*)"
              name: "true"
          target: is_permission_changed
    - type: attribute-remapper
      name: Map `fname` to `item_name`
      enabled: true
      sources:
        - fname
      sourceType: attribute
      target: item_name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: true
    - type: attribute-remapper
      name: Map `fileId` to `item_id`
      enabled: true
      sources:
        - fileId
      sourceType: attribute
      target: item_id
      targetType: attribute
      preserveSource: false
      overrideOnConflict: true
    - type: attribute-remapper
      name: Map `fileType` to `item_type`
      enabled: true
      sources:
        - fileType
      sourceType: attribute
      target: item_type
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `src` to `network.client.ip`
      enabled: true
      sources:
        - src
      sourceType: attribute
      target: network.client.ip
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs1` to `role`
      enabled: true
      sources:
        - cs1
      sourceType: attribute
      target: role
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs2` to `group_or_user`
      enabled: true
      sources:
        - cs2
      sourceType: attribute
      target: group_or_user
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs3` to `folder_name`
      enabled: true
      sources:
        - cs3
      sourceType: attribute
      target: folder_name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: true
    - type: attribute-remapper
      name: Map `cs4` to `suser_display_name`
      enabled: true
      sources:
        - cs4
      sourceType: attribute
      target: suser_display_name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `suser` to `usr.name`
      enabled: true
      sources:
        - suser
      sourceType: attribute
      target: usr.name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `suid` to `usr.id`
      enabled: true
      sources:
        - suid
      sourceType: attribute
      target: usr.id
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs1Label` to `attributeLabels.cs1Label`
      enabled: true
      sources:
        - cs1Label
      sourceType: attribute
      target: attributeLabels.cs1Label
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs2Label` to `attributeLabels.cs2Label`
      enabled: true
      sources:
        - cs2Label
      sourceType: attribute
      target: attributeLabels.cs2Label
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs3Label` to `attributeLabels.cs3Label`
      enabled: true
      sources:
        - cs3Label
      sourceType: attribute
      target: attributeLabels.cs3Label
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `cs4Label` to `attributeLabels.cs4Label`
      enabled: true
      sources:
        - cs4Label
      sourceType: attribute
      target: attributeLabels.cs4Label
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: message-remapper
      name: Define `msg` as the official message of the log
      enabled: true
      sources:
        - msg
    - type: category-processor
      name: Categorize severity
      enabled: true
      categories:
        - filter:
            query: "@syslog.severity:[0 TO 3]"
          name: info
        - filter:
            query: "@syslog.severity:[4 TO 6]"
          name: notice
        - filter:
            query: "@syslog.severity:[7 TO 8]"
          name: warning
        - filter:
            query: "@syslog.severity:[9 TO 10]"
          name: critical
      target: severity
    - type: status-remapper
      name: Define `severity` as the official status of the log
      enabled: true
      sources:
        - severity
    - type: geo-ip-parser
      name: GeoIP Parser for `network.client.ip`
      enabled: true
      sources:
        - network.client.ip
      target: network.client.geoip
      ip_processing_behavior: do-nothing
