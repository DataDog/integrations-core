id: linux-audit-logs
metric_id: linux-audit-logs
backend_only: false
facets:
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
  - groups:
      - User
    name: User Name
    path: usr.name
    source: log
  - groups:
      - User
    name: User ID
    path: usr.id
    source: log
  - description: ""
    facetType: list
    groups:
      - Linux Audit Logs
    name: Config
    path: linux_audit_logs.bool
    source: log
    type: string
pipeline:
  type: pipeline
  name: Linux Audit Logs
  enabled: true
  filter:
    query: source:linux-audit-logs
  processors:
    - type: grok-parser
      name: Parsing Linux Audit Logs
      enabled: true
      source: message
      samples:
        - "type=USER_MAC_CONFIG_CHANGE msg=audit(1736329118.112:6532):
          pid=381980 uid=0 auid=0 ses=138
          subj=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023
          msg='resrc=port op=add lport=3307 proto=6
          tcontext=system_u:object_r:mysqld_port_t:s0 comm=\"semanage\"
          exe=\"/usr/libexec/platform-python3.6\" hostname=? addr=? terminal=?
          res=success'UID=\"root\" AUID=\"root\""
        - 'type=USER_MAC_CONFIG_CHANGE msg=audit(1736329118.112:6532):
          bool=virt_use_nfs val=1 old_val=0 auid=1000 res=1AUID="serviceuser"'
        - "type=USER_CHAUTHTOK msg=audit(1740980379.836:5762): pid=12243 uid=0
          auid=1001 ses=535 subj=unconfined msg='op=changing uid id=1005
          exe=\"/usr/sbin/usermod\" hostname=ub24-50-5-60 addr=? terminal=pts/3
          res=success'UID=\"root\" AUID=\"serviceuser\" ID=\"unknown(1005)\""
        - 'type=AVC msg=audit(1740636680.316:24484): apparmor="ALLOWED"
          operation="signal" class="signal" profile="/usr/sbin/nginx" pid=87437
          comm="start-stop-daem" requested_mask="receive" denied_mask="receive"
          signal=exists peer="unconfined"'
        - "type=USER_AUTH msg=audit(1742208279.692:9814): pid=41848 uid=0
          auid=1002 ses=913 subj=unconfined msg='op=PAM:authentication
          grantors=pam_rootok acct=\"root\" exe=\"/usr/bin/su\" hostname=?
          addr=? terminal=/dev/pts/1 res=success'\x1dUID=\"root\"
          AUID=\"devuser\""
      grok:
        supportRules: >-
          extract_UID_or_OUID
          (UID="%{regex("[^\"]*"):UID}"|OUID="%{regex("[^\"]*"):OUID}")

          extract_AUID AUID="%{regex("[^\"]*"):AUID}"

          log_prefix type=%{notSpace:type} msg=audit\(%{regex("[^:]*"):timestamp}:%{integer}\):

          _space %{regex("(\\s)*"):}
        matchRules: >-
          common_rule
          %{log_prefix}%{_space}%{data::keyvalue("=",":?/,")}%{_space}(msg='%{data:msg:keyvalue("=",":?/,
          ")}')?%{_space}(%{regex("[\\p{C}]")})?(%{extract_AUID}|%{extract_UID_or_OUID}|%{extract_AUID}%{_space}%{extract_UID_or_OUID}|%{extract_UID_or_OUID}%{_space}%{extract_AUID})%{data::keyvalue("=",":?/,")}

          rule_without_AUID_UID %{log_prefix}%{_space}(avc:%{_space}%{notSpace:outcome:uppercase}%{_space}\{%{_space}%{notSpace:operation}%{_space}\} for )?%{data::keyvalue("=",":?/,")}
    - type: grok-parser
      name: Convert `msg.grantors` attribute to array
      enabled: true
      source: msg.grantors
      samples:
        - pam_localuser,pam_unix
      grok:
        supportRules: ""
        matchRules: grantors_rule %{notSpace:msg.grantors:array("",",")}
    - type: grok-parser
      name: Convert `msg.op` attribute to array
      enabled: true
      source: msg.op
      samples:
        - seuser-role,range
      grok:
        supportRules: ""
        matchRules: grantors_rule %{data:msg.op:array("",",")}
    - type: arithmetic-processor
      name: Convert `timestamp` epoch to milliseconds epoch
      enabled: true
      expression: timestamp*1000
      target: timestamp
      replaceMissing: false
    - type: date-remapper
      name: Define `timestamp` as the official date of the log
      enabled: true
      sources:
        - timestamp
    - type: service-remapper
      name: Define `service` as the official service of the log
      enabled: true
      sources:
        - service
    - type: attribute-remapper
      name: Map `msg.addr` to `network.client.ip`
      enabled: true
      sources:
        - msg.addr
      sourceType: attribute
      target: network.client.ip
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: pipeline
      name: Map `AUID` when `UID` is not present
      enabled: true
      filter:
        query: "@AUID:* -@UID:*"
      processors:
        - type: attribute-remapper
          name: Map `AUID` to `usr.name`
          enabled: true
          sources:
            - AUID
          sourceType: attribute
          target: usr.name
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: attribute-remapper
      name: Map `UID`,`OUID` to `usr.name`
      enabled: true
      sources:
        - UID
        - OUID
      sourceType: attribute
      target: usr.name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: pipeline
      name: Map `auid` when `uid` is not present
      enabled: true
      filter:
        query: "@auid:* -@uid:*"
      processors:
        - type: attribute-remapper
          name: Map `auid` to `usr.id`
          enabled: true
          sources:
            - auid
          sourceType: attribute
          target: usr.id
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: attribute-remapper
      name: Map `uid` to `usr.id`
      enabled: true
      sources:
        - uid
      sourceType: attribute
      target: usr.id
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: pipeline
      name: Parsing Mac Config Change Logs
      enabled: true
      filter:
        query: "@type:MAC_CONFIG_CHANGE"
      processors:
        - type: attribute-remapper
          name: Map `bool` to `linux_audit_logs.bool`
          enabled: true
          sources:
            - bool
          sourceType: attribute
          target: linux_audit_logs.bool
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: pipeline
      name: Parsing AVC Logs
      enabled: true
      filter:
        query: "@type:AVC"
      processors:
        - type: attribute-remapper
          name: Map `apparmor` to `outcome`
          enabled: true
          sources:
            - apparmor
          sourceType: attribute
          target: outcome
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - name: Lookup on `res` to `msg.res` Field
      enabled: true
      source: res
      target: msg.res
      lookupTable: |-
        0,failed
        1,success
      type: lookup-processor
    - type: geo-ip-parser
      name: Extract geolocation information
      enabled: true
      sources:
        - network.client.ip
      target: network.client.geoip
      ip_processing_behavior: do-nothing
