init_config:

  ## @param is_jmx - boolean - required - default: true
  ## Whether or not this file is a configuration for a JMX integration
  #
  is_jmx: true

  ## @param collect_default_metrics - boolean - required - default: true
  ## Whether or not the check should collect all default metrics for this integration.
  #
  collect_default_metrics: true

instances:

    ## @param host - string - required
    ## Presto host to connect to.
    #
  - host: localhost

    ## @param port - integer - required
    ## Presto port to connect to.
    #
    port: 9999

    ## @param tags - list of key:value elements - optional
    ## List of tags to attach to every metric, event, and service check emitted by this Integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param user - string - optional
    ## Username to use when connecting to presto.
    #
    # user: <USERNAME>

    ## @param password - string - optional
    ## Password to use when connecting to presto.
    #
    # password: <PASSWORD>

    ## @param process_name_regex - string - optional
    ## Instead of specifying a host, and port. The agent can connect using the attach api.
    ## This requires the JDK to be installed and the path to tools.jar to be set below.
    ## Note: It needs to be set when process_name_regex parameter is set
    ##
    #
    # process_name_regex: .*process_name.*

    ## @param tools_jar_path - string - optional
    ## Path to the tool.jar file to use with `process_name_regex` parameter.
    #
    # tools_jar_path: /usr/lib/jvm/java-7-openjdk-amd64/lib/tools.jar

    ## @param name - string - optional
    ## Set your instance name.
    #
    # name: presto_instance

    ## @param java_bin_path - string - optional
    ## java_bin_path should be set if the agent cannot find your java executable
    #
    # java_bin_path: <JAVA_PATH>

    ## @param java_options - string - optional
    ## List of Java JVM options.
    #
    # java_options: "-Xmx200m -Xms50m"

    ## @param trust_store_path - string - optional
    ## trust_store_path should be set if ssl is enabled.
    ## path to your trusted store
    #
    # trust_store_path: <TRUSTSTORE.JKS_PATH>

    ## @param trust_store_password - string - optional
    ## trust_store_password should be set if ssl is enabled
    ## password for your TrustStore.jks file
    #
    # trust_store_password: password

    ## @param key_store_path - string - optional
    ## key_store_path should be set if client authentication is enabled on the target JVM.
    ## path to your key store
    #
    # key_store_path: <KEYSTORE.JKS_PATH>

    ## @param key_store_password - string - optional
    ## key_store_password should be set if client authentication is enabled on the target JVM.
    ## password for your KeyStore.jks file
    #
    # key_store_password: <PASSWORD>

    ## @param rmi_registry_ssl - boolean - optional - default: false
    ## Whether or not the agent should connect to the rmi registry using ssl.
    #
    # rmi_registry_ssl: false

    ## @param conf - list of objects - required
    ## List of metrics to be collected by the integration
    ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
    ## Agent 5: Customize all your metrics below
    ## Agent 6: The default metrics to be collected are kept in metrics.yaml, but you can still add your own metrics here
    #
    conf:
      - include:
          bean: presto.execution:name=QueryManager
          attribute:
            AbandonedQueries.OneMinute.Count:
              alias: presto.execution.abandoned_queries.one_minute.count
            AbandonedQueries.OneMinute.Rate:
              alias: presto.execution.abandoned_queries.one_minute.rate
            AbandonedQueries.TotalCount:
              alias: presto.execution.abandoned_queries.total_count
            CanceledQueries.OneMinute.Count:
              alias: presto.execution.canceled_queries.one_minute.count
            CanceledQueries.OneMinute.Rate:
              alias: presto.execution.canceled_queries.one_minute.rate
            CanceledQueries.TotalCount:
              alias: presto.execution.canceled_queries.total_count
            CompletedQueries.OneMinute.Count:
              alias: presto.execution.completed_queries.one_minute.count
            CompletedQueries.OneMinute.Rate:
              alias: presto.execution.completed_queries.one_minute.rate
            CompletedQueries.TotalCount:
              alias: presto.execution.completed_queries.total_count
            ConsumedCpuTimeSecs.OneMinute.Count:
              alias: presto.execution.consumed_cpu_time_secs.one_minute.count
            ConsumedCpuTimeSecs.OneMinute.Rate:
              alias: presto.execution.consumed_cpu_time_secs.one_minute.rate
            ConsumedCpuTimeSecs.TotalCount:
              alias: presto.execution.consumed_cpu_time_secs.total_count
            CpuInputByteRate.AllTime.Avg:
              alias: presto.execution.cpu_input_byte_rate.all_time.avg
            CpuInputByteRate.AllTime.P75:
              alias: presto.execution.cpu_input_byte_rate.all_time.p75
            CpuInputByteRate.AllTime.P95:
              alias: presto.execution.cpu_input_byte_rate.all_time.p95
            CpuInputByteRate.OneMinute.Avg:
              alias: presto.execution.cpu_input_byte_rate.one_minute.avg
            CpuInputByteRate.OneMinute.Count:
              alias: presto.execution.cpu_input_byte_rate.one_minute.count
            CpuInputByteRate.OneMinute.Max:
              alias: presto.execution.cpu_input_byte_rate.one_minute.max
            CpuInputByteRate.OneMinute.Min:
              alias: presto.execution.cpu_input_byte_rate.one_minute.min
            CpuInputByteRate.OneMinute.P75:
              alias: presto.execution.cpu_input_byte_rate.one_minute.p75
            CpuInputByteRate.OneMinute.P95:
              alias: presto.execution.cpu_input_byte_rate.one_minute.p95
            CpuInputByteRate.OneMinute.Total:
              alias: presto.execution.cpu_input_byte_rate.one_minute.total
            ExecutionTime.AllTime.Avg:
              alias: presto.execution.execution_time.all_time.avg
            ExecutionTime.AllTime.Count:
              alias: presto.execution.execution_time.all_time.count
            ExecutionTime.AllTime.Max:
              alias: presto.execution.execution_time.all_time.max
            ExecutionTime.AllTime.Min:
              alias: presto.execution.execution_time.all_time.min
            ExecutionTime.AllTime.P75:
              alias: presto.execution.execution_time.all_time.p75
            ExecutionTime.AllTime.P95:
              alias: presto.execution.execution_time.all_time.p95
            ExecutionTime.OneMinute.Avg:
              alias: presto.execution.execution_time.one_minute.avg
            ExecutionTime.OneMinute.Max:
              alias: presto.execution.execution_time.one_minute.max
            ExecutionTime.OneMinute.Min:
              alias: presto.execution.execution_time.one_minute.min
            ExecutionTime.OneMinute.P75:
              alias: presto.execution.execution_time.one_minute.p75
            ExecutionTime.OneMinute.P95:
              alias: presto.execution.execution_time.one_minute.p95
            Executor.ActiveCount:
              alias: presto.execution.executor.active_count
            Executor.CompletedTaskCount:
              alias: presto.execution.executor.completed_task_count
            Executor.CorePoolSize:
              alias: presto.execution.executor.core_pool_size
            Executor.PoolSize:
              alias: presto.execution.executor.pool_size
            Executor.QueuedTaskCount:
              alias: presto.execution.executor.queued_task_count
            Executor.TaskCount:
              alias: presto.execution.executor.task_count
            ExternalFailures.OneMinute.Count:
              alias: presto.execution.external_failures.one_minute.count
            ExternalFailures.OneMinute.Rate:
              alias: presto.execution.external_failures.one_minute.rate
            ExternalFailures.TotalCount:
              alias: presto.execution.external_failures.total_count
            FailedQueries.OneMinute.Count:
              alias: presto.execution.failed_queries.one_minute.count
            FailedQueries.OneMinute.Rate:
              alias: presto.execution.failed_queries.one_minute.rate
            FailedQueries.TotalCount:
              alias: presto.execution.failed_queries.total_count
            InsufficientResourcesFailures.OneMinute.Count:
              alias: presto.execution.insufficient_resources_failures.one_minute.count
            InsufficientResourcesFailures.OneMinute.Rate:
              alias: presto.execution.insufficient_resources_failures.one_minute.rate
            InsufficientResourcesFailures.TotalCount:
              alias: presto.execution.insufficient_resources_failures.total_count
            InternalFailures.OneMinute.Count:
              alias: presto.execution.internal_failures.one_minute.count
            InternalFailures.OneMinute.Rate:
              alias: presto.execution.internal_failures.one_minute.rate
            InternalFailures.TotalCount:
              alias: presto.execution.internal_failures.total_count
            ManagementExecutor.ActiveCount:
              alias: presto.execution.management_executor.active_count
            ManagementExecutor.CompletedTaskCount:
              alias: presto.execution.management_executor.completed_task_count
            ManagementExecutor.QueuedTaskCount:
              alias: presto.execution.management_executor.queued_task_count
            RunningQueries:
              alias: presto.execution.running_queries
            StartedQueries.OneMinute.Count:
              alias: presto.execution.started_queries.one_minute.count
            StartedQueries.OneMinute.Rate:
              alias: presto.execution.started_queries.one_minute.rate
            StartedQueries.TotalCount:
              alias: presto.execution.started_queries.total_count
            UserErrorFailures.OneMinute.Count:
              alias: presto.execution.user_error_failures.one_minute.count
            UserErrorFailures.OneMinute.Rate:
              alias: presto.execution.user_error_failures.one_minute.rate
            UserErrorFailures.TotalCount:
              alias: presto.execution.user_error_failures.total_count
            WallInputBytesRate.OneMinute.Avg:
              alias: presto.execution.wall_input_bytes_rate.one_minute.avg
            WallInputBytesRate.OneMinute.Max:
              alias: presto.execution.wall_input_bytes_rate.one_minute.max
            WallInputBytesRate.OneMinute.Min:
              alias: presto.execution.wall_input_bytes_rate.one_minute.min
            WallInputBytesRate.OneMinute.P75:
              alias: presto.execution.wall_input_bytes_rate.one_minute.p75
            WallInputBytesRate.OneMinute.P95:
              alias: presto.execution.wall_input_bytes_rate.one_minute.p95
      - include:
          bean: presto.execution.executor:name=TaskExecutor
          attribute:
            BlockedSplits:
              alias: presto.execution.executor.blocked_splits
            ProcessorExecutor.QueuedTaskCount:
              alias: presto.execution.executor.processor_executor.queued_task_count
            RunningSplits:
              alias: presto.execution.executor.running_splits
            TotalSplits:
              alias: presto.execution.executor.total_splits
            WaitingSplits:
              alias: presto.execution.executor.waiting_splits

      - include:
          bean: presto.execution:name=TaskManager
          attribute:
            InputDataSize.OneMinute.Count:
              alias: presto.execution.input_data_size.one_minute.count
            InputDataSize.OneMinute.Rate:
              alias: presto.execution.input_data_size.one_minute.rate
            InputDataSize.TotalCount:
              alias: presto.execution.input_data_size.total_count
            InputPositions.OneMinute.Count:
              alias: presto.execution.input_positions.one_minute.count
            InputPositions.OneMinute.Rate:
              alias: presto.execution.input_positions.one_minute.rate
            InputPositions.TotalCount:
              alias: presto.execution.input_positions.total_count
            OutputDataSize.OneMinute.Count:
              alias: presto.execution.output_data_size.one_minute.count
            OutputDataSize.OneMinute.Rate:
              alias: presto.execution.output_data_size.one_minute.rate
            OutputDataSize.TotalCount:
              alias: presto.execution.output_data_size.total_count
            OutputPositions.OneMinute.Count:
              alias: presto.execution.output_positions.one_minute.count
            OutputPositions.OneMinute.Rate:
              alias: presto.execution.output_positions.one_minute.rate
            OutputPositions.TotalCount:
              alias: presto.execution.output_positions.total_count
            TaskNotificationExecutor.ActiveCount:
              alias: presto.execution.task_notification_executor.active_count
            TaskNotificationExecutor.CompletedTaskCount:
              alias: presto.execution.task_notification_executor.completed_task_count
            TaskNotificationExecutor.PoolSize:
              alias: presto.execution.task_notification_executor.pool_size,gauge
            TaskNotificationExecutor.QueuedTaskCount:
              alias: presto.execution.task_notification_executor.queued_task_count
      - include:
          bean:
            - presto.failureDetector:name=HeartbeatFailureDetector
          attribute:
            ActiveCount:
              alias: presto.failure_detector.active_count
      - include:
          domain: presto.memory
          attribute:
            AssignedQueries:
              alias: presto.memory.assigned_queries,gauge
            BlockedNodes:
              alias: presto.memory.blocked_nodes
            ClusterMemoryBytes:
              alias: presto.memory.cluster_memory_bytes
            FreeBytes:
              alias: presto.memory.free_bytes
            FreeDistributedBytes:
              alias: presto.memory.free_distributed_bytes
            MaxBytes:
              alias: presto.memory.max_bytes
            Nodes:
              alias: presto.memory.nodes
            ReservedBytes:
              alias: presto.memory.reserved_bytes
            ReservedDistributedBytes:
              alias: presto.memory.reserved_distributed_bytes
            ReservedRevocableBytes:
              alias: presto.memory.reserved_revocable_bytes
            ReservedRevocableDistributedBytes:
              alias: presto.memory.reserved_revocable_distributed_bytes
            TotalDistributedBytes:
              alias: presto.memory.total_distributed_bytes

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
##
## Presto logs are located in the /var/log directory of the <node.data-dir> specfied in the Presto node.properties file.
#
# logs:
#   - type: file
#     path: /var/log/presto/*.log
#     source: presto
#     sourcecategory: database
#     service: <SERVICE_NAME>
#     log_processing_rules:
#       - type: multi_line
#         name: log_start_with_date
#         pattern: \d{4}-\d{2}-\d{2}
