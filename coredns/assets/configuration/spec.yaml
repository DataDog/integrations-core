name: CoreDNS
files:
- name: coredns.yaml
  options:
  - template: init_config
    options:
      - template: init_config/openmetrics
  - template: instances
    options:
    - template: instances/openmetrics
      overrides:
        openmetrics_endpoint.required: false
        openmetrics_endpoint.enabled: true
        openmetrics_endpoint.display_priority: 2
        openmetrics_endpoint.value.example: http://%%host%%:9153/metrics
        openmetrics_endpoint.description: |
          To enable CoreDNS metrics using OpenMetricsBaseCheckV2 you must specify the openmetrics endpoint url
          and enable the plugin within coredns. Either `prometheus_url` or `openmetrics_url` must be specified.
          See: https://coredns.io/plugins/metrics/
        tags.value.example:
          - "dns-pod:%%host%%"
        extra_metrics.value.example:
          - coredns_template_matches_total: template_matches_count
          - coredns_template_template_failures_total: template_templating_failures_count
          - coredns_template_rr_failures_total: template_resource_record_failures_count
    - template: instances/openmetrics_legacy_base
      hidden: true
      overrides:
        prometheus_url.required: false
        prometheus_url.hidden: false
        prometheus_url.display_priority: 1
        prometheus_url.value.example: http://%%host%%:9153/metrics
        prometheus_url.description: |
          To enable CoreDNS metrics using the legacy OpenMetricsBaseCheckV1 you must specify the prometheus url
          and enable the plugin within coredns. Either `prometheus_url` or `openmetrics_url` must be specified.
          See: https://coredns.io/plugins/metrics/
- name: auto_conf.yaml
  options:
  - template: ad_identifiers
    overrides:
      value.example:
      - coredns
  - template: init_config
    options: []
  - template: instances
    options:
    - name: prometheus_url
      description: |
        To enable CoreDNS metrics using the legacy OpenMetricsBaseCheckV1 you must specify the prometheus url
        and enable the plugin within coredns. Either `prometheus_url` or `openmetrics_url` must be specified.
        See: https://coredns.io/plugins/metrics/
      enabled: true
      value:
        type: string
        example: "http://%%host%%:9153/metrics"
    - name: openmetrics_endpoint
      description: |
        To enable CoreDNS metrics using OpenMetricsBaseCheckV2 you must specify the openmetrics endpoint url
        and enable the plugin within coredns. Either `prometheus_url` or `openmetrics_url` must be specified.
        See: https://coredns.io/plugins/metrics/
      value:
        type: string
        example: "http://%%host%%:9153/metrics"
    - name: tags
      description: |
        List of tags to attach to every metric and service check emitted by this integration.

        Learn more about tagging: https://docs.datadoghq.com/tagging/
      required: True
      value:
        type: array
        items:
          type: string
        example:
          - "dns-pod:%%host%%"
    - name: extra_metrics
      description: |
        Metrics from the CoreDNS plugins for 'metrics', 'proxy', 'forward' and 'cache'
        are enabled by default, however in order to scrape metrics for optional
        plugins, enable the plugin in the CoreDNS corefile and then add the metric below.
        As an example, the 'template' plugin's metrics are below
      value:
        type: array
        items:
          type: string
        example:
          - coredns_template_matches_total: template_matches_count
          - coredns_template_template_failures_total: template_templating_failures_count
          - coredns_template_rr_failures_total: template_resource_record_failures_count
