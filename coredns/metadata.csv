metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
coredns.acl.allowed_requests,count,,request,,"[OpenMetrics V1] Counter of DNS requests being allowed.",0,coredns,dns allowed requests,
coredns.acl.allowed_requests.count,count,,request,,"[OpenMetrics V2] Counter of DNS requests being allowed.",0,coredns,dns allowed requests,
coredns.acl.blocked_requests,count,,request,,"[OpenMetrics V1] Counter of DNS requests being blocked.",0,coredns,dns blocked request,
coredns.acl.blocked_requests.count,count,,request,,"[OpenMetrics V2] Counter of DNS requests being blocked.",0,coredns,dns blocked request,
coredns.autopath.success_count,count,,request,,"[OpenMetrics V1] Counter of requests that did autopath.",0,coredns,autopath success,
coredns.autopath.success_count.count,count,,request,,"[OpenMetrics V2] Counter of requests that did autopath.",0,coredns,autopath success,
coredns.build_info,gauge,,,,"[OpenMetrics V1 and V2] A metric with a constant '1' value labeled by version, revision, and goversion from which CoreDNS was built.",0,coredns,build info,
coredns.response_code_count,count,,,,[OpenMetrics V1] number of responses per zone and rcode,1,coredns,response code,
coredns.response_code_count.count,count,,,,[OpenMetrics V2] number of responses per zone and rcode,1,coredns,response code,
coredns.cache_drops_count,count,,response,,"[OpenMetrics V1] Counter of responses excluded from the cache due to request/response question name mismatch.",0,coredns,cache drop,
coredns.cache_drops_count.count,count,,response,,"[OpenMetrics V2] Counter of responses excluded from the cache due to request/response question name mismatch.",0,coredns,cache drop,
coredns.cache_hits_count,count,,hit,,[OpenMetrics V1] Counter of cache hits by cache type,1,coredns,cache hit,
coredns.cache_hits_count.count,count,,hit,,[OpenMetrics V2] Counter of cache hits by cache type,1,coredns,cache hit,
coredns.cache_misses_count,count,,miss,,[OpenMetrics V1] Counter of cache misses.,1,coredns,cache miss,
coredns.cache_misses_count.count,count,,miss,,[OpenMetrics V2] Counter of cache misses.,1,coredns,cache miss,
coredns.cache_request_count,count,,request,,[OpenMetrics V1] Counter of cache requests.,1,coredns,cache request count,
coredns.cache_request_count.count,count,,request,,[OpenMetrics V2] Counter of cache requests.,1,coredns,cache request count,
coredns.cache_prefetch_count,count,,,,"[OpenMetrics V1] The number of time the cache has prefetched a cached item.",1,coredns,cache prefetch,
coredns.cache_prefetch_count.count,count,,,,"[OpenMetrics V2] The number of time the cache has prefetched a cached item.",1,coredns,cache prefetch,
coredns.cache_stale_count,count,,request,,"[OpenMetrics V1] Counter of requests served from stale cache entries.",0,coredns,cache stale,
coredns.cache_stale_count.count,count,,request,,"[OpenMetrics V2] Counter of requests served from stale cache entries.",0,coredns,cache stale,
coredns.dnssec.cache_size,gauge,,,,"[OpenMetrics V1 and V2] Total elements in the cache, type is signature.",0,coredns,dnssec cache size,
coredns.dnssec.cache_hits,count,,hit,,"[OpenMetrics V1] Counter of cache hits.",0,coredns,dnssec cache hit,
coredns.dnssec.cache_hits.count,count,,hit,,"[OpenMetrics V2] Counter of cache hits.",0,coredns,dnssec cache hit,
coredns.dnssec.cache_misses,count,,miss,,"[OpenMetrics V1] Counter of cache misses.",0,coredns,dnssec cache miss,
coredns.dnssec.cache_misses.count,count,,miss,,"[OpenMetrics V2] Counter of cache misses.",0,coredns,dnssec cache miss,
coredns.request_count,count,,request,,[OpenMetrics V1] total query count.,1,coredns,request count,
coredns.request_count.count,count,,request,,[OpenMetrics V2] total query count.,1,coredns,request count,
coredns.request_type_count,count,,,,[OpenMetrics V1] counter of queries per zone and type,1,coredns,request type,
coredns.request_type_count.count,count,,,,[OpenMetrics V2] counter of queries per zone and type,1,coredns,request type,
coredns.request_duration.seconds.sum,count,,second,,[OpenMetrics V1 and V2] duration to process each query,-1,coredns,request duration,
coredns.request_duration.seconds.count,count,,second,,[OpenMetrics V1 and V2] duration to process each query,-1,coredns,request duration,
coredns.request_duration.seconds.bucket,count,,second,,[OpenMetrics V2] sample duration to process each query,-1,coredns,request duration,
coredns.proxy_request_count,count,,request,,[OpenMetrics V1] query count per upstream.,1,coredns,proxy request count,
coredns.proxy_request_count.count,count,,request,,[OpenMetrics V2] query count per upstream.,1,coredns,proxy request count,
coredns.proxy_request_duration.seconds.sum,count,,second,,[OpenMetrics V1 and V2] duration per upstream interaction,-1,coredns,proxy request duration,
coredns.proxy_request_duration.seconds.count,count,,second,,[OpenMetrics V1 and V2] duration per upstream interaction,-1,coredns,proxy request duration,
coredns.proxy_request_duration.seconds.bucket,count,,second,,[OpenMetrics V2] sample of duration per upstream interaction,-1,coredns,proxy request duration,
coredns.forward_request_duration.seconds.sum,count,,second,,[OpenMetrics V1 and V2] duration per upstream interaction,-1,coredns,forward request duration,
coredns.forward_request_duration.seconds.count,count,,second,,[OpenMetrics V1 and V2] duration per upstream interaction,-1,coredns,forward request duration,
coredns.forward_request_duration.seconds.bucket,count,,second,,[OpenMetrics V2] duration per upstream interaction,-1,coredns,forward request duration,
coredns.forward_request_count,count,,request,,[OpenMetrics V1] query count per upstream,1,coredns,forward request count,
coredns.forward_request_count.count,count,,request,,[OpenMetrics V2] query count per upstream,1,coredns,forward request count,
coredns.forward_response_rcode_count,count,,response,,[OpenMetrics V1] count of RCODEs per upstream,0,coredns,forward rcodes,
coredns.forward_response_rcode_count.count,count,,response,,[OpenMetrics V2] count of RCODEs per upstream,0,coredns,forward rcodes,
coredns.forward_healthcheck_failure_count,count,,entry,,[OpenMetrics V1] number of failed health checks per upstream,-1,coredns,forward failed healthchecks,
coredns.forward_healthcheck_failure_count.count,count,,entry,,[OpenMetrics V2] number of failed health checks per upstream,-1,coredns,forward failed healthchecks,
coredns.forward_healthcheck_broken_count,count,,entry,,[OpenMetrics V1] counter of when all upstreams are unhealthy,-1,coredns,forward all healthchecks broken,
coredns.forward_healthcheck_broken_count.count,count,,entry,,[OpenMetrics V2] counter of when all upstreams are unhealthy,-1,coredns,forward all healthchecks broken,
coredns.forward_max_concurrent_rejects,count,,query,,"[OpenMetrics V1] Counter of the number of queries rejected because the concurrent queries were at maximum.",-1,coredns,max concurrent queries,
coredns.forward_max_concurrent_rejects.count,count,,query,,"[OpenMetrics V2] Counter of the number of queries rejected because the concurrent queries were at maximum.",-1,coredns,max concurrent queries,
coredns.forward_sockets_open,gauge,,connection,,[OpenMetrics V1 and V2] number of sockets open per upstream,-1,coredns,forward open sockets,
coredns.grpc.request_count,count,,,,"[OpenMetrics V1] Query count per upstream.",0,coredns,grpc request count,
coredns.grpc.request_count.count,count,,,,"[OpenMetrics V2] Query count per upstream.",0,coredns,grpc request count,
coredns.grpc.response_rcode_count,count,,,,"[OpenMetrics V1] Count of RCODEs per upstream. and we are randomly (this always uses the random policy) spraying to an upstream.",0,coredns,grpc response code,
coredns.grpc.response_rcode_count.count,count,,,,"[OpenMetrics V2] Count of RCODEs per upstream. and we are randomly (this always uses the random policy) spraying to an upstream.",0,coredns,grpc response code,
coredns.health_request_duration.count,count,,,,"[OpenMetrics V1 and V2] Count for the histogram of the time (in seconds) each request took.",-1,coredns,health req duration count,
coredns.health_request_duration.sum,count,,,,"[OpenMetrics V1 and V2] Sum for the histogram of the time (in seconds) each request took.",-1,coredns,health req duration count,
coredns.health_request_duration.bucket,count,,,,"[OpenMetrics V2] Sample for the histogram of the time (in seconds) each request took.",-1,coredns,health req duration count,
coredns.hosts.entries_count,gauge,,,,"[OpenMetrics V1 and V2] The combined number of entries in hosts and Corefile.",0,coredns,host entry,
coredns.hosts.reload_timestamp,gauge,,second,,"[OpenMetrics V1 and V2] The timestamp of the last reload of hosts file.",0,coredns,host reload ts,
coredns.reload.failed_count,count,,,,"[OpenMetrics V1] Counts the number of failed reload attempts.",0,coredns,reload failed count,
coredns.reload.failed_count.count,count,,,,"[OpenMetrics V2] Counts the number of failed reload attempts.",0,coredns,reload failed count,
coredns.request_size.bytes.sum,count,,byte,,[OpenMetrics V1 and V2] size of the request in bytes,0,coredns,request size,
coredns.request_size.bytes.count,count,,byte,,[OpenMetrics V1 and V2] size of the request in bytes,0,coredns,request size,
coredns.request_size.bytes.bucket,count,,byte,,[OpenMetrics V2] sample size of the request in bytes,0,coredns,request size,
coredns.response_size.bytes.sum,count,,byte,,[OpenMetrics V1 and V2] size of the request in bytes,0,coredns,response size,
coredns.response_size.bytes.count,count,,byte,,[OpenMetrics V1 and V2] size of the request in bytes,0,coredns,response size,
coredns.response_size.bytes.bucket,count,,byte,,[OpenMetrics V2] sample size of the request in bytes,0,coredns,response size,
coredns.cache_size.count,gauge,,entry,,[OpenMetrics V1 and V2],1,coredns,cache size,
coredns.panic_count.count,count,,entry,,[OpenMetrics V1 and V2],1,coredns,total number of panics,
coredns.go.gc_duration_seconds.count,count,,second,,[OpenMetrics V1 and V2] Count of the GC invocation durations.,0,coredns,,
coredns.go.gc_duration_seconds.sum,count,,second,,[OpenMetrics V1 and V2] Sum of the GC invocation durations.,0,coredns,,
coredns.go.gc_duration_seconds.quantile,gauge,,second,,[OpenMetrics V1 and V2] Quantiles of the GC invocation durations.,0,coredns,,
coredns.go.goroutines,gauge,,thread,,[OpenMetrics V1 and V2] Number of goroutines that currently exist.,0,coredns,,
coredns.go.info,gauge,,,,[OpenMetrics V1 and V2] Information about the Go environment.,0,coredns,,
coredns.go.memstats.alloc_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes allocated and still in use.,0,coredns,,
coredns.go.memstats.alloc_bytes_total,count,,byte,,[OpenMetrics V1] Total number of bytes allocated even if freed.,0,coredns,,
coredns.go.memstats.buck_hash_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used by the profiling bucket hash table.,0,coredns,bytes used by profiling,
coredns.go.memstats.frees_total,count,,,,[OpenMetrics V1] Total number of frees.,0,coredns,,
coredns.go.memstats.frees_total.count,count,,,,[OpenMetrics V2] Total number of frees.,0,coredns,,
coredns.go.memstats.gc_cpu_fraction,gauge,,percent,,[OpenMetrics V1 and V2] CPU taken up by GC,0,coredns,CPU taken up by gc,
coredns.go.memstats.gc_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used for garbage collection system metadata.,0,coredns,,
coredns.go.memstats.heap_alloc_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Bytes allocated to the heap,0,coredns,,
coredns.go.memstats.heap_idle_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of idle bytes in the heap,0,coredns,,
coredns.go.memstats.heap_inuse_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of Bytes in the heap,0,coredns,,
coredns.go.memstats.heap_objects,gauge,,object,,[OpenMetrics V1 and V2] Number of objects in the heap,0,coredns,,
coredns.go.memstats.heap_released_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes released to the system in the last gc,0,coredns,,
coredns.go.memstats.heap_released_bytes.count,count,,byte,,[OpenMetrics V2] Count of bytes released to the system in the last gc,0,coredns,,
coredns.go.memstats.heap_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used by the heap,0,coredns,,
coredns.go.memstats.last_gc_time_seconds,gauge,,second,,[OpenMetrics V1 and V2] Length of last GC,0,coredns,gc time,
coredns.go.memstats.lookups_total,count,,operation,,[OpenMetrics V1] Number of lookups,0,coredns,lookups total,
coredns.go.memstats.lookups_total.count,count,,operation,,[OpenMetrics V2] Number of lookups,0,coredns,lookups total,
coredns.go.memstats.mallocs_total,count,,operation,,[OpenMetrics V1] Number of mallocs,0,coredns,mallocs total,
coredns.go.memstats.mallocs_total.count,count,,operation,,[OpenMetrics V2] Number of mallocs,0,coredns,mallocs total,
coredns.go.memstats.mcache_inuse_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes in use by mcache structures.,0,coredns,,
coredns.go.memstats.mcache_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used for mcache structures obtained from system.,0,coredns,,
coredns.go.memstats.mspan_inuse_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes in use by mspan structures.,0,coredns,,
coredns.go.memstats.mspan_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used for mspan structures obtained from system.,0,coredns,,
coredns.go.memstats.next_gc_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of heap bytes when next garbage collection will take place,0,coredns,,
coredns.go.memstats.other_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes used for other system allocations,0,coredns,,
coredns.go.memstats.stack_inuse_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes in use by the stack allocator,0,coredns,,
coredns.go.memstats.stack_sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes obtained from system for stack allocator,0,coredns,,
coredns.go.memstats.sys_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Number of bytes obtained from system,0,coredns,,
coredns.go.threads,gauge,,thread,,[OpenMetrics V1 and V2] Number of OS threads created.,0,coredns,,
coredns.plugin_enabled,gauge,,,,"[OpenMetrics V1 and V2] A metric that indicates whether a plugin is enabled on per server and zone basis.",0,coredns,plugin enabled,
coredns.process.cpu_seconds_total,count,,second,,"[OpenMetrics V1 and V2] Total user and system CPU time spent in seconds.",0,coredns,process cpu seconds,
coredns.process.cpu_seconds_total.count,count,,second,,"[OpenMetrics V2] Count of user and system CPU time spent in seconds.",0,coredns,process cpu seconds,
coredns.process.max_fds,gauge,,file,,[OpenMetrics V1 and V2] Maximum number of open file descriptors.,0,coredns,,
coredns.process.open_fds,gauge,,file,,[OpenMetrics V1 and V2] Number of open file descriptors.,0,coredns,,
coredns.process.resident_memory_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Resident memory size in bytes.,0,coredns,,
coredns.process.start_time_seconds,gauge,,second,,[OpenMetrics V1 and V2] Start time of the process since unix epoch in seconds.,0,coredns,,
coredns.process.virtual_memory_bytes,gauge,,byte,,[OpenMetrics V1 and V2] Virtual memory size in bytes.,0,coredns,,
coredns.template.matches_count,count,,,,"[OpenMetrics V1] The total number of matched requests by regex.",0,coredns,template matches,
coredns.template.matches_count.count,count,,,,"[OpenMetrics V2] The total number of matched requests by regex.",0,coredns,template matches,
coredns.template.failures_count,count,,error,,"[OpenMetrics V1] The number of times the Go templating failed.",0,coredns,template failure,
coredns.template.failures_count.count,count,,error,,"[OpenMetrics V2] The number of times the Go templating failed.",0,coredns,template failure,
coredns.template.rr_failures_count,count,,error,,"[OpenMetrics V1] The number of times the templated resource record was invalid and could not be parsed.",0,coredns,template resource failure,
coredns.template.rr_failures_count.count,count,,error,,"[OpenMetrics V2] The number of times the templated resource record was invalid and could not be parsed.",0,coredns,template resource failure,