instances:

  ## @param host - string - required
  ## Tomcat host to connect to.
  #
  - host: localhost

  ## @param port - integer - required
  ## Tomcat port to connect to.
  #
    port: 9012

  ## @param user - string - optional
  ## Username from the credentials needed to connect to the host.
  #
  #  user: <USERNAME>

  ## @param password - string - optional
  ## Password from the credentials needed to connect to the host.
  #
  #  password: <PASSWORD>

  ## @param process_name_regex - string - optional
  ## Instead of specifying a host, and port. The agent can connect using the attach api.
  ## This requires the JDK to be installed and the path to `tools.jar` to be set below in `tools_jar_path` parameter.
  #
  #  process_name_regex: .*process_name.*

  ## @param tools_jar_path - string - optional
  ## Needs to be set when process_name_regex parameter is set.
  #
  #  tools_jar_path: /usr/lib/jvm/java-7-openjdk-amd64/lib/tools.jar

  ## @param name - string - optional
  ## Set your instance name
  #
  #   name: tomcat_instance

  ## @param java_bin_path - string - optional
  ## java_bin_path should be set if the agent cannot find your java executable
  #
  #  java_bin_path: <JAVA_PATH>

  ## @param java_options - string - optional
  ## List of Java JVM options.
  #
  #  java_options: "-Xmx200m -Xms50m"

  ## @param trust_store_path - string - optional
  ## trust_store_path should be set if "com.sun.management.jmxremote.ssl" is
  ## set to true on the target JVM.
  ## It's the path to your trusted store
  #
  #  trust_store_path: <TRUSTSTORE.JKS_PATH>

  ## @param trust_store_password - string - optional
  ## `trust_store_password` should be set if "com.sun.management.jmxremote.ssl" is
  ## set to true on the target JVM. It's the password for your TrustStore.jks file.
  #
  #  trust_store_password: <PASSWORD>

  ## @param key_store_path - string - optional
  ## key_store_path should be set if "com.sun.management.jmxremote.ssl.need.client.auth"
  ## is set to true on the target JVM.
  ## It's the path to your key store.
  #
  #  key_store_path: <KEYSTORE.JKS_PATH>

  ## @param key_store_password - string - optional
  ## key_store_password should be set if "com.sun.management.jmxremote.ssl.need.client.auth"
  ## is set to true on the target JVM.
  ## It's the password for your KeyStore.jks file.
  #
  #  key_store_password: <PASSWORD>

  ## @param rmi_registry_ssl - boolean - optional
  ## Whether or not the agent should connect to the rmi registry using ssl.
  ## should be set to true if "com.sun.management.jmxremote.registry.ssl" is set to true on the target JVM.
  #
  #  rmi_registry_ssl: false

  ## @param tags  - list of key:value element - optional
  ## List of tags to attach to every metric, event and service check emitted by this integration.
  ##
  ## Learn more about tagging: https://docs.datadoghq.com/tagging/
  #
  #  tags:
  #    - <KEY_1>:<VALUE_1>
  #    - <KEY_2>:<VALUE_2>

init_config:
  ## @param is_jmx - boolean - required
  ## Whether or not this file is a configuration for a JMX integration.
  #
  is_jmx: true

  ## @param collect_default_metrics - boolean - required
  ## Whether or not the check should collect all default metrics for this integration.
  #
  collect_default_metrics: true

  ## List of metrics to be collected by the integration
  ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
  ## Agent 5: Customize all your metrics below
  ## Agent 6: The default metrics to be collected are kept in metrics.yaml, but you can still add your own metrics here
  #
  conf:
    - include:
        type: ThreadPool
        attribute:
          maxThreads:
            alias: tomcat.threads.max
            metric_type: gauge
          currentThreadCount:
            alias: tomcat.threads.count
            metric_type: gauge
          currentThreadsBusy:
            alias: tomcat.threads.busy
            metric_type: gauge
    - include:
        type: GlobalRequestProcessor
        attribute:
          bytesSent:
            alias: tomcat.bytes_sent
            metric_type: counter
          bytesReceived:
            alias: tomcat.bytes_rcvd
            metric_type: counter
          errorCount:
            alias: tomcat.error_count
            metric_type: counter
          requestCount:
            alias: tomcat.request_count
            metric_type: counter
          maxTime:
            alias: tomcat.max_time
            metric_type: gauge
          processingTime:
            alias: tomcat.processing_time
            metric_type: counter
    - include:
        j2eeType: Servlet
        attribute:
          processingTime:
            alias: tomcat.servlet.processing_time
            metric_type: counter
          errorCount:
            alias: tomcat.servlet.error_count
            metric_type: counter
          requestCount:
            alias: tomcat.servlet.request_count
            metric_type: counter
    - include:
        type: Cache
        attribute:
          accessCount:
            alias: tomcat.cache.access_count
            metric_type: counter
          hitsCounts:
            alias: tomcat.cache.hits_count
            metric_type: counter
    - include:
        type: JspMonitor
        attribute:
          jspCount:
            alias: tomcat.jsp.count
            metric_type: counter
          jspReloadCount:
            alias: tomcat.jsp.reload_count
            metric_type: counter

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
#logs:
#  - type: file
#    path: /var/log/tomcat/*.log
#    source: tomcat
#    service: <SERVICE_NAME>
