metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
voltdb.cpu.percent_used,gauge,,percent,,Percentage of total CPU available used by the database server process.,0,voltdb,cpu_pct_used,
voltdb.memory.index,gauge,,kibibyte,,Amount of memory currently in use for storing database indexes.,0,voltdb,memory_index,
voltdb.memory.physical,gauge,,kibibyte,,Total size of physical memory on the server.,0,voltdb,memory_physical,
voltdb.memory.pooled,gauge,,kibibyte,,"Total size of memory allocated for tasks other than database records, indexes, and strings.",0,voltdb,memory_pooled,
voltdb.memory.rss,gauge,,kibibyte,,Total amount of memory allocated to the VoltDB processes on the server.,0,voltdb,memory_rss,
voltdb.memory.java.max_heap,gauge,,kibibyte,,Maximum heap size of the Java runtime environment.,0,voltdb,memory_java_max_heap,
voltdb.memory.java.unused,gauge,,kibibyte,,Amount of memory allocated by Java but unused (free space in the Java heap).,0,voltdb,memory_java_unused,
voltdb.memory.java.used,gauge,,kibibyte,,Amount of memory allocated by Java and currently in use by VoltDB.,0,voltdb,memory_java_used,
voltdb.memory.string,gauge,,kibibyte,,"Amount of memory currently in use for storing string, binary and geospatial data that is not stored inline in the database record.",0,voltdb,memory_string,
voltdb.memory.tuple_allocated,gauge,,kibibyte,,Amount of memory allocated for the storage of database records (including free space).,0,voltdb,memory_tuple_alloc,
voltdb.memory.tuple_data,gauge,,kibibyte,,Amount of memory currently in use for storing database records.,0,voltdb,memory_tuple_data,
voltdb.memory.tuple_count,gauge,,kibibyte,,Total number of database records currently in memory.,0,voltdb,memory_tuple_count,
voltdb.snapshot_status.size,gauge,,byte,,Total size of the snapshot file.,0,voltdb,snapshot_size,
voltdb.snapshot_status.duration,gauge,,second,,Amount of time it took to complete the snapshot.,0,voltdb,snapshot_duration,
voltdb.snapshot_status.throughput,gauge,,byte,second,Average number of bytes per second written to the file during the snapshot process.,0,voltdb,snapshot_throughput,
voltdb.commandlog.fsync_interval,gauge,,millisecond,,Average interval between the last 10 fsync system calls.,0,voltdb,commandlog_fsync_interval,
voltdb.commandlog.outstanding_bytes,gauge,,byte,,Size of pending command log data: data for transactions that have been initiated but the log has yet to be written to the disk. For synchronous logging this value is always zero.,0,voltdb,commandlog_outstanding_bytes,
voltdb.commandlog.outstanding_transactions,gauge,,,,The number of transactions of pending command log data: the number of transactions that have been initiated for which the log has yet to be written to disk. For synchronous logging this value is always zero.,0,voltdb,commandlog_oustanding_txns,
voltdb.commandlog.segment_count,gauge,,,,The number of segment files allocated (including currently unused segments).,0,voltdb,commandlog_segment,
voltdb.commandlog.in_use_segment_count,gauge,,,,"The number of segment files currently in use for command logging.",0,voltdb,commandlog_segments_used,
voltdb.procedure.invocations,count,,,,The number of invocations of this procedure at this site.,0,voltdb,procedure_invoc,
voltdb.procedure.timed_invocations,count,,,,"Total number of invocations used to measure the minimum, maximum, and average execution time.",0,voltdb,procedure_timed_invoc,
voltdb.procedure.min_execution_time,gauge,,nanosecond,,Minimum amount of time it took to execute the stored procedure.,0,voltdb,procedure_time_min,
voltdb.procedure.max_execution_time,gauge,,nanosecond,,Maximum amount of time it took to execute the stored procedure.,0,voltdb,procedure_time_max,
voltdb.procedure.avg_execution_time,gauge,,nanosecond,,Average amount of time it took to execute the stored procedure.,0,voltdb,procedure_time_avg,
voltdb.procedure.min_result_size,gauge,,byte,,Minimum size of the results returned by the procedure.,0,voltdb,procedure_size_min,
voltdb.procedure.max_result_size,gauge,,byte,,Maximum size of the results returned by the procedure.,0,voltdb,procedure_size_max,
voltdb.procedure.avg_result_size,gauge,,byte,,Average size of the results returned by the procedure.,0,voltdb,procedure_size_avg,
voltdb.procedure.min_parameter_set_size,gauge,,byte,,Minimim size of the parameters passed as input to the procedure.,0,voltdb,procedure_paramsize_min,
voltdb.procedure.max_parameter_set_size,gauge,,byte,,Maximum size of the parameters passed as input to the procedure.,0,voltdb,procedure_paramsize_max,
voltdb.procedure.avg_parameter_set_size,gauge,,byte,,Average size of the parameters passed as input to the procedure.,0,voltdb,procedure_paramsize_avg,
voltdb.procedure.aborts,count,,byte,,Total number of times the procedure was aborted.,0,voltdb,procedure_aborts,
voltdb.procedure.failures,count,,byte,,Total number of times the procedure failed unexpectedly.,0,voltdb,procedure_failures,
voltdb.procedure.successes,count,,byte,,Total number of times the procedure succeeded.,0,voltdb,procedure_successes,
voltdb.latency.count,gauge,,,,Number of transactions during the interval.,0,voltdb,latency_count,
voltdb.latency.interval,gauge,,millisecond,,Length of the measurement interval: five seconds (5000).,0,voltdb,latency_interval,
voltdb.latency.max,gauge,,microsecond,,Maximum latency during the interval,0,voltdb,latency_max,
voltdb.latency.p50,gauge,,microsecond,,50th percentile latency.,0,voltdb,latency_p50,
voltdb.latency.p95,gauge,,microsecond,,95th percentile latency.,0,voltdb,latency_p95,
voltdb.latency.p99,gauge,,microsecond,,99th percentile latency.,0,voltdb,latency_p99,
voltdb.latency.p999,gauge,,microsecond,,99.9th percentile latency.,0,voltdb,latency_p999,
voltdb.latency.p9999,gauge,,microsecond,,99.99th percentile latency.,0,voltdb,latency_p9999,
voltdb.latency.p99999,gauge,,microsecond,,99.999th percentile latency.,0,voltdb,latency_p99999,
voltdb.latency.transactions_per_sec,gauge,,transaction,second,Number of transactions per second during the interval,0,voltdb,latency_txns_per_sec,
voltdb.gc.newgen_avg_gc_time,gauge,,millisecond,,Average time taken by young generation collections.,0,voltdb,newgen_gc_time_agv,
voltdb.gc.newgen_gc_count,count,,,,Total number of times young generation garbage collection was performed.,0,voltdb,newgen_gc_count,
voltdb.gc.oldgen_avg_gc_time,gauge,,millisecond,,Average time taken by young generation collections.,0,voltdb,oldgen_gc_time_avg,
voltdb.gc.oldgen_gc_count,count,,,,Total number of times old generation garbage collection was performed.,0,voltdb,oldgen_gc_count,
voltdb.io.bytes_read,count,,byte,,Total number of bytes of data sent from the client to the host.,0,voltdb,io_bytes_read,
voltdb.io.bytes_written,count,,byte,,Total number of bytes of data sent from the host to the client.,0,voltdb,io_bytes_written,
voltdb.io.messages_read,count,,byte,,Total number of individual messages sent from the client to the host.,0,voltdb,io_msg_read,
voltdb.io.messages_written,count,,byte,,Total number of individual messages sent from the host to the client.,0,voltdb,io_msg_written,
voltdb.table.tuple_count,gauge,,,,Number of rows currently stored for this table in the current partition.,0,voltdb,table_tuple_count,
voltdb.table.tuple_allocated_memory,gauge,,kibibyte,,Total size of memory allocated for storing inline data associated with this table in this partition. Can exceed currently used memory.,0,voltdb,table_mem_alloc,
voltdb.table.tuple_data_memory,gauge,,kibibyte,,Total memory used for storing inline data associated with this table and this partition.,0,voltdb,table_mem_data,
voltdb.table.string_data_memory,gauge,,kibibyte,,Total memory used for storing non-inline variable length data associated with this table in this partition.,0,voltdb,table_mem_string,
voltdb.table.percent_full,gauge,,percent,,Percentage of the row limit currently in use by table rows in this partition. If no row limit is set this is zero.,0,voltdb,table_pct_full,
voltdb.table.tuple_limit,gauge,,row,,"The row limit for this table. Row limits are optional and are defined in the schema as a maximum number of rows that any partition can contain. If no row limit is set, this value is null.",0,voltdb,table tuple limit,
voltdb.index.entry_count,gauge,,,,Number of index entries currently in the partition.,0,voltdb,index_entry_cnt,
voltdb.index.memory_estimate,gauge,,kibibyte,,Estimated amount of memory consumed by the current index entries.,0,voltdb,index_memory,
voltdb.export.latency.avg,gauge,,millisecond,,"The average time between when records are inserted and when they are acknowledged by the target.",0,voltdb,export avg latency,
voltdb.export.latency.max,gauge,,millisecond,,"The maximum time between when a record was inserted and when it was acknowledged by the target.",0,voltdb,export max latency,
voltdb.export.queue_gap,gauge,,,,"The number of records missing from the queue for the current stream and partition.",0,voltdb,export queue gap,
voltdb.export.records_pending,gauge,,,,"The number of records out of TUPLE_COUNT still waiting to be written to or acknowledged by the target.",0,voltdb,export tuple pending,
voltdb.export.records_queued,count,,,,"The number of records queued to the export target.",0,voltdb,export tuple count,
voltdb.export.time_since_last_acked,gauge,,second,,"Time since the last tuple was acknowledged as received by the target.",0,voltdb,export last acked,
voltdb.export.time_since_last_queued,gauge,,second,,"Time since the most recent tuple was added to the export queue for this partition.",0,voltdb,export last queued,
voltdb.idletime.avg_wait,gauge,,microsecond,,"The average amount of time the execution site had to wait for a new task (in microseconds).",0,voltdb,idletime avg,
voltdb.idletime.max_wait,gauge,,microsecond,,"The maximum amount of time the execution site had to wait for a new task (in nanoseconds).",0,voltdb,idletime max,
voltdb.idletime.min_wait,gauge,,microsecond,,"The minimum amount of time the execution site had to wait for a new task (in nanoseconds).",0,voltdb,idletime min,
voltdb.idletime.stddev,gauge,,microsecond,,"The standard deviation of the waiting time (in microseconds).",0,voltdb,idletime stddev,
voltdb.idletime.wait.count,count,,,,"The number of times the execution site had to wait for a new task (that is, the queue was empty).",0,voltdb,idletime count,
voltdb.idletime.wait.pct,gauge,,,,"The percentage of time the execution site was waiting for a new task (that is, the site was idle).",0,voltdb,idletime percent,
voltdb.idletime.wait.total,gauge,,,,"The cumulative number of times the execution site had to wait for a new task (that is, the queue was empty).",0,voltdb,idletime count,
voltdb.import.failures.count,count,,,,"The number of import transactions that failed.",0,voltdb,import failures,
voltdb.import.failures.total,gauge,,,,"The cumulative number of import transactions that failed.",0,voltdb,import failures,
voltdb.import.outstanding_requests,gauge,,record,,"The number of records read from the import stream and waiting to be inserted into the database.",0,voltdb,import outstanding requests,
voltdb.import.retries.count,count,,,,"The number of attempts to replay failed transactions.",0,voltdb,import retries,
voltdb.import.retries.total,gauge,,,,"The cumulative number of attempts to replay failed transactions.",0,voltdb,import retries,
voltdb.import.successes.count,count,,,,"The number of import transactions that succeeded.",0,voltdb,import success,
voltdb.import.successes.total,gauge,,,,"The cumulative number of import transactions that succeeded.",0,voltdb,import success,
voltdb.procedureoutput.avg_result_size,gauge,,byte,,"The average result set size in bytes.",0,voltdb,procedureoutput avg result,
voltdb.procedureoutput.invocations.count,count,,,,"The number of invocations of this procedure.",0,voltdb,procedureoutput invocation,
voltdb.procedureoutput.invocations.total,gauge,,,,"The cumulative number of invocations of this procedure.",0,voltdb,procedureoutput avg invocation,
voltdb.procedureoutput.max_result_size,gauge,,byte,,"The maximum result set size in bytes.",0,voltdb,procedureoutput max result,
voltdb.procedureoutput.min_result_size,gauge,,byte,,"The minimum result set size in bytes.",0,voltdb,procedureoutput min result,
voltdb.procedureoutput.total_result_size,gauge,,mebibyte,,"The total output returned by all invocations of this stored procedure measured in megabytes.",0,voltdb,procedureoutput total result,
voltdb.procedureoutput.weighted_perc,gauge,,,,"A weighted average expressed as a percentage of the result set size returned by invocations of this stored procedure compared to all stored procedure invocations.",0,voltdb,procedureoutput weighted result,
voltdb.procedureprofile.aborts.count,count,,,,"The number of times the procedure was aborted.",0,voltdb,procedureprofile aborts count,
voltdb.procedureprofile.aborts.total,gauge,,,,"The cumulative number of times the procedure was aborted.",0,voltdb,procedureprofile aborts count,
voltdb.procedureprofile.avg_time,gauge,,nanosecond,,"The average length of time (in nanoseconds) it took to execute the stored procedure.",0,voltdb,procedureprofile time avg,
voltdb.procedureprofile.failures.count,count,,,,"The number of times the procedure failed unexpectedly (as opposed to user aborts or expected errors, such as constraint violations).",0,voltdb,procedureprofile failures count,
voltdb.procedureprofile.failures.total,gauge,,,,"The number of times the procedure failed unexpectedly (as opposed to user aborts or expected errors, such as constraint violations).",0,voltdb,procedureprofile failures count,
voltdb.procedureprofile.invocations.count,count,,,,"The number of invocations of this procedure.",0,voltdb,procedureprofile invocations count,
voltdb.procedureprofile.invocations.total,gauge,,,,"The total number of invocations of this procedure.",0,voltdb,procedureprofile invocations count,
voltdb.procedureprofile.max_time,gauge,,nanosecond,,"The maximum length of time (in nanoseconds) it took to execute the stored procedure.",0,voltdb,procedureprofile time max,
voltdb.procedureprofile.min_time,gauge,,nanosecond,,"The minimum length of time (in nanoseconds) it took to execute the stored procedure.",0,voltdb,procedureprofile time min,
voltdb.procedureprofile.weighted_perc,gauge,,,,"A weighted average expressed as a percentage of the execution time for this stored procedure compared to all stored procedure invocations.",0,voltdb,procedureprofile weighted,
voltdb.queue.avg_wait,gauge,,microsecond,,"The average length of time (in microseconds) tasks were waiting in the queue in the last five seconds.",0,voltdb,queue wait avg,
voltdb.queue.current_depth,gauge,,task,,"The number of tasks currently in the queue.",0,voltdb,queue tasks depth,
voltdb.queue.max_wait,gauge,,microsecond,,"The maximum length of time (in microseconds) tasks were waiting in the queue in the last five seconds.",0,voltdb,queue wait max,
voltdb.queue.poll_count_per_sec,gauge,,task,second,"The number of tasks that left the queue",0,voltdb,queue task per sec,
