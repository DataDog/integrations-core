name: Network
files:
  - name: network.yaml
    example_name: conf.yaml.default
    options:
      - template: init_config
        description: |
          This file is overwritten upon Agent upgrade.
          To make modifications to the check configuration, please copy this file
          to `network.yaml` and make your changes on that file.
        required: true
        options:
          - template: init_config/default
      - template: instances
        description: Network check only supports one configured instance
        options:
          - name: collect_connection_state
            description: |
              Set to true to collect connection states for your interfaces
              Note: this will require either the command `ss` from system package `iproute2` or
              the command `netstat` from the system package `net-tools` to be installed
            value:
              example: false
              type: boolean
          - name: collect_connection_queues
            description: |
              Set to true to enable connection queues collection
              Note: connection queues collections require both
              `collect_connection_state` and `collect_connection_queues` to be true
              because it also requires the command `ss` from system package `iproute2` or
              the command `netstat` from the system package `net-tools` to be installed
              Note: This option is only available on linux and will be ignored in other systems.
            value:
              example: false
              type: boolean
          - name: excluded_interfaces
            description: List of interface to exclude from the check.
            value:
              example:
                - lo
                - lo0
              type: array
              items:
                type: string
          - name: excluded_interface_re
            description: Completely ignore any network interface matching the given regex.
            value:
              display_default: null
              example: <NETWORK_INTERFACE_NAME>.*
              type: string
          - name: combine_connection_states
            description: |
              Set to false to not combine connection states.
              By default we combine states like fin_wait_1 and fin_wait_2
              together into one state: 'closing' disable this option to get more granular data.
            value:
              example: true
              type: boolean
          - name: collect_rate_metrics
            description: |
              By default, most metrics are submitted as rates.
              However, some metrics like tcp/udp retransmissions and errors are
              better handled as counts.
              Choose to disable rate metrics by setting collect_rate_metrics to false.
            value:
              example: true
              type: boolean
          - name: collect_count_metrics
            description: |
              By default, most metrics are submitted as rates.
              However, some metrics like tcp/udp retransmissions and errors are
              better handled as counts.
              Choose to enable count metrics by setting collect_count_metrics to true.
              Count metrics have '.count' added to the metric name.
            value:
              example: false
              type: boolean
          - name: conntrack_path
            description: |
              Linux only.
              The location of the conntrack executable in order to get the stats from conntrack -S.
              It will be run with sudo by default, so an entry needs to be added to the sudoers file.
              By default, these metrics will not be sent.
            value:
              display_default: null
              example: /usr/sbin/conntrack
              type: string
          - name: use_sudo_conntrack
            description: |
              Set to False to disable sudo when running `conntrack -S`
              (`sudo` isn't normally available in containers)
            value:
              example: true
              type: boolean
          - name: whitelist_conntrack_metrics
            description: |
              Linux only.
              Names of the conntrack metrics to whitelist for monitoring. The metric value is in the file
              /${proc}/sys/net/netfilter/nf_conntrack_${metric_name}.
              By default the agent collects only max and count.
              Regex expressions for the project names are supported.
              Blacklist takes precedence over whitelist in case of overlap.
            value:
              example:
                - <METRIC_NAME>
                - <METRIC_PREFIX>.*
              display_default:
                - max
                - count
              type: array
              items:
                type: string
          - name: blacklist_conntrack_metrics
            description: |
              Linux only.
              Names of the conntrack metrics to blacklist for monitoring. The metric value is in the file
              /${proc}/sys/net/netfilter/nf_conntrack_${metric_name}.
              If set, whitelist default value is reset to [].
              Regex expressions for the project names are supported.
              Blacklist takes precedence over whitelist in case of overlap.
            value:
              display_default: []
              example:
                - <METRIC_NAME>
                - <METRIC_PREFIX>.*
              type: array
              items:
                type: string
          - name: collect_aws_ena_metrics
            description: |
              Turn on collection of the AWS Elastic Network Adapter (ENA) statistics for network interfaces.

              This will only work on ENA-enabled instances, see:
              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enhanced-networking-ena.html#ena-requirements

              Note that when running this check in container, it will return metrics for the container
              network interfaces. To get host-level ENA metrics from a container, it needs to be executed
              with `CAP_NET_ADMIN` capability and use the `host` network mode.
            value:
              display_default: false
              example: false
              type: boolean
          - name: collect_ethtool_metrics
            description: |
              Linux only.
              Enable collection of ethtool statistics for network interfaces.
              This will collect per queue and per cpu metrics depending on the driver.

              The queue and cpu will be used as a tag when submitting metrics.
              For example, 'queue_0_tx_cnt' will be submitted as 'system.net.ena.queue.tx_cnt' with tag 'queue:0'

              Loopback interfaces 'lo' and 'lo0' are excluded as they don't support SIOCETHTOOL.

              Currently supported drivers:
              - ena
              - virtio_net
              - hv_netvsc
              - gve
            value:
              display_default: false
              example: false
              type: boolean
          - template: instances/default
