[tox]
minversion = 2.0
basepython = py36
skip_missing_interpreters = true
envlist =
    py{27,36}-{dd}-{0.90}
    py{27,36}-{hub}-{1,2}
    py{27,36}-{5.4,5.5,5.6,6.0,6.1,6.2,6.3,6.4,unit}
    bench
    flake8

[testenv]
usedevelop = true
platform = linux|darwin|win32
deps =
    -e../datadog_checks_base[deps]
    -rrequirements-dev.txt
commands =
    pip install -r requirements.in
    {0.90,1,2,5.4,5.5,5.6,6.0,6.1,6.2,6.3,6.4}: pytest -v --benchmark-skip -m"not unit"
passenv =
    DOCKER*
    COMPOSE*
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    dd: ELASTIC_REGISTRY=datadog/docker-library
    hub: ELASTIC_REGISTRY=elasticsearch
    0.90: ELASTIC_IMAGE=elasticsearch_0_90
    1: ELASTIC_IMAGE=1-alpine
    2: ELASTIC_IMAGE=2-alpine
    ; EOL 2018-11-04
    5.4: ELASTIC_IMAGE=5.4.3
    ; EOL 2019-01-06
    5.5: ELASTIC_IMAGE=5.5.3
    ; EOL 2019-03-11
    5.6: ELASTIC_IMAGE=5.6.12
    ; EOL 2019-05-14
    6.0: ELASTIC_IMAGE=6.0.1
    ; EOL 2019-06-13
    6.1: ELASTIC_IMAGE=6.1.4
    ; EOL 2019-08-06
    6.2: ELASTIC_IMAGE=6.2.4
    ; EOL 2019-12-13
    6.3: ELASTIC_IMAGE=6.3.2
    ; EOL 2020-02-23
    6.4: ELASTIC_IMAGE=6.4.2

[testenv:unit]
commands =
    pip install -r requirements.in
    unit: pytest -v --benchmark-skip -m"unit"

[testenv:bench]
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.4.2
commands =
    pip install -r requirements.in
    pytest -v --benchmark-only --benchmark-cprofile=tottime

[testenv:flake8]
skip_install = true
deps = flake8
commands = flake8 .

[flake8]
exclude = .eggs,.tox,build
max-line-length = 120
