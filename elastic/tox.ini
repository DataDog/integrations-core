[tox]
minversion = 2.0
basepython = py27
envlist = elastic_{0.90,1,2,5.4,5.5,5.6,6.0,6.1,6.2,6.3,6.4}, unit, bench, flake8

[testenv]
platform = linux|darwin|win32
deps =
    ../datadog_checks_base[deps]
    -rrequirements-dev.txt
commands =
    pip install --require-hashes -r requirements.txt
    pytest -v --benchmark-skip -m"not unit"
passenv =
    DOCKER*
    COMPOSE*

[testenv:elastic_0.90]
setenv =
    ELASTIC_REGISTRY=datadog/docker-library
    ELASTIC_IMAGE=elasticsearch_0_90

[testenv:elastic_1]
setenv =
    ELASTIC_REGISTRY=elasticsearch
    ELASTIC_IMAGE=1-alpine

[testenv:elastic_2]
setenv =
    ELASTIC_REGISTRY=elasticsearch
    ELASTIC_IMAGE=2-alpine

[testenv:elastic_5.4]
; EOL 2018-11-04
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=5.4.3

[testenv:elastic_5.5]
; EOL 2019-01-06
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=5.5.3

[testenv:elastic_5.6]
; EOL 2019-03-11
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=5.6.12

[testenv:elastic_6.0]
; EOL 2019-05-14
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.0.1

[testenv:elastic_6.1]
; EOL 2019-06-13
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.1.4

[testenv:elastic_6.2]
; EOL 2019-08-06
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.2.4

[testenv:elastic_6.3]
; EOL 2019-12-13
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.3.2

[testenv:elastic_6.4]
; EOL 2020-02-23
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.4.2

[testenv:unit]
commands =
    pip install --require-hashes -r requirements.txt
    pytest -v --benchmark-skip -m"unit"

[testenv:bench]
setenv =
    ELASTIC_REGISTRY=docker.elastic.co/elasticsearch/elasticsearch
    ELASTIC_IMAGE=6.4.2
commands =
    pip install --require-hashes -r requirements.txt
    pytest -v --benchmark-only --benchmark-cprofile=tottime

[testenv:flake8]
skip_install = true
deps = flake8
commands = flake8 .

[flake8]
exclude = .eggs,.tox
max-line-length = 120
