init_config:

instances:

    ## @param url - string - required
    ## The URL where elasticsearch accepts HTTP requests. This is used to
    ## fetch statistics from the nodes and information about the cluster health.
    #
  - url: http://localhost:9200

    ## @param username - string - optional
    ## The username to use if services are behind basic auth.
    #
    # username: <USERNAME>

    ## @param password - string - optional
    ## The password to use if services are behind basic or NTLM auth.
    #
    # password: <PASSWORD>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## If `tls_verify` is disabled, security warnings are logged by the check.
    ## Disable those by setting `tls_ignore_warning` to true.
    #
    # tls_ignore_warning: false

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificateâ€™s authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param headers - list of key:value elements - optional
    ## The headers parameter allows you to send specific headers with every request.
    ## You can use it for explicitly specifying the host header or adding headers for
    ## authorization purposes.
    ##
    ## This overrides any default headers.
    #
    # headers:
    #   Host: <ALTERNATIVE_HOSTNAME>
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to services.
    #
    # timeout: 10

    ## @param log_requests - boolean - optional - default: false
    ## Whether or not to debug log the HTTP(S) requests made, including the method and URL.
    #
    # log_requests: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling for increased performance.
    #
    # persist_connections: false

    ## @param node_name_as_host - boolean - optional - default: false
    ## If each machine only runs a single Elasticsearch node per cluster, you
    ## want to set each Elasticsearch `node.name` to the machine hostname. You may
    ## then set `node_name_as_host` to `true` to avoid duplicate hostnames. See:
    ## https://www.elastic.co/guide/en/elasticsearch/reference/current/node.name.html
    #
    # node_name_as_host: false

    ## @param cluster_stats - boolean - optional - default: false
    ## If your cluster is hosted externally (i.e., you're not pointing to localhost)
    ## you must to set `cluster_stats` to true otherwise the check only
    ## submits metrics of the local node.
    ## This parameter was also called `is_external` and you can still use it but it
    ## is removed in Agent version 6+.
    #
    # cluster_stats: false

    ## @param index_stats - boolean - optional - default: false
    ## Set "index_stats" to true to collect metrics for individual indices.
    #
    # index_stats: false

    ## @param pshard_stats - boolean - optional - default: false
    ## If you enable the "pshard_stats" flag, statistics over primary shards
    ## are collected by the check and sent to the backend with the
    ## 'elasticsearch.primary' prefix. It is particularly useful if you want to
    ## get certain metrics without taking replicas into account. For instance,
    ## 'elasticsearch.primaries.docs.count` gives you the total number of
    ## documents in your indexes WITHOUT counting duplicates due to the existence
    ## of replica shards in your ES cluster.
    #
    # pshard_stats: false

    ## @param pshard_graceful_timeout - boolean - optional - default: false
    ## Continue gracefully if pshard stats TO
    #
    # pshard_graceful_timeout: false

    ## @param pending_task_stats - boolean - optional - default: true
    ## It specifies whether to collect data exposed by the `pending_tasks` cluster endpoint.
    ## Ref: https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-pending.html
    ## Some managed ElasticSearch services (e.g. AWS ElasticSearch) do not expose this endpoint.
    ## Set `pending_task_stats` to false if you use such a service.
    #
    # pending_task_stats: true

    ## @param admin_forwarder - boolean - optional - default: false
    ## It is used to signify a URL that includes a context root
    ## needed for a forwarder application to access Elasticsearch REST services
    ## for example https://www.ibm.com/support/knowledgecenter/SSFTN5_8.5.6/com.ibm.wbpm.main.doc/topics/tadm_fps_esearch.html
    #
    # admin_forwarder: false

    ## @param tags - list of key:value string - optional
    ## List of tags to attach to every metric and service check emitted by this integration.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param proxy - object - optional
    ## This overrides the `proxy` setting in `init_config`.
    ##
    ## Set HTTP or HTTPS proxies. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported like so:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /var/log/elasticsearch/*.log
#     source: elasticsearch
#     service: <SERVICE_NAME>
