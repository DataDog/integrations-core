sudo: required
services:
  - docker
language: python
python:
  - '2.7'
cache:
  directories:
    - "$HOME/.cache/pip"
git:
  depth: 3
branches:
  only:
    - master
env:
  global:
    - SKIP_CLEANUP=true
    - PIP_CACHE=$HOME/.cache/pip
stages:
  - name: test_changed
    if: type = pull_request
  - name: test
    if: (branch = master) AND (type = pull_request)
script: travis_retry inv test --targets=${CHECK}
jobs:
  fast_finish: true
  include:
    - stage: test_changed
      script:
       - inv manifest --include-extras
       - inv test --changed-only
    - stage: test
      script:
        - inv manifest --include-extras
        - travis_retry inv test --targets=${CHECK}
      env: CHECK=datadog_checks_base
    - stage: test
      env: CHECK=active_directory
    - stage: test
      env: CHECK=apache
    - stage: test
      env: CHECK=aspdotnet
    - stage: test
      env: CHECK=btrfs
    - stage: test
      env: CHECK=ceph
before_install:
  - chmod +x .travis/prepare.sh
  - .travis/prepare.sh
install:
  - pip install -U pip setuptools
  - pip install invoke pip-tools packaging tox docker-compose
# we should clean generated files before we save the cache
# We don't want to save .pyc files, so we'll use find and -delete
before_cache:
  - find $HOME/.cache/pip -name *.pyc -delete
after_script:
  - if [[ $(docker ps -a -q) ]]; then docker stop $(docker ps -a -q); fi
