id: marklogic
metric_id: marklogic
backend_only: false
facets:
  - groups:
      - Database
    name: Operation Type
    path: db.operation
    source: log
  - groups:
      - Web Access
    name: Method
    path: http.method
    source: log
  - groups:
      - Web Access
    name: Status Code
    path: http.status_code
    source: log
  - groups:
      - Web Access
    name: URL Host
    path: http.url_details.host
    source: log
  - groups:
      - Web Access
    name: URL Path
    path: http.url_details.path
    source: log
  - groups:
      - Web Access
    name: URL Port
    path: http.url_details.port
    source: log
  - groups:
      - Web Access
    name: URL scheme
    path: http.url_details.scheme
    source: log
  - groups:
      - Web Access
    name: Browser
    path: http.useragent_details.browser.family
    source: log
  - groups:
      - Web Access
    name: Device
    path: http.useragent_details.device.family
    source: log
  - groups:
      - Web Access
    name: OS
    path: http.useragent_details.os.family
    source: log
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
  - groups:
      - Database
    name: Table
    path: db.table
    source: log
pipeline:
  type: pipeline
  name: MarkLogic
  enabled: true
  filter:
    query: source:marklogic
  processors:
    - type: grok-parser
      name: Parsing Marklogic logs
      enabled: true
      source: message
      samples:
        - 127.0.0.1 - frank [13/Jul/2016:10:55:36 +0000] "GET /apache_pb.gif HTTP/1.0" 200 2326
        - '2018-10-24 00:00:18.951 Info: [Event:id=My Event ID] Preparing for distributed transaction: name=transaction_name, sessionKey=12345678'
        - '2018-10-24 00:00:06.626 Finest: Found FSN 12345678 in journal /my/table/path'
        - '2018-10-24 00:00:01.388 Debug: InMemoryStand /my/table/path, disk=15MB, memory=655MB, list=512MB, tree=128MB, rangeIndex=16MB, reverseIndex=16MB, tripleIndex=64MB'
      grok:
        supportRules: |
          _auth %{notSpace:http.auth:nullIf("-")}
          _bytes_written %{integer:network.bytes_written}
          _client_ip %{ipOrHost:network.client.ip}
          _version %{word}\/%{regex("\\d+\\.\\d+"):http.version}
          _url %{notSpace:http.url}
          _ident %{notSpace:http.ident:nullIf("-")}
          _user_agent %{regex("[^\\\"]*"):http.useragent}
          _referer %{notSpace:http.referer}
          _status_code %{integer:http.status_code}
          _method %{word:http.method}
          _date_access %{date("dd/MMM/yyyy:HH:mm:ss Z"):date_access}
        matchRules: |
          ## Web access format
          access.common %{_client_ip} %{_ident} %{_auth} \[%{_date_access}\] "(?>%{_method} |)%{_url} (?>%{_version}|)" %{_status_code} (?>%{_bytes_written}|-)
          access.combined %{access.common} ("%{_referer}"|-) "%{_user_agent}".*

          ## Error format
          transaction_format %{date("yyyy-MM-dd HH:mm:ss.SSS"):date_access} %{word}: (?>\[Event:id=%{data:event.id}\])? %{regex("Preparing|Completing"):db.operation} %{data:marklogic:keyvalue}

          journal_rule %{date("yyyy-MM-dd HH:mm:ss.SSS"):date_access} %{word}: Found %{data:document} in journal %{notSpace:db.table}

          Memory_format %{date("yyyy-MM-dd HH:mm:ss.SSS"):date_access} %{word:level}: (~)?InMemoryStand %{notSpace:db.table}(\s+%{data::keyvalue})?

          Meters_format %{date("yyyy-MM-dd HH:mm:ss.SSS"):date_access} %{word}: Meters %{word:db.action} (?>xdmp:)?document %{notSpace:db.table}

          error_format_fallback %{date("yyyy-MM-dd HH:mm:ss.SSS"):date_access} %{word:level}: (?>\[Event:id=%{data:event.id}\] )?%{data:marklogic:keyvalue}

    - type: url-parser
      name: ''
      enabled: true
      sources:
        - http.url
      target: http.url_details
    - type: user-agent-parser
      name: ''
      enabled: true
      sources:
        - http.useragent
      target: http.useragent_details
      encoded: false
    - type: date-remapper
      name: Define `date_access` as the official date of the log
      enabled: true
      sources:
        - date_access
    - type: category-processor
      name: Categorise status code
      enabled: true
      categories:
        - filter:
            query: '@http.status_code:[200 TO 299]'
          name: OK
        - filter:
            query: '@http.status_code:[300 TO 399]'
          name: notice
        - filter:
            query: '@http.status_code:[400 TO 499]'
          name: warning
        - filter:
            query: '@http.status_code:[500 TO 599]'
          name: error
      target: http.status_category
    - type: status-remapper
      name: Define `http.status_category`, `level` as the official status of the log
      enabled: true
      sources:
        - http.status_category
        - level
