name: ESXi
files:
- name: esxi.yaml
  options:
  - template: init_config
    options:
    - template: init_config/default
  - template: instances
    options:
        - name: host
          required: true
          display_priority: 1
          description: The host used to resolve the ESXi IP. It is either a FQDN or an IP.
          value:
            type: string
            example: <HOSTNAME>
        - name: username
          required: true
          display_priority: 1
          description: |
            The ESXi host username
          value:
            type: string
            example: <USERNAME>
        - name: password
          required: true
          display_priority: 1
          description: |
            The ESXi host password
          value:
            type: string
            example: <PASSWORD>
        - name: use_guest_hostname
          description: |
            If true, the check will use the guest hostname for VMs instead of the VM name.
            This requires the VM to have VMware tools installed. If the guest hostname is
            not available, it will fallback to the VM name.
            Use this if you install the agent on VMs to avoid duplicate entries for hosts
            in the web application UI.
            Note: If VMs are duplicated in the Infrastructure List, follow these troubleshooting steps
                  https://docs.datadoghq.com/integrations/faq/troubleshooting-duplicated-hosts-with-vsphere/.
          value:
            type: boolean
            example: false
        - name: collect_per_instance_filters
          description: |
            Use this option to collect metrics tagged with instance values.
            Some ESXi metrics can be tagged with instance values.
            For each resource type (vm, host) to collect,
            you can choose which metrics you want to collect the instance value as tags using a list of regex.
            See https://github.com/DataDog/integrations-core/blob/master/esxi/datadog_checks/esxi/metrics.py
            for the list of collected metrics (do not prefix them with `esxi`)
            /!\ Use with parsimony, collecting per-instance metrics might be very expensive for big environments.
          value:
            example:
              vm:
                - <VM_REGEX>
              host:
                - <HOST_REGEX>
            type: object
            properties:
              - name: vm
                type: array
                items:
                  type: string
              - name: host
                type: array
                items:
                  type: string
        - name: resource_filters
          description: |
            Each filter in the list is composed of three parameters.
            'resource' is one of vm/host on which to apply the filter
            'patterns' is a list of matching regex, if any of those matches, the resource will be monitored.
            'type' is either include list (default) or exclude list. If a resource is both included and excluded it will be
                  considered excluded.
            'property' is the kind of property on which to apply the filter and must be one of those values:
              - name (default) to filter on the resource name (defined by vCenter)
              - hostname to filter on the ESXi Host name (only valid for if 'resource' equals 'vm')
              - guest_hostname to filter on the VM hostname (only valid for if 'resource' equals 'vm' and
                if VMware tools are installed)
          value:
            example:
              - resource: vm
                property: name
                type: include
                patterns:
                  - <VM_REGEX_1>
                  - <VM_REGEX_2>
              - resource: vm
                type: exclude
                property: hostname
                patterns:
                  - <HOSTNAME_REGEX>
              - resource: vm
                type: exclude
                property: guest_hostname
                patterns:
                  - <GUEST_HOSTNAME_REGEX>
            type: array
            items:
              type: object
              properties:
                - name: resource
                  type: string
                - name: patterns
                  type: array
                  items:
                    type: string
                - name: type
                  type: string
                - name: property
                  type: string
        - name: metric_filters
          description: |
            Use this option to control what metrics to submit for each resource type
            For each resource type (vm, host) collected,
            you can choose which metric you want to collect using a list of regex.
            If you do not specify a regex for the resource, all metrics will be collected.
            See https://github.com/DataDog/integrations-core/blob/master/esxi/datadog_checks/esxi/metrics.py
            for the list of collected metrics (do not prefix them with `esxi`)
          value:
            example:
              vm:
                - <VM_REGEX>
              host:
                - <HOST_REGEX>
            type: object
            properties:
              - name: vm
                type: array
                items:
                  type: string
              - name: host
                type: array
                items:
                  type: string
        - name: excluded_host_tags
          description: |
            Use this option to send a subset of host tags as metric tags.
            The ESXi integration collects tags for every ESXi host or VM in your environment.
            Those tags can be `esxi_url`, esxi_type`, `esxi_host`, `esxi_folder`, `esxi_cluster`
            `esxi_compute`, `esxi_datacenter`, `esxi_datastore` and are attached to the ESXi metrics by default.
            By default these tags are submitted as host tags, but you can submit them as metric tags instead by using
            this configuration option, see: https://docs.datadoghq.com/tagging/using_tags/
            You will lose the ability to filter your hosts on the tags you specify but they will appear faster
            and will remove spikes from some `count by {TAG}` queries.
            A good use case is to set this parameter to `[esxi_host]`, indeed with VM migrations this tag is expected to
            change often and it is usually helpful to be informed quickly of this change.
          value:
            type: array
            items:
              type: string
            display_default: []
            example:
              - <HOST_TAG>
        - name: ssl_verify
          description: Set to false to disable SSL verification when connecting to the ESXi host
          value:
            type: boolean
            example: true
        - name: ssl_cafile
          description: |
            Set to the absolute file path of CA certificates in PEM format
          value:
            type: string
            example: "<FILE_PATH>"
        - name: ssl_capath
          description: |
            Set to the absolute file path of a directory containing CA certificates
            in PEM format
          value:
            type: string
            example: "<DIRECTORY_PATH>"
        - template: instances/default
