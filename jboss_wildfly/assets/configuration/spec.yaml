name: JBoss/WildFly
files:
- name: jboss_wildfly.yaml
  options:
  - template: init_config
    options:
    - template: init_config/jmx
      overrides:
        service_check_prefix.required: true
        service_check_prefix.value.example: jboss
        service_check_prefix.description: Service check prefix to use.
    - name: custom_jar_paths
      description: |
        These are the client JARs which allow connecting to the JBoss default JMX implementation.
        See documentation: https://docs.datadoghq.com/integrations/java/#monitoring-jboss-wildfly-applications
      value:
        type: array
        items:
          type: string
        example:
        - /path/to/jboss-cli-client.jar
  - template: instances
    options:
    - template: instances/jmx
      overrides:
        jmx_url.required: true
        jmx_url.hidden: false
        jmx_url.description: |-
          JBoss/WildFly URL to connect to:
          - For Wildfly 9 and older use: `jmx_url: service:jmx:http-remoting-jmx://<HOST>:<PORT>`
          - For Wildfly 10+ use: `jmx_url: service:jmx:remote+http://<HOST>:<PORT>`
        jmx_url.value.example: "service:jmx:remote+http://localhost:9990"
        jmx_url.display_priority: 10
        host.required: false
        port.required: false

  - template: logs
    example:
    - type: file
      path: /opt/jboss/wildfly/standalone/log/*.log
      source: jboss_wildfly
      service: <SERVICE_NAME>
      log_processing_rules:
      - type: multi_line
        name: log_start_with_date
        pattern: \d{4}-\d{2}-\d{2}
