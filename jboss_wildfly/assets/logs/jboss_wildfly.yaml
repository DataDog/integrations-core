id: jboss_wildfly
metric_id: jboss-wildfly
backend_only: false
facets:
  - groups:
      - Web Access
    name: Method
    path: http.method
    source: log
  - groups:
      - Web Access
    name: Status Code
    path: http.status_code
    source: log
  - groups:
      - Web Access
    name: URL Host
    path: http.url_details.host
    source: log
  - groups:
      - Web Access
    name: URL Path
    path: http.url_details.path
    source: log
  - groups:
      - Web Access
    name: URL Port
    path: http.url_details.port
    source: log
  - groups:
      - Web Access
    name: URL scheme
    path: http.url_details.scheme
    source: log
  - groups:
      - Source Code
    name: Logger Name
    path: logger.name
    source: log
  - groups:
      - Source Code
    name: Thread Name
    path: logger.thread_name
    source: log
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
pipeline:
  type: pipeline
  name: JBoss/Wildfly
  enabled: true
  filter:
    query: source:jboss_wildfly
  processors:
    - type: grok-parser
      name: Parsing JBoss/Wildfly logs
      enabled: true
      source: message
      samples:
        - 127.0.0.1 - - [24/Apr/2019:07:13:05 +0000] "GET /jboss-logging/home.jsp HTTP/1.1" 200 369
        - 2019-04-24 07:04:23,431 ERROR [org.jboss.as.quickstarts.logging.LoggingExample] (default task-1) THIS IS AN ERROR MESSAGE
      grok:
        supportRules: |
          _client_ip %{ipOrHost:network.client.ip}
          _ident %{notSpace:http.ident:nullIf("-")}
          _auth %{notSpace:http.auth:nullIf("-")}
          _http_date_rule %{date("dd/MMM/yyyy:HH:mm:ss Z"):date}
          _method %{word:http.method}
          _url %{notSpace:http.url}
          _version HTTP\/%{regex("\\d+\\.\\d+"):http.version}
          _status_code %{integer:http.status_code}
          _bytes_written %{integer:network.bytes_written}
          _generic_date_rule %{date("yyyy-MM-dd HH:mm:ss,SSS"):date}

        matchRules: |
          http_rule  %{_client_ip} %{_ident} %{_auth} \[%{_http_date_rule}\] "(?>%{_method} |)%{_url}(?> %{_version}|)" %{_status_code} (?>%{_bytes_written}|-)

          generic_rule %{_generic_date_rule}\s%{notSpace:level}\s\[%{notSpace:logger.name}\]\s\(%{data:logger.thread_name}\) .*

    - type: category-processor
      name: Categorise status code
      enabled: true
      categories:
        - filter:
            query: '@http.status_code:[200 TO 299]'
          name: OK
        - filter:
            query: '@http.status_code:[300 TO 399]'
          name: notice
        - filter:
            query: '@http.status_code:[400 TO 499]'
          name: warning
        - filter:
            query: '@http.status_code:[500 TO 599]'
          name: error
      target: http.status_category
    - type: url-parser
      name: ''
      enabled: true
      sources:
        - http.url
      target: http.url_details
    - type: status-remapper
      name: Define `http.status_category`, `level` as the official status of the log
      enabled: true
      sources:
        - http.status_category
        - level
    - type: date-remapper
      name: Define `date` as the official date of the log
      enabled: true
      sources:
        - date
