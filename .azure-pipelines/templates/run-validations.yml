parameters:
  check: null
  repo: 'core'
  ispr: false
  validate_changed: ''
  validate_codeowners: false
  validate_ci: true

steps:
- ${{ if eq(parameters.validate_ci, 'true') }}:
  - script: |
      echo "ddev validate ci"
      ddev validate ci
    displayName: 'Validate CI configuration'

- ${{ if eq(parameters.repo, 'core') }}:
  - script: |
      echo "ddev validate agent-reqs ${{ parameters.validate_changed }}"
      ddev validate agent-reqs ${{ parameters.validate_changed }}
    displayName: 'Validate Agent requirements'

- ${{ if eq(parameters.validate_codeowners, 'true') }}:
  - script: |
      echo "ddev validate codeowners"
      ddev validate codeowners
    displayName: 'Validate codeowners'

- ${{ if eq(parameters.repo, 'core') }}:
  - script: |
      echo "ddev validate http ${{ parameters.validate_changed }}"
      ddev validate http ${{ parameters.validate_changed }}
    displayName: 'Validate use of http wrapper'

- script: |
    echo "ddev validate config ${{ parameters.validate_changed }}"
    ddev validate config ${{ parameters.validate_changed }}
  displayName: 'Validate default configuration files'

- script: |
    echo "ddev validate models ${{ parameters.validate_changed }}"
    ddev validate models ${{ parameters.validate_changed }}
  displayName: 'Validate configuration data models'

- script: |
    echo "ddev validate dashboards ${{ parameters.validate_changed }}"
    ddev validate dashboards ${{ parameters.validate_changed }}
  displayName: 'Validate dashboard definition files'

- ${{ if eq(parameters.repo, 'core') }}:
  - script: |
      echo "validate dep --require-base-check-version ${{ parameters.check }}"
      ddev validate dep --require-base-check-version ${{ parameters.check }}
    displayName: 'Validate dependencies'

- ${{ if eq(parameters.repo, 'core') }}:
  - script: |
      echo "ddev meta snmp validate-profile"
      ddev meta snmp validate-profile
    displayName: 'Validate snmp profiles'

- script: |
    echo "ddev validate manifest ${{ parameters.validate_changed }}"
    ddev validate manifest ${{ parameters.validate_changed }}
  displayName: 'Validate manifest files'

- script: |
    echo "ddev validate metadata ${{ parameters.validate_changed }}"
    ddev validate metadata ${{ parameters.validate_changed }}
  displayName: 'Validate metric data'

- script: |
    echo "ddev validate readmes ${{ parameters.validate_changed }}"
    ddev validate readmes ${{ parameters.validate_changed }}
  displayName: 'Validate README files'

- script: |
    echo "ddev validate recommended-monitors ${{ parameters.validate_changed }}"
    ddev validate recommended-monitors ${{ parameters.validate_changed }}
  displayName: 'Validate monitors files'

- script: |
    echo "ddev validate saved-views ${{ parameters.validate_changed }}"
    ddev validate saved-views ${{ parameters.validate_changed }}
  displayName: 'Validate saved views data'

- script: |
    echo "ddev validate service-checks ${{ parameters.validate_changed }}"
    ddev validate service-checks ${{ parameters.validate_changed }}
  displayName: 'Validate service check data'

- script: |
    echo "ddev validate imports ${{ parameters.validate_changed }}"
    ddev validate imports ${{ parameters.validate_changed }}
  displayName: 'Validate imports'

- script: |
    echo "ddev validate package ${{ parameters.validate_changed }}"
    ddev validate package ${{ parameters.validate_changed }}
  displayName: 'Validate package'

- script: |
    echo "ddev validate jmx-metrics ${{ parameters.validate_changed }}"
    ddev validate jmx-metrics ${{ parameters.validate_changed }}
  displayName: 'Validate JMX integrations metrics.yaml'

- ${{ if eq(parameters.repo, 'core') }}:
  - script: |
      echo "ddev validate licenses"
      ddev validate licenses
    displayName: 'Validate third-party license list'

- ${{ if eq(parameters.repo, 'marketplace') }}:
  - script: |
      echo "ddev validate eula"
      ddev validate eula
    displayName: 'Validate EULA files'
