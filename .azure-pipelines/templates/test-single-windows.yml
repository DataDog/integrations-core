parameters:
  job_name: ''
  check: ''
  display: ''
  test: true
  test_e2e: true
  ddtrace_flag: ''
  benchmark: false
  latest_metrics: false
  validate: false
  validate_codeowners: false
  repo: 'core'
  ispr: false
  run_py2_tests: true  # Whether or not to run python2 tests
  force_base_package: false
  pip_cache_config: null
  coverage: true

jobs:
- job: '${{ coalesce(parameters.job_name, parameters.check) }}_Windows'
  displayName: '${{ parameters.display }}'

  services:
    ${{ if eq(parameters.ddtrace_flag, '--ddtrace') }}:
      dd_agent: dd_agent

  pool:
    vmImage: 'windows-2019'

  variables:
    DDEV_E2E_AGENT: datadog/agent-dev:master-py3-win-servercore
    ${{ if not(eq(parameters.run_py2_tests, 'true')) }}:
      TOX_SKIP_ENV: py27.*  # Don't run py2 tests
    ${{ if eq(parameters.ddtrace_flag, '--ddtrace') }}:
      DD_ENV: ci
      DD_SERVICE: ddev-integrations-${{ parameters.repo }}
      DD_TAGS: "team:agent-integrations,platform:windows,check:${{ parameters.check }}"
      DD_TRACE_ANALYTICS_ENABLED: "true"

  steps:
  - template: './checkout-code.yml'

  - template: './set-up-windows.yml'

  - template: './install-deps.yml'
    parameters:
      repo: ${{ parameters.repo }}
      pip_cache_config: ${{ parameters.pip_cache_config }}
      run_py2_tests: ${{ parameters.run_py2_tests }}

  - template: './set-up-integrations.yml'
    parameters:
      check: ${{ parameters.check }}

  - ${{ if eq(parameters.validate, 'true') }}:
    - template: './run-validations.yml'
      parameters:
        check: ${{ parameters.check }}
        repo: ${{ parameters.repo }}
        ispr: ${{ parameters.ispr }}
        validate_codeowners: ${{ parameters.validate_codeowners }}

  - template: './run-tests.yml'
    parameters:
      test_run: '${{ coalesce(parameters.job_name, parameters.check) }}.windows'
      check: ${{ parameters.check }}
      test: ${{ parameters.test }}
      test_e2e: ${{ parameters.test_e2e }}
      dd_flag: ${{ parameters.ddtrace_flag }}
      benchmark: ${{ parameters.benchmark }}
      latest_metrics: ${{ parameters.latest_metrics }}
      repo: ${{ parameters.repo }}
      coverage: ${{ parameters.coverage }}
      force_base_package: ${{ parameters.force_base_package }}
