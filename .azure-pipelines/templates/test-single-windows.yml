parameters:
  agent_image_win: ''
  agent_image_win_py2: ''
  job_name: ''
  check: ''
  display: ''
  test: true
  test_e2e: true
  ddtrace_flag: ''
  benchmark: false
  latest: false
  validate: false
  validate_changed: ''
  validate_codeowners: false
  repo: 'core'
  ispr: false
  run_py2_tests: true  # Whether or not to run python2 tests
  run_py3_tests: true  # Whether or not to run python3 tests.
  force_base_package: false
  pip_cache_config: null
  coverage: true
  dd_url: https://app.datadoghq.com

jobs:
- job: '${{ coalesce(parameters.job_name, parameters.check) }}_Windows'
  displayName: '${{ parameters.display }}'
  timeoutInMinutes: 180

  services:
    ${{ if eq(parameters.ddtrace_flag, '--ddtrace') }}:
      dd_agent: dd_agent

  pool:
    vmImage: 'windows-2019'

  variables:
    ${{ if eq(parameters.agent_image_win, '') }}:
      DDEV_E2E_AGENT: datadog/agent-dev:master-py3-win-servercore
    ${{ if ne(parameters.agent_image_win, '') }}:
      DDEV_E2E_AGENT: ${{ parameters.agent_image_win }}
    ${{ if eq(parameters.agent_image_win_py2, '') }}:
      DDEV_E2E_AGENT_PY2: datadog/agent-dev:master-py2-win-servercore
    ${{ if ne(parameters.agent_image_win_py2, '') }}:
      DDEV_E2E_AGENT_PY2: ${{ parameters.agent_image_win_py2 }}

    # Generic tag check disabled on non-core repo
    ${{ if not(eq(parameters.run_py2_tests, 'true')) }}:
      SKIP_ENV_NAME: py2.*  # Don't run py2 tests
    ${{ if not(eq(parameters.run_py3_tests, 'true')) }}:
      SKIP_ENV_NAME: py3.*  # Don't run py3 tests
    ${{ if eq(parameters.ddtrace_flag, '--ddtrace') }}:
      DD_ENV: ci
      DD_SERVICE: ddev-integrations-${{ parameters.repo }}
      DD_TAGS: "team:agent-integrations,platform:windows,check:${{ parameters.check }}"
      DD_TRACE_ANALYTICS_ENABLED: "true"

  steps:
  - template: './checkout-code.yml'

  - template: './set-up-windows.yml'

  - template: './install-deps.yml'
    parameters:
      repo: ${{ parameters.repo }}
      pip_cache_config: ${{ parameters.pip_cache_config }}
      run_py2_tests: ${{ parameters.run_py2_tests }}
      dd_url: ${{ parameters.dd_url }}

  - template: './set-up-integrations.yml'
    parameters:
      check: ${{ parameters.check }}

  - ${{ if eq(parameters.validate, 'true') }}:
    - template: './run-validations.yml'
      parameters:
        validate_changed: ${{ parameters.validate_changed }}
        check: ${{ parameters.check }}
        repo: ${{ parameters.repo }}
        ispr: ${{ parameters.ispr }}
        validate_codeowners: ${{ parameters.validate_codeowners }}

  - template: './run-tests.yml'
    parameters:
      test_run: '${{ coalesce(parameters.job_name, parameters.check) }}.windows'
      check: ${{ parameters.check }}
      test: ${{ parameters.test }}
      test_e2e: ${{ parameters.test_e2e }}
      dd_flag: ${{ parameters.ddtrace_flag }}
      benchmark: ${{ parameters.benchmark }}
      latest: ${{ parameters.latest }}
      repo: ${{ parameters.repo }}
      coverage: ${{ parameters.coverage }}
      force_base_package: ${{ parameters.force_base_package }}

  - ${{ if and(eq(parameters.repo, 'core'), eq(parameters.test, 'true'), eq(parameters.coverage, 'true'), eq(parameters.force_base_package, 'false')) }}:
    # https://docs.codecov.com/docs/codecov-uploader
    - powershell: |
        Invoke-WebRequest -Uri https://uploader.codecov.io/v0.3.2/windows/codecov.exe -Outfile codecov.exe
        # Verify checksum
        "9dce1ac2d35f550d96d46f8a1116b4f03740d61ca4508bfccdbf1ea1dfeabe4d  codecov.exe" > codecov.exe.SHA256SUM
        If ($(Compare-Object -ReferenceObject  $(($(certUtil -hashfile codecov.exe SHA256)[1], "codecov.exe") -join "  ") -DifferenceObject $(Get-Content codecov.exe.SHA256SUM)).length -eq 0) { echo "SHASUM verified" } Else {exit 1}
      displayName: 'Install Codecov'
    - bash: |        
        for cov_file in */coverage.xml; do
          echo "Uploading $cov_file with flag $(dirname $cov_file)"
          ./codecov --F $(dirname $cov_file) -f $cov_file
        done
      displayName: 'Upload coverage data'
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)
