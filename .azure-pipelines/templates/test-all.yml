parameters:
  agent_image_win: ''
  agent_image_win_py2: ''
  checks: []
  repo: 'core'
  ispr: false
  pip_cache_config: null
  run_py2_tests: true
  run_py3_tests: true
  force_base_package: false
  coverage: true
  test: true
  test_e2e: true
  benchmark: true
  latest: false
  ddtrace_flag: ''
  dd_url: https://app.datadoghq.com

jobs:
- ${{ each check in parameters.checks }}:
  - template: './test-single-${{ check.os }}.yml'
    parameters:
      check: ${{ check.checkName }}
      coverage: ${{ parameters.coverage }}
      display: ${{ check.displayName }}
      repo: ${{ parameters.repo }}
      ispr: ${{ parameters.ispr }}
      pip_cache_config: ${{ parameters.pip_cache_config }}
      run_py2_tests: ${{ parameters.run_py2_tests }}
      run_py3_tests: ${{ parameters.run_py3_tests }}
      force_base_package: ${{ parameters.force_base_package }}
      test: ${{ parameters.test }}
      test_e2e: ${{ parameters.test_e2e }}
      benchmark: ${{ parameters.benchmark }}
      latest: ${{ parameters.latest }}
      ddtrace_flag: ${{ parameters.ddtrace_flag }}
      validate_codeowners: ${{ parameters.validate_codeowners }}
      dd_url: ${{ parameters.dd_url }}

      # Setup windows images
      ${{ if eq(check.os, 'windows')}}:
        agent_image_win: ${{ parameters.agent_image_win }}
        agent_image_win_py2: ${{ parameters.agent_image_win_py2 }}

      # Avoid max step limits
      ${{ if eq(check.checkName, 'datadog_checks_base') }}:
        validate: false
        validate_changed: all
