metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
weaviate.async.operations.running,gauge,,operation,,The number of currently running async operations. The operation itself is defined through the operation label,0,weaviate,weaviate async operations running,
weaviate.backup.restore.class.ms.count,count,,operation,,The number of samples used to calculate the duration of restoring a class,0,weaviate,weaviate backup restore class count,
weaviate.backup.restore.class.ms.sum,count,,millisecond,,The duration of restoring a class,0,weaviate,weaviate backup restore class sum,
weaviate.backup.restore.data.transferred,count,,byte,,The total number of bytes transferred during a backup restore,0,weaviate,weaviate backup restore data transferred,
weaviate.backup.restore.from.backend.ms.count,count,,operation,,The number of samples used to calculate the duration of the file transfer stage of a backup restore,0,weaviate,weaviate backup restore from backend count,
weaviate.backup.restore.from.backend.ms.sum,count,,millisecond,,The duration of the file transfer stage of a backup restore,0,weaviate,weaviate backup restore from backend sum,
weaviate.backup.restore.init.ms.count,count,,operation,,The number of samples used to calculate the duration of the startup phase of a backup restore,0,weaviate,weaviate backup restore init count,
weaviate.backup.restore.init.ms.sum,count,,millisecond,,The duration of the startup phase of a backup restore,0,weaviate,weaviate backup restore init sum,
weaviate.backup.restore.ms.count,count,,operation,,The number of samples used to calculate the duration of backup restores,0,weaviate,weaviate backup restore count,
weaviate.backup.restore.ms.sum,count,,millisecond,,The duration of backup restores,0,weaviate,weaviate backup restore sum,
weaviate.backup.store.data.transferred,count,,byte,,The total number of bytes transferred during a backup store,0,weaviate,weaviate backup store data transferred,
weaviate.backup.store.to.backend.ms.count,count,,operation,,The number of samples used to calculate the duration of the file transfer stage of a backup store,0,weaviate,weaviate backup store to backend count,
weaviate.backup.store.to.backend.ms.sum,count,,millisecond,,The duration of the file transfer stage of a backup store,0,weaviate,weaviate backup store to backend sum,
weaviate.batch.delete.durations_ms.bucket,count,,operation,,"The number of operations observed for the batch delete duration histogram by `upper_bound` buckets",0,weaviate,weaviate batch delete duration bucket,
weaviate.batch.delete.durations_ms.count,count,,operation,,"The count of operations observed in the batch delete duration histogram",0,weaviate,weaviate batch delete duration count,
weaviate.batch.delete.durations_ms.sum,count,,millisecond,,The sum of the duration of a batch delete in ms. The operation label further defines what operation as part of the batch delete is being measured. Granularity is a shard of a class,0,weaviate,weaviate batch delete duration sum,
weaviate.batch.durations_ms.bucket,count,,operation,,"The number of operations observed for the batch operation duration histogram by `upper_bound` buckets",0,weaviate,weaviate batch duration bucket,
weaviate.batch.durations_ms.count,count,,operation,,"The count of operations observed in the batch operation duration histogram",0,weaviate,weaviate batch duration count,
weaviate.batch.durations_ms.sum,count,,millisecond,,"The sum of the duration of a single batch operation in ms. The operation label further defines what operation as part of the batch (e.g. object, inverted, vector) is being used. Granularity is a shard of a class",0,weaviate,weaviate batch duration sum,
weaviate.bucket.pause.durations.ms.count,count,,operation,,The number of samples used to calculate the duration of bucket pauses,0,weaviate,weaviate bucket pause durations count,
weaviate.bucket.pause.durations.ms.sum,count,,millisecond,,The duration of bucket pauses,0,weaviate,weaviate bucket pause durations sum,
weaviate.concurrent.goroutines,gauge,,,,"The number of concurrently running goroutines",0,weaviate,weaviate concurrent goroutines,
weaviate.concurrent.queries,gauge,,operation,,"The number of concurrently running query operations",0,weaviate,weaviate concurrent queries,
weaviate.go.gc.duration.seconds.count,count,,second,,The summary count of garbage collection cycles in the Weaviate instance,0,weaviate,weaviate go gc duration seconds count,
weaviate.go.gc.duration.seconds.quantile,gauge,,second,,A summary of the pause duration of garbage collection cycles in the Weaviate instance,0,weaviate,weaviate go gc duration seconds,
weaviate.go.gc.duration.seconds.sum,count,,second,,The sum of the pause duration of garbage collection cycles in the Weaviate instance,0,weaviate,weaviate go gc duration seconds sum,
weaviate.go.goroutines,gauge,,,,The number of goroutines that currently exist in the Weaviate instance,0,weaviate,weaviate go goroutines,
weaviate.go.info,gauge,,,,Metric containing the Go version as a tag,0,weaviate,weaviate go info,
weaviate.go.memstats.alloc_bytes,gauge,,byte,,The number of bytes allocated and still in use in the Weaviate instance,0,weaviate,weaviate go memstats alloc_bytes,
weaviate.go.memstats.alloc_bytes.count,count,,byte,,The monotonic count of bytes allocated and still in use in the Weaviate instance,0,weaviate,weaviate go memstats alloc_bytes,
weaviate.go.memstats.buck_hash.sys_bytes,gauge,,byte,,The number of bytes used by the profiling bucket hash table in the Weaviate instance,0,weaviate,weaviate go memstats buck_hash sys_bytes,
weaviate.go.memstats.frees.count,count,,,,The total number of frees in the Weaviate instance,0,weaviate,weaviate go memstats frees,
weaviate.go.memstats.gc.cpu_fraction,gauge,,fraction,,The fraction of this program's available CPU time used by the GC since the program started in the Weaviate instance,0,weaviate,weaviate go memstats gc cpu_fraction,
weaviate.go.memstats.gc.sys_bytes,gauge,,byte,,The number of bytes used for garbage collection system metadata in the Weaviate instance,0,weaviate,weaviate go memstats gc sys_bytes,
weaviate.go.memstats.heap.alloc_bytes,gauge,,byte,,The number of heap bytes allocated and still in use in the Weaviate instance,0,weaviate,weaviate go memstats heap alloc_bytes,
weaviate.go.memstats.heap.idle_bytes,gauge,,byte,,The number of heap bytes waiting to be used in the Weaviate instance,0,weaviate,weaviate go memstats heap idle_bytes,
weaviate.go.memstats.heap.inuse_bytes,gauge,,byte,,The number of heap bytes that are in use in the Weaviate instance,0,weaviate,weaviate go memstats heap inuse_bytes,
weaviate.go.memstats.heap.objects,gauge,,object,,The number of allocated objects in the Weaviate instance,0,weaviate,weaviate go memstats heap objects,
weaviate.go.memstats.heap.released_bytes,gauge,,byte,,The number of heap bytes released to the OS in the Weaviate instance,0,weaviate,weaviate go memstats heap released_bytes,
weaviate.go.memstats.heap.sys_bytes,gauge,,byte,,The number of heap bytes obtained from system in the Weaviate instance,0,weaviate,weaviate go memstats heap sys_bytes,
weaviate.go.memstats.lookups.count,count,,,,The number of pointer lookups,0,weaviate,weaviate go memstats lookups,
weaviate.go.memstats.mallocs.count,count,,,,The number of mallocs,0,weaviate,weaviate go memstats mallocs,
weaviate.go.memstats.mcache.inuse_bytes,gauge,,byte,,The number of bytes in use by mcache structures in the Weaviate instance,0,weaviate,weaviate go memstats mcache inuse_bytes,
weaviate.go.memstats.mcache.sys_bytes,gauge,,byte,,The number of bytes used for mcache structures obtained from system in the Weaviate instance,0,weaviate,weaviate go memstats mcache sys_bytes,
weaviate.go.memstats.mspan.inuse_use,gauge,,byte,,The number of bytes in use by mspan structures in the Weaviate instance,0,weaviate,weaviate go memstats mspan inuse_use,
weaviate.go.memstats.mspan.sys_bytes,gauge,,byte,,The number of bytes used for mspan structures obtained from system in the Weaviate instance,0,weaviate,weaviate go memstats mspan sys_bytes,
weaviate.go.memstats.next.gc_bytes,gauge,,byte,,The number of heap bytes when next garbage collection takes place in the Weaviate instance,0,weaviate,weaviate go memstats next gc_bytes,
weaviate.go.memstats.other.sys_bytes,gauge,,byte,,The number of bytes used for other system allocations in the Weaviate instance,0,weaviate,weaviate go memstats other sys_bytes,
weaviate.go.memstats.stack.inuse_bytes,gauge,,byte,,The number of bytes in use by the stack allocator in the Weaviate instance,0,weaviate,weaviate go memstats stack inuse_bytes,
weaviate.go.memstats.stack.sys_bytes,gauge,,byte,,The number of bytes obtained from system for stack allocator in the Weaviate instance,0,weaviate,weaviate go memstats stack sys_bytes,
weaviate.go.memstats.sys_bytes,gauge,,byte,,The number of bytes obtained from system in the Weaviate instance,0,weaviate,weaviate go memstats sys_bytes,
weaviate.go.threads,gauge,,thread,,The number of OS threads created in the Weaviate instance,0,weaviate,weaviate go threads,
weaviate.lsm.active.segments,gauge,,segment,,The number of currently present segments per shard. Granularity is shard of a class. Grouped by strategy,0,weaviate,weaviate startup diskio throughput sum,
weaviate.lsm.bloom.filters.duration_ms.count,count,,operation,,The number of samples used to calculate the duration of a bloom operation,0,weaviate,weaviate lsm blood duration count,
weaviate.lsm.bloom.filters.duration_ms.sum,count,,millisecond,,The duration of a bloom filter operation per shard in ms. Granularity is shard of a class. Grouped by strategy,0,weaviate,weaviate lsm blood duration sum,
weaviate.lsm.memtable.durations_ms.count,count,,operation,,The number of samples used to calculate the duration of a sync or async vector index maintenance operation,0,weaviate,weaviate vector index maintenance durations count,
weaviate.lsm.memtable.durations_ms.sum,count,,millisecond,,The duration of a sync or async vector index maintenance operation. The operation itself is defined through the operation label,0,weaviate,weaviate vector index maintenance durations sum,
weaviate.lsm.memtable.size,gauge,,,,"The size of memtable by path",0,weaviate,weaviate lsm memtable size,
weaviate.lsm.segment.objects,gauge,,object,,The number of entries per LSM segment by level. Granularity is shard of a class. Grouped by strategy and level,0,weaviate,weaviate lsm segment objects,
weaviate.lsm.segment.size,gauge,,,,The size of LSM segment by level and unit,0,weaviate,weaviate lsm segment size,
weaviate.lsm.segments,gauge,,segment,,The number of segments by level,0,weaviate,weaviate lsm segment count,
weaviate.objects,gauge,,object,,The numbers of objects present. Granularity is a shard of a class,0,weaviate,weaviate object count,
weaviate.objects.durations_ms.count,count,,operation,,The number of samples used to calculate the duration of an individual object operation,0,weaviate,weaviate object duration count,
weaviate.objects.durations_ms.sum,count,,millisecond,,"The duration of an individual object operation, such as put, delete, etc. as indicated by the operation label, also as part of a batch. The step label adds additional precisions to each operation. Granularity is a shard of a class",0,weaviate,weaviate object duration duration sum,
weaviate.process.cpu.seconds.count,count,,second,,The total user and system CPU time spent in seconds in the Weaviate instance,0,weaviate,weaviate process cpu seconds,
weaviate.process.max_fds,gauge,,,,The maximum number of open file descriptors in the Weaviate instance,0,weaviate,weaviate process max_fds,
weaviate.process.open_fds,gauge,,,,The number of open file descriptors in the Weaviate instance,0,weaviate,weaviate process open_fds,
weaviate.process.resident_memory.bytes,gauge,,byte,,The resident memory size in bytes in the Weaviate instance,0,weaviate,weaviate process resident_memory bytes,
weaviate.process.start_time.seconds,gauge,,second,,The start time of the process since unix epoch in seconds in the Weaviate instance,0,weaviate,weaviate process start_time seconds,
weaviate.process.virtual_memory.bytes,gauge,,byte,,The virtual memory size in bytes in the Weaviate instance,0,weaviate,weaviate process virtual_memory bytes,
weaviate.process.virtual_memory.max_bytes,gauge,,byte,,The maximum amount of virtual memory available in bytes in the Weaviate instance,0,weaviate,weaviate process virtual_memory max_byte,
weaviate.promhttp.metric_handler.requests.count,count,,request,,The total number of scrapes by HTTP status code,0,weaviate,weaviate process virtual_memory max_byte,
weaviate.promhttp.metric_handler.requests_in_flight,gauge,,request,,The current number of scrapes being served,0,weaviate,weaviate process virtual_memory max_byte,
weaviate.queries.durations_ms.bucket,count,,operation,,"The number of operations observed in the query duration histogram by `upper_bound` buckets",0,weaviate,weaviate queries duration bucket,
weaviate.queries.durations_ms.count,count,,operation,,"The count of operations observed in the query duration histogram",0,weaviate,weaviate queries duration count,
weaviate.queries.durations_ms.sum,count,,millisecond,,The sum of query durations in milliseconds,0,weaviate,weaviate queries duration sum,
weaviate.queries.filtered.vector.durations_ms.count,count,,,,The count of the duration of queries summary,0,weaviate,weaviate queries filtered vector duration count,
weaviate.queries.filtered.vector.durations_ms.sum,count,,millisecond,,The duration of queries in milliseconds,0,weaviate,weaviate queries filtered vector duration sum,
weaviate.requests,gauge,,request,,"The number of requests tagged by a given status(ok, user_error, server_error). Available only on Weaviate version 1.20.0+",0,weaviate,weaviate requests count,
weaviate.startup.diskio.throughput.bucket,count,,operation,,"The number of operations observed for the the disk I/O throughput duration by `upper_bound` buckets",0,weaviate,weaviate startup diskio throughput bucket,
weaviate.startup.diskio.throughput.count,count,,operation,,"The count of operations observed in the disk I/O throughput duration histogram",0,weaviate,weaviate startup diskio throughput count,
weaviate.startup.diskio.throughput.sum,count,,byte,second,"The sum of disk I/O throughput startup operations in bytes/s, such as reading back the HNSW index or recovering LSM segments. The operation itself is defined by the operation label",0,weaviate,weaviate startup diskio throughput sum,
weaviate.startup.durations_ms.count,count,,operation,,The number of samples used to calculate the duration individual startup operation,0,weaviate,weaviate startup durations count,
weaviate.startup.durations_ms.sum,count,,millisecond,,The duration of individual startup operations in ms. The operation itself is defined through the operation label,0,weaviate,weaviate startup durations sum,
weaviate.startup.progress,gauge,,,,The ratio (percentage) of startup progress for a particular component in a shard,0,weaviate,weaviate startup progress,
weaviate.vector.dimensions.count,count,,,,The total dimensions in a shard,0,weaviate,weaviate vector dimensions,
weaviate.query.dimensions.count,count,,,,The vector dimensions used by any read-query that involves vectors,0,weaviate,weaviate query dimensions,
weaviate.vector.index.durations_ms.count,count,,operation,,The number of samples used to calculate the duration of a sync or async vector index operation,0,weaviate,weaviate vector index durations count,
weaviate.vector.index.durations_ms.sum,count,,millisecond,,"The duration of regular vector index operation, such as insert or delete. The operation itself is defined through the operation label. The step label adds more granularity to each operation",0,weaviate,weaviate vector index durations sum,
weaviate.vector.index.maintenance.durations_ms.count,count,,operation,,The number of samples used to calculate the duration of a sync or async vector index operation,0,weaviate,weaviate vector index maintenance durations count,
weaviate.vector.index.maintenance.durations_ms.sum,count,,millisecond,,The duration of a sync or async vector index maintenance operation. The operation itself is defined through the operation label,0,weaviate,weaviate vector index maintenance durations sum,
weaviate.vector.index.operations,gauge,,operation,,The total number of mutating operations on the vector index. The operation itself is defined by the operation label,0,weaviate,weaviate vector index tombstone operations,
weaviate.vector.index.size,gauge,,,,The total capacity of the vector index. Typically larger than the number of vectors imported as it grows proactively,0,weaviate,weaviate vector index size,
weaviate.vector.index.tombstone.cleaned.count,count,,,,The total number of deleted and removed vectors after repair operations,0,weaviate,weaviate vector index tombstone cleaned,
weaviate.vector.index.tombstone.cleanup.threads,gauge,,,,The number of currently active threads for repairing/cleaning up the vector index after deletes have occurred,0,weaviate,weaviate vector index tombstone cleanup threads,
weaviate.vector.index.tombstones,gauge,,,,The number of active vector index tombstones,0,weaviate,weaviate vector index tombstone,
weaviate.http.latency_ms,gauge,,millisecond,,The HTTP request response time latency in ms,0,weaviate,weaviate http latency ms,
weaviate.node.shard.objects,gauge,,object,,The number of objects inside a Weaviate shard,0,weaviate,weaviate node shard,
weaviate.node.stats.objects,gauge,,object,,The number of objects inside a Weaviate node,0,weaviate,weaviate node stats object,
weaviate.node.stats.shards,gauge,,shard,,The number of shard inside a Weaviate shard,0,weaviate,weaviate node stats shard,
weaviate.node.status,gauge,,,,"The current status of a Weaviate Node. 0:HEALTHY, 1:UNHEALTHY, 2:UNAVAILABLE, and 3:UNKNOWN",0,weaviate,weaviate node status,
