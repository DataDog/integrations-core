# (C) Datadog, Inc. 2018
# All rights reserved
# Licensed under a 3-clause BSD style license (see LICENSE)
from datadog_checks.checks.prometheus import GenericPrometheusCheck


class ContainerdCheck(GenericPrometheusCheck):

    def __init__(self, name, init_config, agentConfig, instances=None):
        super(ContainerdCheck, self).__init__(
            name,
            init_config,
            agentConfig,
            instances,
            default_instances={
                "containerd": {
                    'prometheus_url': 'http://localhost:1338/v1/metrics',
                    'namespace': 'containerd',
                    'metrics': [
                       {'container_blkio_io_service_bytes_recursive_bytes': 'blkio_io_svc_bytes_recursive'},
                       {'container_blkio_io_serviced_recursive_total': 'blkio_io_svc_recursive_total'},
                       {'container_cpu_kernel_nanoseconds': 'cpu_kernel'},
                       {'container_cpu_throttled_time_nanoseconds': 'cpu_throttled_time'},
                       {'container_cpu_total_nanoseconds': 'cpu_total'},
                       {'container_cpu_user_nanoseconds': 'cpu_user'},
                       {'container_hugetlb_failcnt_total': 'hugetlb_failcnt_total'},
                       {'container_hugetlb_max_bytes': 'hugetlb_max'},
                       {'container_hugetlb_usage_bytes': 'hugetlb_usage'},
                       {'container_memory_active_anon_bytes': 'mem_active_anon'},
                       {'container_memory_active_file_bytes': 'mem_active_file'},
                       {'container_memory_cache_bytes': 'mem_cache'},
                       {'container_memory_dirty_bytes': 'mem_dirty'},
                       {'container_memory_hierarchical_memory_limit_bytes': 'mem_hierarchical_memory_limit'},
                       {'container_memory_hierarchical_memsw_limit_bytes': 'mem_hierarchical_memsw_limit'},
                       {'container_memory_inactive_anon_bytes': 'mem_inactive_anon'},
                       {'container_memory_inactive_file_bytes': 'mem_inactive_file'},
                       {'container_memory_kernel_failcnt_total': 'mem_kernel_failcnt_total'},
                       {'container_memory_kernel_limit_bytes': 'mem_kernel_limit'},
                       {'container_memory_kernel_max_bytes': 'mem_kernel_max'},
                       {'container_memory_kernel_usage_bytes': 'mem_kernel_usage'},
                       {'container_memory_kerneltcp_failcnt_total': 'mem_kerneltcp_failcnt_total'},
                       {'container_memory_kerneltcp_limit_bytes': 'mem_kerneltcp_limit'},
                       {'container_memory_kerneltcp_max_bytes': 'mem_kerneltcp_max'},
                       {'container_memory_kerneltcp_usage_bytes': 'mem_kerneltcp_usage'},
                       {'container_memory_mapped_file_bytes': 'mem_mapped_file'},
                       {'container_memory_oom_total': 'mem_oom_total'},
                       {'container_memory_pgfault_bytes': 'mem_pgfault'},
                       {'container_memory_pgmajfault_bytes': 'mem_pgmajfault'},
                       {'container_memory_pgpgin_bytes': 'mem_pgpgin'},
                       {'container_memory_pgpgout_bytes': 'mem_pgpgout'},
                       {'container_memory_rss_bytes': 'mem_rss'},
                       {'container_memory_rss_huge_bytes': 'mem_rss_huge'},
                       {'container_memory_swap_failcnt_total': 'mem_swap_failcnt_total'},
                       {'container_memory_swap_limit_bytes': 'mem_swap_limit'},
                       {'container_memory_swap_max_bytes': 'mem_swap_max'},
                       {'container_memory_swap_usage_bytes': 'mem_swap_usage'},
                       {'container_memory_total_active_anon_bytes': 'mem_total_active_anon'},
                       {'container_memory_total_active_file_bytes': 'mem_total_active_file'},
                       {'container_memory_total_cache_bytes': 'mem_total_cache'},
                       {'container_memory_total_dirty_bytes': 'mem_total_dirty'},
                       {'container_memory_total_inactive_anon_bytes': 'mem_total_inactive_anon'},
                       {'container_memory_total_inactive_file_bytes': 'mem_total_inactive_file'},
                       {'container_memory_total_mapped_file_bytes': 'mem_total_mapped_file'},
                       {'container_memory_total_pgfault_bytes': 'mem_total_pgfault'},
                       {'container_memory_total_pgmajfault_bytes': 'mem_total_pgmajfault'},
                       {'container_memory_total_pgpgin_bytes': 'mem_total_pgpgin'},
                       {'container_memory_total_pgpgout_bytes': 'mem_total_pgpgout'},
                       {'container_memory_total_rss_bytes': 'mem_total_rss'},
                       {'container_memory_total_rss_huge_bytes': 'mem_total_rss_huge'},
                       {'container_memory_total_unevictable_bytes': 'mem_total_unevictable'},
                       {'container_memory_total_writeback_bytes': 'mem_total_writeback'},
                       {'container_memory_unevictable_bytes': 'mem_unevictable'},
                       {'container_memory_usage_failcnt_total': 'mem_usage_failcnt_total'},
                       {'container_memory_usage_limit_bytes': 'mem_usage_limit'},
                       {'container_memory_usage_max_bytes': 'mem_usage_max'},
                       {'container_memory_usage_usage_bytes': 'mem_usage'},
                       {'container_memory_writeback_bytes': 'mem_writeback'},
                       {'container_per_cpu_nanoseconds': 'per_cpu'},
                       {'container_pids_current': 'pids_current'},
                       {'container_pids_limit': 'pids_limit'},
                       {'go_goroutines': 'go.goroutines'},
                       {'go_memstats_alloc_bytes': 'go.memstats_alloc'},
                       {'go_memstats_alloc_bytes_total': 'go.memstats_alloc_bytes_total'},
                       {'go_memstats_buck_hash_sys_bytes': 'go.memstats_buck_hash_sys'},
                       {'go_memstats_frees_total': 'go.memstats_frees_total'},
                       {'go_memstats_gc_cpu_fraction': 'go.memstats_gc_cpu_fraction'},
                       {'go_memstats_gc_sys_bytes': 'go.memstats_gc_sys'},
                       {'go_memstats_heap_alloc_bytes': 'go.memstats_heap_alloc'},
                       {'go_memstats_heap_idle_bytes': 'go.memstats_heap_idle'},
                       {'go_memstats_heap_inuse_bytes': 'go.memstats_heap_inuse'},
                       {'go_memstats_heap_objects': 'go.memstats_heap_objects'},
                       {'go_memstats_heap_released_bytes': 'go.memstats_heap_released'},
                       {'go_memstats_heap_sys_bytes': 'go.memstats_heap_sys'},
                       {'go_memstats_last_gc_time_seconds': 'go.memstats_last_gc_time_seconds'},
                       {'go_memstats_lookups_total': 'go.memstats_lookups_total'},
                       {'go_memstats_mallocs_total': 'go.memstats_mallocs_total'},
                       {'go_memstats_mcache_inuse_bytes': 'go.memstats_mcache_inuse'},
                       {'go_memstats_mcache_sys_bytes': 'go.memstats_mcache_sys'},
                       {'go_memstats_mspan_inuse_bytes': 'go.memstats_mspan_inuse'},
                       {'go_memstats_mspan_sys_bytes': 'go.memstats_mspan_sys'},
                       {'go_memstats_next_gc_bytes': 'go.memstats_next_gc'},
                       {'go_memstats_other_sys_bytes': 'go.memstats_other_sys'},
                       {'go_memstats_stack_inuse_bytes': 'go.memstats_stack_inuse'},
                       {'go_memstats_stack_sys_bytes': 'go.memstats_stack_sys'},
                       {'go_memstats_sys_bytes': 'go.memstats_sys'},
                       {'go_threads': 'go.threads'},
                       {'grpc_server_msg_received_total': 'grpc.server_msg_received_total'},
                       {'grpc_server_handled_total': 'grpc.server_handled_total'},
                       {'grpc_server_msg_sent_total': 'grpc.server_msg_sent_total'},
                       {'grpc_server_started_total': 'grpc.server_started_total'},
                       {'http_requests_total': 'http.requests_total'},
                       {'process_cpu_seconds_total': 'process.cpu_seconds_total'},
                       {'process_max_fds': 'process.max_fds'},
                       {'process_open_fds': 'process.open_fds'},
                       {'process_resident_memory_bytes': 'process.resident_memory'},
                       {'process_start_time_seconds': 'process.start_time_seconds'},
                       {'process_virtual_memory_bytes': 'process.virtual_memory'}
                    ],
                    'send_histograms_buckets': True
                }
            },
            default_namespace="containerd"
        )
