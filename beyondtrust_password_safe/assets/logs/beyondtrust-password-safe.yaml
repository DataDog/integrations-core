id: beyondtrust-password-safe
metric_id: beyondtrust-password-safe
backend_only: false
facets:
  - groups:
      - Event
    name: Event Outcome
    path: evt.outcome
    source: log
  - groups:
      - Geoip
    name: City Name
    path: network.client.geoip.city.name
    source: log
  - groups:
      - Geoip
    name: Continent Code
    path: network.client.geoip.continent.code
    source: log
  - groups:
      - Geoip
    name: Continent Name
    path: network.client.geoip.continent.name
    source: log
  - groups:
      - Geoip
    name: Country ISO Code
    path: network.client.geoip.country.iso_code
    source: log
  - groups:
      - Geoip
    name: Country Name
    path: network.client.geoip.country.name
    source: log
  - groups:
      - Geoip
    name: Subdivision ISO Code
    path: network.client.geoip.subdivision.iso_code
    source: log
  - groups:
      - Geoip
    name: Subdivision Name
    path: network.client.geoip.subdivision.name
    source: log
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
  - groups:
      - User
    name: User ID
    path: usr.id
    source: log
  - groups:
      - User
    name: User Name
    path: usr.name
    source: log
pipeline:
  type: pipeline
  name: BeyondTrust Password Safe
  enabled: true
  filter:
    query: source:beyondtrust-password-safe
  processors:
    - type: pipeline
      name: Processing of Password Safe Events
      enabled: true
      filter:
        query: service:password-safe
      processors:
        - type: grok-parser
          name: Parsing of details attribute
          enabled: true
          source: nvps.details
          samples:
            - Type=RDP (Admin Session)
            - Set Local FunctionalAccount=Dummy-Linux (id=23)
            - Set Domain FunctionalAccount=win-edr.edr.local\administrator (id=7)
            - Local FunctionalAccount==Admin (id=24)
            - Domain FunctionalAccount=dummy.admin@gmail.ai\Dummy (id=22)
          grok:
            supportRules: ""
            matchRules: >-
              rule_1 (Set Domain|Local|Domain|Set Local)
              FunctionalAccount=%{regex(".*(?= \\(id=)"):functional_account}
              \(id=%{regex("[^)]+"):id}\)


              rule_2 %{data::keyvalue("="," \\\\\\/")}
        - type: grok-parser
          name: Parsing of target attribute
          enabled: true
          source: nvps.target
          samples:
            - "Domain:mycreds.com MAccount:User #123"
            - ManagedSystem=manangedsystem ManagedAccount=admin
            - Domain:Amazon User#543 Account:Jack
            - "ManagedSystem for DB Server Instance: Asset=keycloak-server
              InstanceName=keycloak"
            - FAccount=Dummy FAlias=Dummy FDomain=domain.com PFid=1
          grok:
            supportRules: ""
            matchRules: >-
              rule_1
              %{regex(".*(?=/)"):managed_system}/%{regex(".*(?=,)"):managed_account},
              %{data}


              rule_2 ManagedSystem for %{regex("DB Server"):managed_system_type} Instance: Asset=%{regex(".*(?= InstanceName=)"):managed_system} InstanceName=%{data:instance_name}


              rule_3 Asset:%{regex(".*(?= \\(Db Instance)"):managed_system} \(Db Instance: %{regex(".*(?=, Port:)"):db_instance}, Port:(%{notSpace:port}\) MAccount|%{notSpace:port}\) Account):%{data:managed_account}


              rule_4 %{regex("Asset|Cloud|Domain"):managed_system_type}:(%{regex(".*(?= MAccount:)"):managed_system} MAccount|%{regex(".*(?= Account:)"):managed_system} Account):%{data:managed_account}


              rule_5 ManagedSystem for %{regex("Asset|Cloud|Domain"):managed_system_type}=%{data:managed_system}


              rule_6 ManagedSystem=%{regex(".*(?= ManagedAccount=)"):managed_system} ManagedAccount=%{data:managed_account}


              rule_7 FAccount=%{regex("(.*(?= FAlias=))"):functional_account} FAlias=%{regex("(.*(?= FDomain=))"):functional_alias} FDomain=%{notSpace:functional_domain} PFid=%{data:pfid}
        - type: grok-parser
          name: Parsing of eventdate attribute
          enabled: true
          source: eventdate
          samples:
            - Jun 30 2025 05:54:09
          grok:
            supportRules: ""
            matchRules: rule %{date("MMM dd yyyy HH:mm:ss"):timestamp}
        - type: attribute-remapper
          name: Map `sourceip` to `network.client.ip`
          enabled: true
          sources:
            - sourceip
          sourceType: attribute
          target: network.client.ip
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `nvps.userid` to `usr.id`
          enabled: true
          sources:
            - nvps.userid
          sourceType: attribute
          target: usr.id
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `nvps.username` to `usr.name`
          enabled: true
          sources:
            - nvps.username
          sourceType: attribute
          target: usr.name
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `nvps.result` to `evt.outcome`
          enabled: true
          sources:
            - nvps.result
          sourceType: attribute
          target: evt.outcome
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: category-processor
          name: Define `result_description` based on `evt.outcome`
          enabled: true
          categories:
            - filter:
                query: "@evt.outcome:F"
              name: Failed
            - filter:
                query: "@evt.outcome:C"
              name: Cancelled
            - filter:
                query: "@evt.outcome:S"
              name: Success
          target: result_description
        - type: category-processor
          name: Define `status` based on `evt.outcome`
          enabled: true
          categories:
            - filter:
                query: "@evt.outcome:F"
              name: error
            - filter:
                query: "@evt.outcome:C"
              name: warning
            - filter:
                query: "@evt.outcome:S"
              name: info
          target: status
        - type: status-remapper
          name: Define `status` as the official status of the log
          enabled: true
          sources:
            - status
    - type: pipeline
      name: Processing of Audit Events
      enabled: true
      filter:
        query: service:audit-logs
      processors:
        - type: attribute-remapper
          name: Map `IPAddress` to `network.client.ip`
          enabled: true
          sources:
            - IPAddress
          sourceType: attribute
          target: network.client.ip
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `UserName` to `usr.name`
          enabled: true
          sources:
            - UserName
          sourceType: attribute
          target: usr.name
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `UserID` to `usr.id`
          enabled: true
          sources:
            - UserID
          sourceType: attribute
          target: usr.id
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: date-remapper
      name: Define `timestamp`, `CreateDate` as the official datetime of the log
      enabled: true
      sources:
        - timestamp
        - CreateDate
    - type: geo-ip-parser
      name: Extracting geolocation information from the client ip
      enabled: true
      sources:
        - network.client.ip
      target: network.client.geoip
      ip_processing_behavior: do-nothing
