# NOTE: You have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python. Multiline strings are treated as
# verbose regular expressions by Black. Use [ ] to denote a significant space
# character.

[tool.black]
exclude = '''
# Directories
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist

  # New integration templates
  | datadog_checks/dev/tooling/templates
  # Vendored third party libraries
  | datadog_checks/[^/]+/vendor
)/
  |
# Files
(
    # TODO: remove when upstream addresses https://github.com/DataDog/integrations-core/blob/c71e6d7204192a8002109da92452003598df2d28/datadog_checks_dev/datadog_checks/dev/tooling/signing.py#L9-L14
    datadog_checks/dev/tooling/signing\.py$
)
'''
include = '\.pyi?$'
line-length = 120
py36 = false
skip-string-normalization = true

[tool.isort]
default_section = 'THIRDPARTY'
force_grid_wrap = 0
include_trailing_comma = true
known_first_party = 'datadog_checks'
src_paths = ''
line_length = 120
multi_line_output = 3
skip_glob = '.*,*/datadog_checks/dev/tooling/signing.py,*/datadog_checks/dev/tooling/templates/*,*/datadog_checks/*/vendor/*'
use_parentheses = true

[tool.mypy]
plugins = "pydantic.mypy"
# Follows imports and type-check imported modules.
follow_imports = "normal"
# Ignore errors about imported packages that don't provide type hints.
ignore_missing_imports = true
# Don't require that all functions be annotated, as it would create
# a lot of noise for imported modules that aren't annotated yet.
# Note that this is the default behavior, but we're making our choice explicit here.
disallow_untyped_defs = false
# Include column numbers in errors.
show_column_numbers = true
# Mypy path is relative to the tox execution path, it correspond here to the integration folder.
mypy_path = "../.stubs"
# Exclude generated files
# TODO Remove when we drop python 2
exclude = '.*/config_models/.*\.py$'

[tool.ruff]
line-length = 120
select = [
  "B",
  "C",
  "E",
  "F",
  "G",
  "W",
  "B001",
  "B003",
  "B006",
  "B007",
  "B301",
  "B305",
  "B306",
  "B902",
]

# Ignore reasons:
# - G200: logging exception is ok, we don't always want to log the stack trace too
# - B015: Catches comparisons within a pytest.raises block.
#         Revert once this is resolved: https://github.com/PyCQA/flake8-bugbear/issues/152

ignore = [
  "E203",
  "E722",
  "E741",
  "W503",
  "G200",
  "B015",
]

exclude = [
  ".eggs",
  ".tox",
  "build",
  "compat.py",
  "__init__.py",
  "datadog_checks_dev/datadog_checks/dev/tooling/templates/*",
  "*/datadog_checks/*/vendor/*",
]

line-length = 120

[tool.ruff.per-file-ignores]
# potentially long literal strings
"datadog_checks/*/config_models/deprecations.py" = ["E501"]
"tests/models/config_models/deprecations.py" = ["E501"]
# https://pydantic-docs.helpmanual.io/usage/validators/
# > validators are "class methods", so the first argument value they
#   receive is the UserModel class, not an instance of UserModel
"datadog_checks/*/config_models/instance.py" = ["B902"]
"datadog_checks/*/config_models/shared.py" = ["B902"]
"tests/models/config_models/instance.py" = ["B902"]
"tests/models/config_models/shared.py" = ["B902"]

