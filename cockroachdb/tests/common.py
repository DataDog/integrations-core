# (C) Datadog, Inc. 2018-present
# All rights reserved
# Licensed under a 3-clause BSD style license (see LICENSE)
import copy
import os

from packaging import version

from datadog_checks.cockroachdb.metrics import METRIC_MAP
from datadog_checks.dev import get_docker_hostname, get_here
from datadog_checks.dev.utils import assert_service_checks, get_metadata_metrics

HOST = get_docker_hostname()
PORT = '8080'
HERE = get_here()

COCKROACHDB_VERSION = os.getenv('COCKROACHDB_VERSION')

KNOWN_HISTOGRAMS = {
    'admission_wait_durations_kv',
    'admission_wait_durations_kv_stores',
    'admission_wait_durations_sql_leaf_start',
    'admission_wait_durations_sql_sql_response',
    'admission_wait_durations_sql_kv_response',
    'admission_wait_durations_sql_root_start',
    'liveness_heartbeatlatency',
    'sql.conn.latency',
    'sql.txn.latency',
}

KNOWN_COUNTERS = {
    'addsstable_applications',
    'addsstable_copies',
    'addsstable_proposals',
    'compactor_compactingnanos',
    'compactor_compactions_failure',
    'compactor_compactions_success',
    'compactor_suggestionbytes_compacted',
    'compactor_suggestionbytes_skipped',
    'distsender_batches',
    'distsender_batches_partial',
    'distsender_errors_notleaseholder',
    'distsender_rpc_sent',
    'distsender_rpc_sent_local',
    'distsender_rpc_sent_nextreplicaerror',
    'exec_error',
    'exec_success',
    'gossip_bytes_received',
    'gossip_bytes_sent',
    'gossip_connections_refused',
    'gossip_infos_received',
    'gossip_infos_sent',
    'leases_error',
    'leases_success',
    'leases_transfers_error',
    'leases_transfers_success',
    'liveness_epochincrements',
    'liveness_heartbeatfailures',
    'liveness_heartbeatsuccesses',
    'queue_consistency_process_failure',
    'queue_consistency_process_success',
    'queue_consistency_processingnanos',
    'queue_gc_info_abortspanconsidered',
    'queue_gc_info_abortspangcnum',
    'queue_gc_info_abortspanscanned',
    'queue_gc_info_intentsconsidered',
    'queue_gc_info_intenttxns',
    'queue_gc_info_numkeysaffected',
    'queue_gc_info_pushtxn',
    'queue_gc_info_resolvesuccess',
    'queue_gc_info_resolvetotal',
    'queue_gc_info_transactionspangcaborted',
    'queue_gc_info_transactionspangccommitted',
    'queue_gc_info_transactionspangcpending',
    'queue_gc_info_transactionspanscanned',
    'queue_gc_process_failure',
    'queue_gc_process_success',
    'queue_gc_processingnanos',
    'queue_raftlog_process_failure',
    'queue_raftlog_process_success',
    'queue_raftlog_processingnanos',
    'queue_raftsnapshot_process_failure',
    'queue_raftsnapshot_process_success',
    'queue_raftsnapshot_processingnanos',
    'queue_replicagc_process_failure',
    'queue_replicagc_process_success',
    'queue_replicagc_processingnanos',
    'queue_replicagc_removereplica',
    'queue_replicate_addreplica',
    'queue_replicate_process_failure',
    'queue_replicate_process_success',
    'queue_replicate_processingnanos',
    'queue_replicate_rebalancereplica',
    'queue_replicate_removedeadreplica',
    'queue_replicate_removereplica',
    'queue_replicate_transferlease',
    'queue_split_process_failure',
    'queue_split_process_success',
    'queue_split_processingnanos',
    'queue_tsmaintenance_process_failure',
    'queue_tsmaintenance_process_success',
    'queue_tsmaintenance_processingnanos',
    'raft_commandsapplied',
    'raft_process_tickingnanos',
    'raft_process_workingnanos',
    'raft_rcvd_app',
    'raft_rcvd_appresp',
    'raft_rcvd_dropped',
    'raft_rcvd_heartbeat',
    'raft_rcvd_heartbeatresp',
    'raft_rcvd_prevote',
    'raft_rcvd_prevoteresp',
    'raft_rcvd_prop',
    'raft_rcvd_snap',
    'raft_rcvd_timeoutnow',
    'raft_rcvd_transferleader',
    'raft_rcvd_vote',
    'raft_rcvd_voteresp',
    'raft_ticks',
    'raftlog_truncated',
    'range_adds',
    'range_raftleadertransfers',
    'range_removes',
    'range_snapshots_generated',
    'range_snapshots_normal_applied',
    'range_snapshots_preemptive_applied',
    'range_splits',
    'schedules_BACKUP_failed',
    'schedules_BACKUP_started',
    'schedules_BACKUP_succeeded',
    'sql_bytesin',
    'sql_bytesout',
    'sql_ddl_count',
    'sql_delete_count',
    'sql_distsql_flows_total',
    'sql_distsql_queries_total',
    'sql_distsql_select_count',
    'sql_insert_count',
    'sql_misc_count',
    'sql_query_count',
    'sql_select_count',
    'sql_txn_abort_count',
    'sql_txn_begin_count',
    'sql_txn_commit_count',
    'sql_txn_rollback_count',
    'sql_update_count',
    'timeseries_write_bytes',
    'timeseries_write_errors',
    'timeseries_write_samples',
    'tscache_skl_read_rotations',
    'tscache_skl_write_rotations',
    'txn_abandons',
    'txn_aborts',
    'txn_autoretries',
    'txn_commits',
    'txn_commits1PC',
    'txn_restarts_deleterange',
    'txn_restarts_possiblereplay',
    'txn_restarts_serializable',
    'txn_restarts_writetooold',
    'admission_wait_sum_kv',
    'admission_wait_sum_kv_stores',
    'admission_wait_sum_sql_kv_response',
    'admission_wait_sum_sql_sql_response',
    'changefeed_emitted_messages',
    'changefeed_error_retries',
    'changefeed_failures',
    'jobs_changefeed_resume_retry_error',
    'sql_distsql_contended_queries_count',
    'sql_failure_count',
    'sql_full_scan_count',
    'admission_admitted_sql_sql_response',
    'admission_admitted_sql_leaf_start',
    'admission_wait_sum_sql_leaf_start',
    'admission_requested_kv',
    'admission_requested_kv_stores',
    'admission_errored_sql_root_start',
    'admission_errored_kv',
    'admission_requested_sql_leaf_start',
    'admission_errored_sql_leaf_start',
    'admission_wait_sum_sql_root_start',
    'admission_admitted_kv',
    'admission_admitted_sql_kv_response',
    'admission_admitted_sql_root_start',
    'admission_granter_io_tokens_exhausted_duration_kv',
    'admission_requested_sql_sql_response',
    'admission_errored_sql_kv_response',
    'admission_requested_sql_kv_response',
    'admission_errored_kv_stores',
    'admission_requested_sql_root_start',
    'admission_errored_sql_sql_response',
    'admission_admitted_kv_stores',
    'jobs_backup_fail_or_cancel_completed',
    'jobs_backup_fail_or_cancel_retry_error',
    'jobs_backup_fail_or_cancel_failed',
    'jobs_backup_resume_failed',
    'jobs_backup_resume_retry_error',
    'jobs_backup_resume_completed',
    'rebalancing_queriespersecond',
    'range_merges',
    'sql_new_conns',
    'txnwaitqueue_deadlocks_total',
    'txn_restarts_writetoooldmulti',
    'txn_restarts_unknown',
    'txn_restarts_txnpush',
    'txn_restarts_txnaborted',
    'jobs_auto_create_stats_resume_failed',
    'changefeed_emitted_bytes',
    'jobs_row_level_ttl_resume_completed',
    'jobs_row_level_ttl_resume_failed',
    'jobs_row_level_ttl_rows_selected',
    'jobs_row_level_ttl_rows_deleted',
    'schedules_scheduled_row_level_ttl_executor_failed',
}

COCKROACHDB_23_METRICS = [
    'abortspanbytes',
    'addsstable.delay.count',
    'addsstable.delay.enginebackpressure.count',
    'admission.admitted.elastic_cpu.bulk_normal_pri.count',
    'admission.admitted.elastic_cpu.count',
    'admission.admitted.elastic_cpu.normal_pri.count',
    'admission.admitted.kv.high_pri.count',
    'admission.admitted.kv.locking_normal_pri.count',
    'admission.admitted.kv.normal_pri.count',
    'admission.admitted.kv_stores.bulk_normal_pri.count',
    'admission.admitted.kv_stores.high_pri.count',
    'admission.admitted.kv_stores.locking_normal_pri.count',
    'admission.admitted.kv_stores.normal_pri.count',
    'admission.admitted.kv_stores.ttl_low_pri.count',
    'admission.admitted.sql_kv_response.locking_normal_pri.count',
    'admission.admitted.sql_kv_response.normal_pri.count',
    'admission.admitted.sql_leaf_start.locking_normal_pri.count',
    'admission.admitted.sql_leaf_start.normal_pri.count',
    'admission.admitted.sql_root_start.locking_normal_pri.count',
    'admission.admitted.sql_root_start.normal_pri.count',
    'admission.admitted.sql_sql_response.locking_normal_pri.count',
    'admission.admitted.sql_sql_response.normal_pri.count',
    'admission.elastic_cpu.acquired_nanos.count',
    'admission.elastic_cpu.available_nanos',
    'admission.elastic_cpu.max_available_nanos.count',
    'admission.elastic_cpu.nanos_exhausted_duration',
    'admission.elastic_cpu.pre_work_nanos.count',
    'admission.elastic_cpu.returned_nanos.count',
    'admission.elastic_cpu.utilization',
    'admission.elastic_cpu.utilization_limit',
    'admission.errored.elastic_cpu.bulk_normal_pri.count',
    'admission.errored.elastic_cpu.count',
    'admission.errored.elastic_cpu.normal_pri.count',
    'admission.errored.kv.high_pri.count',
    'admission.errored.kv.locking_normal_pri.count',
    'admission.errored.kv.normal_pri.count',
    'admission.errored.kv_stores.bulk_normal_pri.count',
    'admission.errored.kv_stores.high_pri.count',
    'admission.errored.kv_stores.locking_normal_pri.count',
    'admission.errored.kv_stores.normal_pri.count',
    'admission.errored.kv_stores.ttl_low_pri.count',
    'admission.errored.sql_kv_response.locking_normal_pri.count',
    'admission.errored.sql_kv_response.normal_pri.count',
    'admission.errored.sql_leaf_start.locking_normal_pri.count',
    'admission.errored.sql_leaf_start.normal_pri.count',
    'admission.errored.sql_root_start.locking_normal_pri.count',
    'admission.errored.sql_root_start.normal_pri.count',
    'admission.errored.sql_sql_response.locking_normal_pri.count',
    'admission.errored.sql_sql_response.normal_pri.count',
    'admission.granter.cpu_load_long_period_duration.kv.count',
    'admission.granter.cpu_load_short_period_duration.kv.count',
    'admission.granter.elastic_io_tokens_available.kv',
    'admission.granter.io_tokens_available.kv',
    'admission.granter.io_tokens_bypassed.kv.count',
    'admission.granter.io_tokens_returned.kv.count',
    'admission.granter.io_tokens_taken.kv.count',
    'admission.granter.slot_adjuster_decrements.kv.count',
    'admission.granter.slot_adjuster_increments.kv.count',
    'admission.granter.slots_exhausted_duration.kv.count',
    'admission.l0_compacted_bytes.kv.count',
    'admission.l0_tokens_produced.kv.count',
    'admission.raft.paused_replicas',
    'admission.raft.paused_replicas_dropped_msgs.count',
    'admission.requested.elastic_cpu.bulk_normal_pri.count',
    'admission.requested.elastic_cpu.count',
    'admission.requested.elastic_cpu.normal_pri.count',
    'admission.requested.kv.high_pri.count',
    'admission.requested.kv.locking_normal_pri.count',
    'admission.requested.kv.normal_pri.count',
    'admission.requested.kv_stores.bulk_normal_pri.count',
    'admission.requested.kv_stores.high_pri.count',
    'admission.requested.kv_stores.locking_normal_pri.count',
    'admission.requested.kv_stores.normal_pri.count',
    'admission.requested.kv_stores.ttl_low_pri.count',
    'admission.requested.sql_kv_response.locking_normal_pri.count',
    'admission.requested.sql_kv_response.normal_pri.count',
    'admission.requested.sql_leaf_start.locking_normal_pri.count',
    'admission.requested.sql_leaf_start.normal_pri.count',
    'admission.requested.sql_root_start.count',
    'admission.requested.sql_root_start.locking_normal_pri.count',
    'admission.requested.sql_root_start.normal_pri.count',
    'admission.requested.sql_sql_response.locking_normal_pri.count',
    'admission.requested.sql_sql_response.normal_pri.count',
    'admission.scheduler_latency_listener.p99_nanos',
    'admission.wait_queue_length.elastic_cpu',
    'admission.wait_queue_length.elastic_cpu.bulk_normal_pri',
    'admission.wait_queue_length.elastic_cpu.normal_pri',
    'admission.wait_queue_length.kv.high_pri',
    'admission.wait_queue_length.kv.locking_normal_pri',
    'admission.wait_queue_length.kv.normal_pri',
    'admission.wait_queue_length.kv_stores.bulk_normal_pri',
    'admission.wait_queue_length.kv_stores.high_pri',
    'admission.wait_queue_length.kv_stores.locking_normal_pri',
    'admission.wait_queue_length.kv_stores.normal_pri',
    'admission.wait_queue_length.kv_stores.ttl_low_pri',
    'admission.wait_queue_length.sql_kv_response.locking_normal_pri',
    'admission.wait_queue_length.sql_kv_response.normal_pri',
    'admission.wait_queue_length.sql_leaf_start.locking_normal_pri',
    'admission.wait_queue_length.sql_leaf_start.normal_pri',
    'admission.wait_queue_length.sql_root_start.locking_normal_pri',
    'admission.wait_queue_length.sql_root_start.normal_pri',
    'admission.wait_queue_length.sql_sql_response.locking_normal_pri',
    'admission.wait_queue_length.sql_sql_response.normal_pri',
    'backup.last_failed_time.kms_inaccessible',
    'batch_requests.bytes.count',
    'batch_requests.cross_region.bytes.count',
    'batch_requests.cross_zone.bytes.count',
    'batch_responses.bytes.count',
    'batch_responses.cross_region.bytes.count',
    'batch_responses.cross_zone.bytes.count',
    'changefeed.aggregator_progress',
    'changefeed.batch_reduction_count',
    'changefeed.buffer_entries.allocated_mem',
    'changefeed.buffer_entries.flush.count',
    'changefeed.buffer_entries.in.count',
    'changefeed.buffer_entries.kv.count',
    'changefeed.buffer_entries.out.count',
    'changefeed.buffer_entries.released.count',
    'changefeed.buffer_entries.resolved.count',
    'changefeed.buffer_entries_mem.acquired.count',
    'changefeed.buffer_entries_mem.released.count',
    'changefeed.buffer_pushback.count',
    'changefeed.bytes.messages_pushback.count',
    'changefeed.checkpoint_progress',
    'changefeed.cloudstorage_buffered_bytes',
    'changefeed.filtered_messages.count',
    'changefeed.flush.messages_pushback.count',
    'changefeed.flushed_bytes.count',
    'changefeed.flushes.count',
    'changefeed.forwarded_resolved_messages.count',
    'changefeed.frontier_updates.count',
    'changefeed.internal_retry_message',
    'changefeed.lagging_ranges',
    'changefeed.messages.messages_pushback.count',
    'changefeed.nprocs_in_flight',
    'changefeed.queue_time.count',
    'changefeed.schema_registry.registrations.count',
    'changefeed.schema_registry.retry.count',
    'changefeed.schemafeed.table_history_scans.count',
    'changefeed.schemafeed.table_metadata.count',
    'changefeed.sink_io_inflight',
    'changefeed.size_based_flushes.count',
    'queue.replicate.replacedecommissioningreplica.error.count',
    'rebalancing.queriespersecond',
    'sql.distsql.flows.count',
    'sql.distsql.queries.count',
    'sys.gc',
    'txnwaitqueue.deadlocks.count',
]
assert COCKROACHDB_23_METRICS == sorted(COCKROACHDB_23_METRICS)

EXPECTED_METRICS = []
for raw_metric_name, metric_name in METRIC_MAP.items():
    if raw_metric_name in KNOWN_HISTOGRAMS or raw_metric_name.endswith(('_durations', '_latency', '_max', '_restarts')):
        metric_name += '.bucket'
    elif raw_metric_name in KNOWN_COUNTERS and not metric_name.endswith('.count'):
        metric_name += '.count'

    EXPECTED_METRICS.append(metric_name)

CHANGEFEED_METRICS = {
    'changefeed.aggregator_progress',
    'changefeed.backfill',
    'changefeed.backfill.pending.ranges',
    'changefeed.batch_reduction_count',
    'changefeed.buffer_entries.allocated_mem',
    'changefeed.buffer_entries.flush.count',
    'changefeed.buffer_entries.in.count',
    'changefeed.buffer_entries.kv.count',
    'changefeed.buffer_entries.out.count',
    'changefeed.buffer_entries.released.count',
    'changefeed.buffer_entries.resolved.count',
    'changefeed.buffer_entries_mem.acquired.count',
    'changefeed.buffer_entries_mem.released.count',
    'changefeed.buffer_pushback.count',
    'changefeed.bytes.messages_pushback.count',
    'changefeed.checkpoint_progress',
    'changefeed.cloudstorage_buffered_bytes',
    'changefeed.emitted_bytes.count',
    'changefeed.emitted.messages.count',
    'changefeed.failures.count',
    'changefeed.filtered_messages.count',
    'changefeed.flush.messages_pushback.count',
    'changefeed.flushed_bytes.count',
    'changefeed.flushes.count',
    'changefeed.forwarded_resolved_messages.count',
    'changefeed.frontier_updates.count',
    'changefeed.internal_retry_message',
    'changefeed.lagging_ranges',
    'changefeed.messages.messages_pushback.count',
    'changefeed.nprocs_in_flight',
    'changefeed.queue_time.count',
    'changefeed.running',
    'changefeed.schema_registry.registrations.count',
    'changefeed.schema_registry.retry.count',
    'changefeed.schemafeed.table_history_scans.count',
    'changefeed.schemafeed.table_metadata.count',
    'changefeed.sink_io_inflight',
    'changefeed.size_based_flushes.count',
    'jobs.changefeed.currently_paused',
    'jobs.changefeed.protected_age_sec',
    'jobs.changefeed.resume.retry.error.count',
}

ADMISSION_METRICS = {
    'admission.admitted.elastic_cpu.bulk_normal_pri.count',
    'admission.admitted.elastic_cpu.count',
    'admission.admitted.elastic_cpu.normal_pri.count',
    'admission.admitted.kv.count',
    'admission.admitted.kv.high_pri.count',
    'admission.admitted.kv.locking_normal_pri.count',
    'admission.admitted.kv.normal_pri.count',
    'admission.admitted.kv_stores.bulk_normal_pri.count',
    'admission.admitted.kv_stores.count',
    'admission.admitted.kv_stores.high_pri.count',
    'admission.admitted.kv_stores.locking_normal_pri.count',
    'admission.admitted.kv_stores.normal_pri.count',
    'admission.admitted.kv_stores.ttl_low_pri.count',
    'admission.admitted.sql.leaf.start.count',
    'admission.admitted.sql.root.start.count',
    'admission.admitted.sql_kv.response.count',
    'admission.admitted.sql_kv_response.locking_normal_pri.count',
    'admission.admitted.sql_kv_response.normal_pri.count',
    'admission.admitted.sql_leaf_start.locking_normal_pri.count',
    'admission.admitted.sql_leaf_start.normal_pri.count',
    'admission.admitted.sql_root_start.locking_normal_pri.count',
    'admission.admitted.sql_root_start.normal_pri.count',
    'admission.admitted.sql_sql.response.count',
    'admission.admitted.sql_sql_response.locking_normal_pri.count',
    'admission.admitted.sql_sql_response.normal_pri.count',
    'admission.elastic_cpu.acquired_nanos.count',
    'admission.elastic_cpu.available_nanos',
    'admission.elastic_cpu.max_available_nanos.count',
    'admission.elastic_cpu.nanos_exhausted_duration',
    'admission.elastic_cpu.pre_work_nanos.count',
    'admission.elastic_cpu.returned_nanos.count',
    'admission.elastic_cpu.utilization',
    'admission.elastic_cpu.utilization_limit',
    'admission.errored.elastic_cpu.bulk_normal_pri.count',
    'admission.errored.elastic_cpu.count',
    'admission.errored.elastic_cpu.normal_pri.count',
    'admission.errored.kv.count',
    'admission.errored.kv.high_pri.count',
    'admission.errored.kv.locking_normal_pri.count',
    'admission.errored.kv.normal_pri.count',
    'admission.errored.kv_stores.bulk_normal_pri.count',
    'admission.errored.kv_stores.count',
    'admission.errored.kv_stores.high_pri.count',
    'admission.errored.kv_stores.locking_normal_pri.count',
    'admission.errored.kv_stores.normal_pri.count',
    'admission.errored.kv_stores.ttl_low_pri.count',
    'admission.errored.sql.leaf.start.count',
    'admission.errored.sql.root.start.count',
    'admission.errored.sql_kv.response.count',
    'admission.errored.sql_kv_response.locking_normal_pri.count',
    'admission.errored.sql_kv_response.normal_pri.count',
    'admission.errored.sql_leaf_start.locking_normal_pri.count',
    'admission.errored.sql_leaf_start.normal_pri.count',
    'admission.errored.sql_root_start.locking_normal_pri.count',
    'admission.errored.sql_root_start.normal_pri.count',
    'admission.errored.sql_sql.response.count',
    'admission.errored.sql_sql_response.locking_normal_pri.count',
    'admission.errored.sql_sql_response.normal_pri.count',
    'admission.granter.cpu_load_long_period_duration.kv.count',
    'admission.granter.cpu_load_short_period_duration.kv.count',
    'admission.granter.elastic_io_tokens_available.kv',
    'admission.granter.io.tokens.exhausted.duration.kv.count',
    'admission.granter.io_tokens_available.kv',
    'admission.granter.io_tokens_bypassed.kv.count',
    'admission.granter.io_tokens_returned.kv.count',
    'admission.granter.io_tokens_taken.kv.count',
    'admission.granter.slot_adjuster_decrements.kv.count',
    'admission.granter.slot_adjuster_increments.kv.count',
    'admission.granter.slots_exhausted_duration.kv.count',
    'admission.granter.total.slots.kv',
    'admission.granter.used.slots.kv',
    'admission.granter.used.slots.sql.leaf.start',
    'admission.granter.used.slots.sql.root.start',
    'admission.io.overload',
    'admission.l0_compacted_bytes.kv.count',
    'admission.l0_tokens_produced.kv.count',
    'admission.raft.paused_replicas',
    'admission.raft.paused_replicas_dropped_msgs.count',
    'admission.requested.elastic_cpu.bulk_normal_pri.count',
    'admission.requested.elastic_cpu.count',
    'admission.requested.elastic_cpu.normal_pri.count',
    'admission.requested.kv.count',
    'admission.requested.kv.high_pri.count',
    'admission.requested.kv.locking_normal_pri.count',
    'admission.requested.kv.normal_pri.count',
    'admission.requested.kv_stores.bulk_normal_pri.count',
    'admission.requested.kv_stores.count',
    'admission.requested.kv_stores.high_pri.count',
    'admission.requested.kv_stores.locking_normal_pri.count',
    'admission.requested.kv_stores.normal_pri.count',
    'admission.requested.kv_stores.ttl_low_pri.count',
    'admission.requested.sql.leaf.start.count',
    'admission.requested.sql_kv.response.count',
    'admission.requested.sql_kv_response.locking_normal_pri.count',
    'admission.requested.sql_kv_response.normal_pri.count',
    'admission.requested.sql_leaf_start.locking_normal_pri.count',
    'admission.requested.sql_leaf_start.normal_pri.count',
    'admission.requested.sql_root_start.count',
    'admission.requested.sql_root_start.locking_normal_pri.count',
    'admission.requested.sql_root_start.normal_pri.count',
    'admission.requested.sql_sql.response.count',
    'admission.requested.sql_sql_response.locking_normal_pri.count',
    'admission.requested.sql_sql_response.normal_pri.count',
    'admission.scheduler_latency_listener.p99_nanos',
    'admission.wait.queue.length.kv',
    'admission.wait.queue.length.kv_stores',
    'admission.wait.queue.length.sql.leaf.start',
    'admission.wait.queue.length.sql_kv.response',
    'admission.wait.queue.length.sql_sql.response',
    'admission.wait.queue.lengths.sql.root.start',
    'admission.wait_queue_length.elastic_cpu',
    'admission.wait_queue_length.elastic_cpu.bulk_normal_pri',
    'admission.wait_queue_length.elastic_cpu.normal_pri',
    'admission.wait_queue_length.kv.high_pri',
    'admission.wait_queue_length.kv.locking_normal_pri',
    'admission.wait_queue_length.kv.normal_pri',
    'admission.wait_queue_length.kv_stores.bulk_normal_pri',
    'admission.wait_queue_length.kv_stores.high_pri',
    'admission.wait_queue_length.kv_stores.locking_normal_pri',
    'admission.wait_queue_length.kv_stores.normal_pri',
    'admission.wait_queue_length.kv_stores.ttl_low_pri',
    'admission.wait_queue_length.sql_kv_response.locking_normal_pri',
    'admission.wait_queue_length.sql_kv_response.normal_pri',
    'admission.wait_queue_length.sql_leaf_start.locking_normal_pri',
    'admission.wait_queue_length.sql_leaf_start.normal_pri',
    'admission.wait_queue_length.sql_root_start.locking_normal_pri',
    'admission.wait_queue_length.sql_root_start.normal_pri',
    'admission.wait_queue_length.sql_sql_response.locking_normal_pri',
    'admission.wait_queue_length.sql_sql_response.normal_pri',
}


def assert_metrics(aggregator):
    metadata_metrics = get_metadata_metrics()

    expected_metrics = copy.deepcopy(EXPECTED_METRICS)

    if version.parse(COCKROACHDB_VERSION) >= version.parse('23.0.0'):
        expected_metrics.extend(COCKROACHDB_23_METRICS)

    for metric in expected_metrics:
        aggregator.assert_metric('cockroachdb.{}'.format(metric), at_least=0)

    # Custom transformer
    aggregator.assert_metric('cockroachdb.build.timestamp')

    aggregator.assert_metrics_using_metadata(metadata_metrics, check_submission_type=True)

    assert aggregator.metrics_asserted_pct > 80, 'Missing metrics {}'.format(aggregator.not_asserted())

    assert_service_checks(aggregator)


def get_fixture_path(filename):
    return os.path.join(HERE, 'fixtures', filename)
