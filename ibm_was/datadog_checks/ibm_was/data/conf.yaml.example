init_config:

instances:

## @param servlet_url - string - required
## The URL of the PerfServlet configured to report metrics.
## Note: The default port is usually 9080.
#
  - servlet_url: http://localhost:<PORT>/wasPerfTool/servlet/perfservlet

  ## @param skip_proxy - boolean - optional - default: False
  ## Wheter or not to skip the proxy configured in the Agent's config file when
  ## making the request to the PerfServlet
  #
  #  skip_proxy: False

  ## @param collect_jdbc_stats - boolean - optional - default: True
  ## Whether or not to collect JDBC Connection Pool stats
  #
  #  collect_jdbc_stats: True

  ## @param collect_jvm_stats - boolean - optional - default: True
  ## Whether or not to collect JVM Runtime stats
  #
  #  collect_jvm_stats: True

  ## @param collect_servlet_session_stats - boolean - optional - default: True
  ## Whether or not to collect Servlet Session Manager stats
  #
  #  collect_servlet_session_stats: True

  ## @param collect_thread_pool_stats - boolean - optional - default: True
  ## Whether or not to collect Thread Pools stats
  #
  #  collect_thread_pool_stats: True

  ## @param custom_queries - custom - optional
  ## List of custom or additional XML attributes to parse and submit as metrics
  ## Each must contain a `metric_prefix` and `stat` element
  ## If the `stat` node has sub `stat` nodes, the name of these nodes must be specified
  ## in the order they occur within the XML document and will be displayed as tags.
  ## The metric will be named `ibmwas.<metric_prefix>.<xml_attribute_name>` and be tagged with the
  ## `name` value of the corresponding `tag_keys` attributes.
  ##
  ## <Stat name="Thread Pools Custom">
  ##   <Stat name="AriesThreadPool">
  ##     <TimeStatistic name="ActiveTime" totalTime="0" ... />
  ##   </Stat>
  ##   <Stat name="Default">
  ##     <CountStatistic name="DeclaredThreadHungCount" count="0" ... />
  ##   </Stat>
  ## </Stat>
  ##
  ## The following custom query would emit:
  ## self.gauge('ibm_was.thread_pools.ActiveTime', value=0, tags=['threadKey:AriesThreadPool', ...])
  ## self.gauge('ibm_was.thread_pools.DeclaredThreadHungCount', value=0, tags=['threadKey:Default', ...])
  #
  #  custom_queries:
  #   - metric_prefix: "thread_pools"
  #     stat: "Thread Pools Custom"
  #     tag_keys:
  #       - "threadKey"

  ## @param tags  - list of key:value elements - optional
  ## List of tags to attach to every metric, event and service check emitted by this integration.
  ##
  ## Learn more about tagging: https://docs.datadoghq.com/tagging/
  #
  #  tags:
  #    - <KEY_1>:<VALUE_1>
  #    - <KEY_2>:<VALUE_2>

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
#logs:
#  - type: file
#    path: /opt/IBM/WebSphere/AppServer/profiles/InfoSphere/logs/server1/*.log
#    source: ibm_was
#    service: websphere
