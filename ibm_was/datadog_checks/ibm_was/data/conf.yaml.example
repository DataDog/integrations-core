init_config:

instances:

    ## @param servlet_url - string - required
    ## The URL of the PerfServlet configured to report metrics.
    ## Note: The default port is usually 9080.
    #
  - servlet_url: http://localhost:<PORT>/wasPerfTool/servlet/perfservlet

    ## @param auth_type - string - optional
    ## The type of authentication to use.
    ## The available values are "basic" and "digest".
    #
    # auth_type: <AUTH_TYPE>

    ## @param username - string - optional
    ## The username to use for authentication againse the servlet
    #
    # username: <USERNAME>

    ## @param password - string - optional
    ## The username to use for authentication againse the servlet
    #
    # password: <PASSWORD>

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to the perf servlet
    #
    # timeout: 10

    ## @param headers - object - optional
    ## Map of headers to send on every request
    #
    # headers:
    #   <KEY_1>: <VALUE_1>
    #   <KEY_2>: <VALUE_2>

    ## @param tls_veify - boolean - optional - default: true
    ## Whether or not to verify TLS certificates.
    #
    # tls_verify: true

    ## @param tls_ca_cert - string - optional
    ## The path to a CA_BUNDLE file or directory with certificates of trusted CAs. Implicitly sets tls_verify to true
    #
    # tls_ca_cert: <PATH_TO_CERT>

    ## @param tls_cert - string - optional
    ## The client side certificate to use
    #
    # tls_cert: <PATH_TO_CERT>

    ## @param tls_private_key - string - optional
    ## The private key to use if it's not included in the tls_cert file
    #
    # tls_private_key: <private_key>

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## Whether or not to suppress insecure request warnings when tls_verify is false
    #
    # tls_ignore_warning: false

    ## @param proxy - object - optional
    ## Proxy configuration
    #
    # proxy:
    #   http: <HTTP_PROXY>
    #   https: <HTTPS_PROXY>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## Wheter or not to skip the proxy configured in the Agent's config file when
    ## making the request to the PerfServlet
    #
    # skip_proxy: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling
    #
    # persist_connections: false

    ## @param collect_jdbc_stats - boolean - optional - default: true
    ## Whether or not to collect JDBC Connection Pool stats
    #
    # collect_jdbc_stats: true

    ## @param collect_jvm_stats - boolean - optional - default: true
    ## Whether or not to collect JVM Runtime stats
    #
    # collect_jvm_stats: true

    ## @param collect_servlet_session_stats - boolean - optional - default: true
    ## Whether or not to collect Servlet Session Manager stats
    #
    # collect_servlet_session_stats: true

    ## @param collect_thread_pool_stats - boolean - optional - default: true
    ## Whether or not to collect Thread Pools stats
    #
    # collect_thread_pool_stats: true

    ## @param custom_queries - object - optional
    ## List of custom or additional XML attributes to parse and submit as metrics
    ## Each must contain a `metric_prefix` and `stat` element
    ## If the `stat` node has sub `stat` nodes, the name of these nodes must be specified
    ## in the order they occur within the XML document and will be displayed as tags.
    ## The metric will be named `ibmwas.<metric_prefix>.<xml_attribute_name>` and be tagged with the
    ## `name` value of the corresponding `tag_keys` attributes.
    ##
    ## <Stat name="Thread Pools Custom">
    ##   <Stat name="AriesThreadPool">
    ##     <TimeStatistic name="ActiveTime" totalTime="0" ... />
    ##   </Stat>
    ##   <Stat name="Default">
    ##     <CountStatistic name="DeclaredThreadHungCount" count="0" ... />
    ##   </Stat>
    ## </Stat>
    ##
    ## The following custom query would emit:
    ## self.gauge('ibm_was.thread_pools.ActiveTime', value=0, tags=['threadKey:AriesThreadPool', ...])
    ## self.gauge('ibm_was.thread_pools.DeclaredThreadHungCount', value=0, tags=['threadKey:Default', ...])
    #
    # custom_queries:
    #   - metric_prefix: "thread_pools"
    #     stat: "Thread Pools Custom"
    #     tag_keys:
    #       - "threadKey"

    ## @param custom_queries_units_gauge - list - optional - default: []
    ## List of unit names used to map CountStatistic to gauge in custom queries.
    ## By default CountStatistic stats are submitted as monotonic count, but some of them actually contain
    ## data which are gauge, as they have data with a unit. To get that behavior, the unit can be added here
    ## and the check will translate the metric type.
    ##
    ## For example:
    ## <Stat name="xdProcessModule">
    ##   <CountStatistic ID="4" count="11779168" name="totalMemory" unit="unit.kbyte" ... />
    ## </Stat>
    ##
    ## would be submitted as a count, but will be as a gauge if `unit.kbyte` is present in `custom_queries_units_gauge`.
    #
    # custom_queries_units_gauge:
    #   - unit.kbyte
    #   - kilobyte
    #   - second

    ## @param tags - list of key:value elements - optional
    ## List of tags to attach to every metric, event and service check emitted by this integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /opt/IBM/WebSphere/AppServer/profiles/InfoSphere/logs/server1/*.log
#     source: ibm_was
#     service: websphere
