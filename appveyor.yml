version: '{branch}.{build}'
shallow_clone: true
environment:
  TRAVIS_BUILD_DIR: c:\projects\integrations-core
  INTEGRATIONS_DIR: c:\projects\integrations-core\embedded
  PIP_CACHE: c:\projects\integrations-core\.cache\pip
  VOLATILE_DIR: c:\projects
  NOSE_FILTER: not unix and not fixme and not winfixme
  PYWIN_PATH: C:\projects\integrations-core\.cache\pywin32-py2.7.exe
  SKIP_LINT: true
  DD_AGENT_BRANCH: master
  SDK_TESTING: true
  PYTHON: C:\Python27-x64
  PYTHON_VERSION: 2.7.13
  PYTHON_ARCH: 64
  PYWIN32_URL: https://downloads.sourceforge.net/project/pywin32/pywin32/Build%20219/pywin32-219.win-amd64-py2.7.exe
  PYWIN32_INSTALL_DIR: pywin32-219-py2.7-win-amd64.egg
init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
cache:
  - C:\projects\integrations-core\.cache
  - C:\projects\integrations-core\vendor\cache
  - C:\projects\integrations-core\embedded
services:
  - iis
  # - mssql2008r2sp2 # FIXME: re-enable when we can launch multiple mssql instances at once
  - mssql2012sp1
  # - mssql2014 # FIXME: re-enable when we can launch multiple mssql instances at once
install:
  # Use the 64-bit ruby so that all the Powershell classes are accessible when running shell commands from ruby
  - set PATH=C:\Ruby22-x64\bin;%PATH%
  - bundle install
  - bundle package
  - git clone -b %DD_AGENT_BRANCH% https://github.com/DataDog/dd-agent.git c:\projects\dd-agent
  - if not exist %PIP_CACHE% mkdir %PIP_CACHE%
  - cmd: appveyor-retry powershell If (-Not (Test-Path $env:PYWIN_PATH)) {(new-object net.webclient).DownloadFile("$env:PYWIN32_URL", "$env:PYWIN_PATH")}
  - "%PYTHON%/Scripts/easy_install.exe %PYWIN_PATH%"
  - ps: mkdir -p $(python -m site --user-site)
  - ps: echo "C:\projects\dd-agent" | out-file "$(python -m site --user-site)/datadog-agent.pth" -encoding ASCII
  - ps: (& "$env:PYTHON/python.exe" -m pip install --upgrade pip)
  - ps: '& "$env:PYTHON/Scripts/pip.exe" install -r c:\projects\dd-agent\requirements.txt'
  # Remove the adodbapi module shipped with pywin32: it conflicts with the pip-installed adodbapi
  - ps: rm $env:PYTHON/lib/site-packages/$env:PYWIN32_INSTALL_DIR/adodbapi/__init__.py
  - ps: rm $env:PYTHON/lib/site-packages/$env:PYWIN32_INSTALL_DIR/adodbapi/__init__.pyc
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install -U virtualenv)
  - ps: (& "$env:PYTHON/Scripts/pip.exe" uninstall -y docker-py)
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install .\datadog_checks_dev[cli])
  - ddev config set core .
  - cd datadog_checks_base
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install .)
  - cd ..
  - cd sqlserver
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install -r requirements.txt)
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install .)
  - cd ..
  - cd windows_service
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install .)
  - cd ..
  - cd wmi_check
  - ps: (& "$env:PYTHON/Scripts/pip.exe" install .)
  - cd ..
build: off
test_script:
  - ddev test datadog_checks_base datadog_checks_tests_helper aspdotnet active_directory dotnetclr exchange_server iis pdh_check
  - bundle exec rake ci:run[sqlserver]
  - bundle exec rake ci:run[windows_service]
  - bundle exec rake ci:run[wmi_check]
