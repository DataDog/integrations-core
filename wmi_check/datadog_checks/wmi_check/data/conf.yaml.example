## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

    ## @param class - string - required
    ## The name of the WMI class, for example `Win32_OperatingSystem`.
    ## You can find many of the standard class names on the MSDN docs:
    ##
    ## https://msdn.microsoft.com/en-us/library/windows/desktop/aa394084.aspx
    #
  - class: <CLASS>

    ## @param metrics - list of lists - required
    ## list of metrics you want to capture, with each item in the list being a set of:
    ## [<WMI_PROPERTY_NAME>, <METRIC_NAME>, <METRIC_TYPE>]
    ##
    ##  * <WMI_PROPERTY_NAME> is something like `NumberOfUsers` or `ThreadCount`.
    ##                         The standard properties are also available on the MSDN docs
    ##                         for each class.
    ##
    ##  * <METRIC_NAME> is the name you want to show up in Datadog.
    ##
    ##  * <METRIC_TYPE> is from the standard choices for all agent checks, such as gauge, rate, histogram or counter.
    #
    metrics:
      - [<WMI_PROPERTY_NAME>, <METRIC_NAME>, <METRIC_TYPE>]

    ## @param host - string - optional - default: localhost
    ## The optional target of the WMI query.
    ## If you set this option, make sure that Remote Management is enabled on the target host:
    ##
    ## https://technet.microsoft.com/en-us/library/Hh921475.aspx
    #
    # host: localhost

    ## @param username - string - optional
    ## If authentication is needed, specify a `username` here.
    #
    # username: <USERNAME>

    ## @param password - string - optional
    ## If authentication is needed, specify a `password` here.
    #
    # password: <PASSWORD>

    ## @param namespace - string - optional - default: root\cimv2
    ## The optional WMI namespace to connect to.
    #
    # namespace: root\cimv2

    ## @param filters - list of mappings - optional
    ## A list of filters on the WMI query you may want.
    ## Filters can be in one of these forms:
    ##   [{<FILTER_PROPERTY>: <FILTER_VALUE>},...] or
    ##   [{FILTER_PROPERTY>: [<FILTER_OPERATOR>, <FILTER_VALUE>]},...]
    ##
    ## All metrics are filtered out if any given property:
    ##   1. Has one or more filter(s) applied to it, AND
    ##   2. None of its filters evaluate to 'True'
    ##
    ## Providing just a <FILTER_VALUE> defaults to the '=' comparison operator.
    ##
    ##   * <FILTER_PROPERTY> the name of the filter, for example 'PercentProcessorTime'.
    #
    # filters:
    #   - {<FILTER_PROPERTY>: [<FILTER_OPERATOR>, <FILTER_VALUE>]}
    #   - {<FILTER_PROPERTY>: <FILTER_VALUE>}

    ## @param provider - integer - optional - default: 64
    ## The WMI provider.
    ## It is used to request WMI data from the non-default provider. Available options are: `32` or `64`.
    ##
    ## See https://msdn.microsoft.com/en-us/library/aa393067.aspx
    #
    # provider: 64

    ## @param tag_by - string - optional
    ## The `tag_by` parameter lets you tag each metric with a property from the WMI class you're using.
    ## This is only useful when you will have multiple values for your WMI query.
    ## Comma-separated list of property names
    #
    # tag_by: Name,Label

    ## @param tag_queries - list of lists - optional
    ## The `tag_queries`  parameter lets you specify a list of queries, to tag metrics with a target class property.
    ## Each item in the list is a set of :
    ##
    ## `[<LINK_SOURCE_PROPERTY>, <TARGET_CLASS>, <LINK_TARGET_CLASS_PROPERTY>, <TARGET_PROPERTY>]`
    ##
    ##   * `<LINK_SOURCE_PROPERTY>` contains the link value
    ##   * `<TARGET_CLASS>` is the class to link to
    ##   * `<LINK_TARGET_CLASS_PROPERTY>` is the target class property to link to
    ##   * `<TARGET_PROPERTY>` contains the value to tag with
    ##
    ## It translates to a WMI query:
    ##
    ## SELECT '<TARGET_PROPERTY>' FROM '<TARGET_CLASS>' WHERE '<LINK_TARGET_CLASS_PROPERTY>' = '<LINK_SOURCE_PROPERTY>'
    #
    # tag_queries:
    #   - [<LINK_SOURCE_PROPERTY>, <TARGET_CLASS>, <LINK_TARGET_CLASS_PROPERTY>, <TARGET_PROPERTY>]

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false
