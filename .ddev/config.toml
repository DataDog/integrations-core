[overrides.display-name]
datadog_checks_base = "Datadog Checks Base"
datadog_checks_dev = "Datadog Checks Dev"
datadog_checks_downloader = "Datadog Checks Downloader"
ecs_fargate = "Amazon ECS Fargate"
fluentd = "Fluentd"
kube_scheduler = "Kubernetes Scheduler"
nfsstat = "NFSstat"
nginx = "NGINX"
nginx_ingress_controller = "NGINX Ingress Controller"
openstack_controller = "OpenStack Controller"
pulsar = "Pulsar"
teamcity = "TeamCity"
win32_event_log = "Windows Event Log"

[overrides.ci.ddev]
platforms = ["linux", "windows"]

[overrides.ci.datadog_checks_base]
platforms = ["linux", "windows"]

[overrides.ci.datadog_checks_dev]
platforms = ["linux", "windows"]

[overrides.ci.datadog_checks_downloader]
platforms = ["linux", "windows"]

[overrides.ci.disk]
platforms = ["linux", "windows"]

[overrides.ci.dns_check]
platforms = ["linux", "windows"]

[overrides.ci.glusterfs]
runners = { linux = ["ubuntu-20.04"] }

[overrides.ci.hyperv]
exclude = true

[overrides.ci.ibm_mq]
platforms = ["linux", "windows"]

[overrides.ci.mesos_slave]
runners = { linux = ["ubuntu-20.04"] }

[overrides.ci.mysql]
runners = { linux = ["ubuntu-20.04"] }

[overrides.ci.network]
platforms = ["linux", "windows"]

[overrides.ci.spark]
runners = { linux = ["ubuntu-20.04"] }

[overrides.ci.ssh]
runners = { linux = ["ubuntu-20.04"] }

[overrides.ci.sqlserver]
platforms = ["windows", "linux"]
runners = { windows = ["windows-2019"] }

[overrides.ci.tcp_check]
platforms = ["linux", "windows"]

[overrides.ci.tokumx]
only-py2 = true

[overrides.dependencies.licenses]
# https://github.com/aerospike/aerospike-client-python/blob/master/LICENSE
aerospike = ['Apache-2.0']
# https://github.com/baztian/jaydebeapi/blob/master/COPYING
JayDeBeApi = ['LGPL-3.0-only']
# https://github.com/pyca/cryptography/blob/main/LICENSE
cryptography = ['Apache-2.0', 'BSD-3-Clause', 'PSF']
# https://github.com/rthalley/dnspython/blob/master/LICENSE
dnspython = ['ISC']
# https://github.com/cannatag/ldap3/blob/dev/COPYING.txt
ldap3 = ['LGPL-3.0-only']
# https://cloudera.github.io/cm_api/
cm-client = ['Apache-2.0']
# https://github.com/oauthlib/oauthlib/blob/master/LICENSE
oauthlib = ['BSD-3-Clause']
# https://github.com/hajimes/mmh3/blob/master/LICENSE
mmh3 = ['CC0-1.0']
# https://github.com/paramiko/paramiko/blob/master/LICENSE
paramiko = ['LGPL-2.1-only']
# https://github.com/oracle/python-oracledb/blob/main/LICENSE.txt
oracledb = ['Apache-2.0']
# https://github.com/psycopg/psycopg2/blob/master/LICENSE
# https://github.com/psycopg/psycopg2/blob/master/doc/COPYING.LESSER
psycopg2-binary = ['LGPL-3.0-only', 'BSD-3-Clause']
# https://github.com/Legrandin/pycryptodome/blob/master/LICENSE.rst
pycryptodomex = ['Unlicense', 'BSD-2-Clause']
# https://github.com/mongodb/mongo-python-driver/blob/master/LICENSE
pymongo = ['Apache-2.0']
# https://github.com/requests/requests-kerberos/pull/123
requests-kerberos = ['ISC']
# https://github.com/requests/requests-ntlm/blob/master/LICENSE
requests-ntlm = ['ISC']
# https://github.com/rethinkdb/rethinkdb-python/blob/master/LICENSE
rethinkdb = ['Apache-2.0']
# https://github.com/simplejson/simplejson/blob/master/LICENSE.txt
simplejson = ['MIT']
# https://github.com/Supervisor/supervisor/blob/master/LICENSES.txt
supervisor = ['BSD-3-Clause-Modification']
# https://github.com/Cairnarvon/uptime/blob/master/COPYING.txt
uptime = ['BSD-2-Clause']
# https://github.com/hickeroar/win_inet_pton/blob/master/LICENSE
win-inet-pton = ['Unlicense']

[overrides.dependencies.repo]
PyYAML = 'https://github.com/yaml/pyyaml'
contextlib2 = 'https://github.com/jazzband/contextlib2'
dnspython = 'https://github.com/rthalley/dnspython'
foundationdb = 'https://github.com/apple/foundationdb'
in-toto = 'https://github.com/in-toto/in-toto'
lxml = 'https://github.com/lxml/lxml'
oracledb = 'https://github.com/oracle/python-oracledb'
packaging = 'https://github.com/pypa/packaging'
paramiko = 'https://github.com/paramiko/paramiko'
protobuf = 'https://github.com/protocolbuffers/protobuf'
psycopg2-binary = 'https://github.com/psycopg/psycopg2'
pycryptodomex = 'https://github.com/Legrandin/pycryptodome'
redis = 'https://github.com/redis/redis-py'
requests = 'https://github.com/psf/requests'
requests-toolbelt = 'https://github.com/requests/toolbelt'
service-identity = 'https://github.com/pyca/service-identity'
snowflake-connector-python = 'https://github.com/snowflakedb/snowflake-connector-python'
supervisor = 'https://github.com/Supervisor/supervisor'
tuf = 'https://github.com/theupdateframework/python-tuf'
typing = 'https://github.com/python/typing'

[overrides.validate.openmetrics]
exclude = ["openmetrics"]

[overrides.validate.labeler]
include = ["datadog_checks_tests_helper"]

[overrides.validate.metrics]
exclude = [
    'disk',
    'go-metro',
    'http_check',
    'kubelet',
    'kubernetes_state',
    'network',
    'ntp',
    'process',
    'system_core',
    'system_swap',
    'tcp_check',
]

[overrides.dep.updates]
exclude = [
    'ddtrace',  # https://github.com/DataDog/integrations-core/pull/9132
    'foundationdb',  # Breaking datadog_checks_base tests
    'pyasn1',  # https://github.com/pyasn1/pyasn1/issues/52
    'pysnmp',  # Breaking snmp tests
    'aerospike',  # v8+ breaks agent build.
    # We need pydantic 2.0.2 for the rpm x64 agent build (see https://github.com/DataDog/datadog-agent/pull/18303)
    'pydantic',
    # https://github.com/DataDog/integrations-core/pull/16080
    'lxml',
    # We need to keep an `oracledb` version that uses the same version of odpi that is used in godror in the agent repo.
    # Somehow we do not load the right version. Until we find out how and why, we need to keep both
    # libs in sync with the same version of odpi.
    'oracledb',
    # We're not ready to switch to v3 of the postgres library, see:
    # https://github.com/DataDog/integrations-core/pull/15859
    'psycopg2-binary',
    # orjson ... requires rustc 1.65+, but the latest we can have (thanks CentOS 6) is 1.62.
    # We get the following error when compiling orjson on Centos 6:
    # error: package `associative-cache v2.0.0` cannot be built because it requires rustc 1.65 or newer,
    # while the currently active rustc version is 1.62.0-nightly
    # Here's orjson switching to rustc 1.65:
    # https://github.com/ijl/orjson/commit/ce9bae876657ed377d761bf1234b040e2cc13d3c
    'orjson',
    # 2.4.10 is broken on py2 and they did not yank the version
    'rethinkdb',
    # cryptography>=42 requires rust>=1.63.0. We have rust 1.62 on centos 6
    # https://github.com/DataDog/datadog-agent/pull/22268
    'cryptography',
    # Brings urllib 2.0.7 which breaks `test_uds_request` in the base check
    # https://github.com/kubernetes-client/python/pull/2131
    'kubernetes',
    'psutil',
]

# Dependencies for the downloader that are security-related and should be updated separately from the others
security_deps = [
    'in-toto',
    'tuf',
    'securesystemslib',
]
