init_config:
    ## @param proxy - object - optional
    ## Set HTTP or HTTPS proxies for all instances. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

instances:

    ## @param expvar_url - string - required
    ## Expvar URL to gather your metrics from.
    #
  - expvar_url: http://localhost:8080

    ## @param namespace - string - optional - default: go_expvar
    ## Define your namespace that is prefixed to all metrics collected by this check.
    #
    # namespace: <NAMESPACE>

    ## @param tags - list of key:value string - optional
    ## List of tags to attach to every metric and service check emitted by this integration.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param metrics - list of objects - optional
    ## These metrics are just here as examples.
    ## Most memstats metrics are collected by default without configuration needed.
    ## See http://godoc.org/runtime#MemStats for their explanation
    ##
    ## For each metric you want to collect, specify its "path" and its "alias".
    ## with no alias specified, the metric name defaults to a path based name.
    ##
    ## Note: You can use a regex when you want to report for all elements matching a certain pattern
    ##
    ## You can also specify a `type` for the metrics. One of:
    ##  * count
    ##  * gauge (the default)
    ##  * rate (note that this shows up as a gauge in Datadog that is meant to be seen as a "per second rate")
    #
    # metrics:
    #   - path: memstats/PauseTotalNs
    #     alias: go_expvar.gc.pause_time_in_ns
    #     type: rate
    #     tags:
    #       - "<TAG_KEY>:<TAG_VALUE>"
    #   - path: memstats/Alloc
    #   - path: memstats/Lookups
    #     type: rate
    #   - path: memstats/Mallocs
    #     type: count
    #   - path: memstats/Frees
    #     type: rate
    #   - path: memstats/BySize/1/Mallocs
    #   - path: myvariable
    #     alias: go_expvar.my_custom_name
    #     type: gauge
    #   - path: routes/get_.*/count

    ## @param proxy - object - optional
    ## This overrides the `proxy` setting in `init_config`.
    ##
    ## Set HTTP or HTTPS proxies. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## This overrides the `skip_proxy` setting in `init_config`.
    ##
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

    ## @param auth_type - string - optional
    ## The type of authentication to use.
    ## The available values are "basic" and "digest".
    #
    # auth_type: <AUTH_TYPE>

    ## @param username - string - optional
    ## The username to use if services are behind basic auth.
    #
    # username: <USERNAME>

    ## @param ntlm_domain - string - optional
    ## If your services uses NTLM authentication, you can
    ## specify a domain that is used in the check. For NTLM Auth,
    ## append the username to domain, not as the `username` parameter.
    ## Example: <NTLM_DOMAIN>\<USERNAME>
    #
    # ntlm_domain: <DOMAIN>

    ## @param password - string - optional
    ## The password to use if services are behind basic or NTLM auth.
    #
    # password: <PASSWORD>

    ## @param kerberos_auth - string - optional - default: disabled
    ## If your service uses Kerberos authentication, you can specify the Kerberos
    ## strategy to use between:
    ##  * required
    ##  * optional
    ##  * disabled
    ##
    ## See https://github.com/requests/requests-kerberos#mutual-authentication
    #
    # kerberos_auth: disabled

    ## @param kerberos_delegate - boolean - optional - default: false
    ## Set to `true` to enable kerberos delegation of credentials to a server that requests delegation.
    ## See https://github.com/requests/requests-kerberos#delegation
    #
    # kerberos_delegate: false

    ## @param kerberos_force_initiate - boolean - optional - default: false
    ## Set to `true` to preemptively initiate the Kerberos GSS exchange and present a Kerberos ticket on the initial
    ## request (and all subsequent requests).
    ## See https://github.com/requests/requests-kerberos#preemptive-authentication
    #
    # kerberos_force_initiate: false

    ## @param kerberos_hostname - string - optional
    ## Override the hostname used for the Kerberos GSS exchange if its DNS name doesn't match its kerberos
    ## hostname (e.g., behind a content switch or load balancer).
    ## See https://github.com/requests/requests-kerberos#hostname-override
    #
    # kerberos_hostname: null

    ## @param kerberos_principal - string - optional
    ## Set an explicit principal to force Kerberos to look for a matching credential cache for the named user.
    ## See https://github.com/requests/requests-kerberos#explicit-principal
    #
    # kerberos_principal: null

    ## @param kerberos_keytab - string - optional
    ## Set the path to your Kerberos key tab file.
    #
    # kerberos_keytab: <KEYTAB_FILE_PATH>

    ## @param kerberos_cache - string - optional
    ## Sets the KRB5CCNAME environment variable.
    ## It should point to a credential cache with a valid TGT.
    #
    # kerberos_cache: <KRB5CCNAME>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## If `tls_verify` is disabled, security warnings are logged by the check.
    ## Disable these by setting `tls_ignore_warning` to true.
    ##
    ## Note: `tls_ignore_warning` set to true is currently only reliable if used by one instance of one integration. 
    ## If enabled for multiple instances, spurious warnings might still appear even if `tls_ignore_warning` is set
    ## to true.
    #
    # tls_ignore_warning: false

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificateâ€™s authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param headers - list of key:value elements - optional
    ## The headers parameter allows you to send specific headers with every request.
    ## You can use it for explicitly specifying the host header or adding headers for
    ## authorization purposes.
    ##
    ## This overrides any default headers.
    #
    # headers:
    #   Host: <ALTERNATIVE_HOSTNAME>
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to services.
    #
    # timeout: 10

    ## @param log_requests - boolean - optional - default: false
    ## Whether or not to debug log the HTTP(S) requests made, including the method and URL.
    #
    # log_requests: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling for increased performance.
    #
    # persist_connections: false
