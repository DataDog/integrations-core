apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-sidecar-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app: sidecarInjectorWebhook
    release: {{ .Release.Name }}
    istio: sidecar-injector
spec:
{{- if .Values.sidecarInjectorWebhook.replicaCount }}
  replicas: {{ .Values.sidecarInjectorWebhook.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      istio: sidecar-injector
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.sidecarInjectorWebhook.rollingMaxSurge }}
      maxUnavailable: {{ .Values.sidecarInjectorWebhook.rollingMaxUnavailable }}
  template:
    metadata:
      labels:
        app: sidecarInjectorWebhook
        istio: sidecar-injector
{{- if eq .Release.Namespace "istio-system"}}
        heritage: Tiller
        release: istio
        chart: sidecarInjectorWebhook
{{- end }}
      annotations:
        sidecar.istio.io/inject: "false"
        {{- if .Values.sidecarInjectorWebhook.podAnnotations }}
{{ toYaml .Values.sidecarInjectorWebhook.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: istio-sidecar-injector-service-account
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      containers:
        - name: sidecar-injector-webhook
{{- if contains "/" .Values.sidecarInjectorWebhook.image }}
          image: "{{ .Values.sidecarInjectorWebhook.image }}"
{{- else }}
          image: "{{ .Values.sidecarInjectorWebhook.hub | default .Values.global.hub }}/{{ .Values.sidecarInjectorWebhook.image | default "sidecar_injector" }}:{{ .Values.sidecarInjectorWebhook.tag | default .Values.global.tag }}"
{{- end }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "Always" }}
          args:
            - --caCertFile=/etc/istio/certs/root-cert.pem
            - --tlsCertFile=/etc/istio/certs/cert-chain.pem
            - --tlsKeyFile=/etc/istio/certs/key.pem
            - --injectConfig=/etc/istio/inject/config
            - --meshConfig=/etc/istio/config/mesh
            - --port=9443
            - --healthCheckInterval=2s
            - --healthCheckFile=/tmp/health
{{- if or .Values.global.operatorManageWebhooks .Values.global.istiod.enabled}}
            - --reconcileWebhookConfig=false
{{- else }}
            - --reconcileWebhookConfig=true
{{- end }}
                  {{- if eq .Release.Namespace "istio-system"}}
            - --webhookConfigName=istio-sidecar-injector
                  {{ else }}
            - --webhookConfigName=istio-sidecar-injector-{{ .Release.Namespace }}
                  {{- end }}
            - --log_output_level=debug
          {{- if .Values.global.logAsJson }}
            - --log_as_json
          {{- end }}
          securityContext:
            runAsUser: 1337
            runAsGroup: 1337
            runAsNonRoot: true
          volumeMounts:
          - name: config-volume
            mountPath: /etc/istio/config
            readOnly: true
          - name: certs
            mountPath: /etc/istio/certs
            readOnly: true
          - name: inject-config
            mountPath: /etc/istio/inject
            readOnly: true
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/sidecar-injector
                - probe
                - --probe-path=/tmp/health
                - --interval=4s
            initialDelaySeconds: 4
            periodSeconds: 4
          resources:
{{- if .Values.sidecarInjectorWebhook.resources }}
{{ toYaml .Values.sidecarInjectorWebhook.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
      securityContext:
        fsGroup: 1337
      volumes:
      - name: config-volume
        configMap:
          name: injector-mesh
      - name: certs
        secret:
{{- if .Values.sidecarInjectorWebhook.selfSigned }}
          secretName: istio-sidecar-injector-self-signed
{{- else if .Values.global.certificates }}
          secretName: dns.istio-sidecar-injector-service-account
{{- else }}
          secretName: istio.istio-sidecar-injector-service-account
{{- end }}
      - name: inject-config
        configMap:
          name: istio-sidecar-injector
          items:
          - key: config
            path: config
          - key: values
            path: values
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
{{- if .Values.sidecarInjectorWebhook.tolerations }}
      tolerations:
{{ toYaml .Values.sidecarInjectorWebhook.tolerations | indent 6 }}
{{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
{{- end }}
