apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestcount-oop
  namespace: istio-system
spec:
  template: metric
  params:
    value: "1"
    dimensions:
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "source", "destination")
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_app: source.labels["app"] | "unknown"
      source_version: source.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_app: destination.labels["app"] | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      response_flags: context.proxy_error_code | "-"
      permissive_response_code: rbac.permissive.response_code | "none"
      permissive_response_policyid: rbac.permissive.effective_policy_id | "none"
      connection_security_policy: conditional((context.reporter.kind | "inbound") == "outbound", "unknown", conditional(connection.mtls | false, "mutual_tls", "none"))
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: prometheus-handler
  namespace: istio-system
spec:
  adapter: prometheus-nosession
  connection:
    address: "prometheusadapter:8080"
  params:
    metrics:
    - name: request_count_oop
      instance_name: requestcount-oop.instance.istio-system
      kind: COUNTER
      label_names:
      - reporter
      - source_workload
      - source_workload_namespace
      - source_principal
      - source_app
      - source_version
      - destination_workload
      - destination_workload_namespace
      - destination_principal
      - destination_app
      - destination_version
      - destination_service
      - destination_service_name
      - destination_service_namespace
      - request_protocol
      - response_code
      - response_flags
      - permissive_response_code
      - permissive_response_policyid
      - connection_security_policy
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: promhttp-oop
  namespace: istio-system
spec:
  actions:
  - handler: prometheus-handler
    instances: [ requestcount-oop ]
---
