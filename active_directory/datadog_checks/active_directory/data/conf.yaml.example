## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

    ## @param host - string - required
    ## The host the Datadog Active Directory check connects to.
    ## "." means the current host
    #
  - host: .

    ## @param username - string - optional
    ## The username from the credentials needed to connect to the host.
    #
    # username: <USERNAME>

    ## @param password - string - optional
    ## The password from the credentials needed to connect to the host.
    #
    # password: <PASSWORD>

    ## @param additional_metrics - list of lists - optional
    ## The additional metrics is a list of items that represent additional counters to collect.
    ## Each item is a list of strings, formatted as follows:
    ##
    ## ['<COUNTERSET_NAME>', <COUNTER_INSTANCE_NAME>, '<COUNTER_NAME>', <METRIC_NAME>, <METRIC_TYPE>]
    ##
    ## <COUNTERSET_NAME> is the name of the PDH counter set (the name of the counter).
    ## <COUNTER_INSTANCE_NAME> is the specific counter instance to collect, for example
    ##                         "Default Web Site".  Specify 'none' for all instances of
    ##                         the counter.
    ## <COUNTER_NAME> is the individual counter to report.
    ## <METRIC_NAME> is the name that displays in Datadog.
    ## <METRIC_TYPE> is from the standard choices for all Agent checks, such as gauge,
    ##               rate, histogram, or count.
    #
    # additional_metrics:
    #   - [NTDS, none, DS % Writes from LDAP, active_directory.ds.writes_from_ldap, gauge]

    ## @param counter_data_types - list of strings - optional
    ## counter_data_types is a list of <METRIC_NAME>,<DATA_TYPE> elements that
    ## allow the precision in which counters are queried on a per metric basis.
    ## <METRIC_NAME>: The name of your metric
    ## <DATA_TYPE>  : The type of your metric (int or float)
    #
    # counter_data_types:
    #   - [<METRIC_NAME>, <DATA_TYPE>]
    #   - [active_directory.dra.inbound.bytes.total, int]
    #   - [active_directory.ldap.bind_time, float]

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which Integration sent the logs.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /path/to/active_directory/file.log
#     source: ruby
#     service: <SERVICE_NAME>
