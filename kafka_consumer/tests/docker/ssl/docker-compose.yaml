services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:${ZK_VERSION}
    ports:
      - 2181:2181
    container_name: zookeeper
    hostname: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: nc -vz localhost 2181 || exit -1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10

  kafka1:
    image: docker.io/bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: INTERNAL://:19092,EXTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://:19092,EXTERNAL://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SSL
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_SSL_TRUSTSTORE_TYPE: jks
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: secret
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: secret
      KAFKA_CFG_SSL_KEY_PASSWORD: secret
      KAFKA_CFG_SSL_CLIENT_AUTH: required
      KAFKA_CFG_SSL_KEYSTORE_TYPE: jks
      KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: HTTPS
      KAFKA_CFG_SUPER_USERS: User:kafka
      KAFKA_CFG_MESSAGE_MAX_BYTES:  1000000
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_CFG_SSL_PRINCIPAL_MAPPING_RULES: 'RULE:^CN=(.*?),OU=ServiceUsers.*$/$1/,RULE:^CN=(.*?),OU=(.*?),O=(.*?),L=(.*?),ST=(.*?),C=(.*?)$/$1@$2/L,RULE:^.*[Cc][Nn]=([a-zA-Z0-9.]*).*$/$1/L,DEFAULT'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: false
    volumes:
      - ./truststore/kafka.truststore.jks:/bitnami/kafka/config/certs/kafka.truststore.jks
      - ./keystore/kafka1.server.keystore.jks:/bitnami/kafka/config/certs/kafka.keystore.jks
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka2:
    image: docker.io/bitnami/kafka:${KAFKA_VERSION}
    container_name: kafka2
    hostname: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: INTERNAL://:19093,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://:19093,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SSL
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_SSL_TRUSTSTORE_TYPE: jks
      KAFKA_CFG_SSL_TRUSTSTORE_PASSWORD: secret
      KAFKA_CFG_SSL_KEYSTORE_PASSWORD: secret
      KAFKA_CFG_SSL_KEY_PASSWORD: secret
      KAFKA_CFG_SSL_CLIENT_AUTH: required
      KAFKA_CFG_SSL_KEYSTORE_TYPE: jks
      KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: HTTPS
      KAFKA_CFG_SUPER_USERS: User:kafka
      KAFKA_CFG_MESSAGE_MAX_BYTES:  1000000
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_CFG_SSL_PRINCIPAL_MAPPING_RULES: 'RULE:^CN=(.*?),OU=ServiceUsers.*$/$1/,RULE:^CN=(.*?),OU=(.*?),O=(.*?),L=(.*?),ST=(.*?),C=(.*?)$/$1@$2/L,RULE:^.*[Cc][Nn]=([a-zA-Z0-9.]*).*$/$1/L,DEFAULT'
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: false
    volumes:
      - ./truststore/kafka.truststore.jks:/bitnami/kafka/config/certs/kafka.truststore.jks
      - ./keystore/kafka2.server.keystore.jks:/bitnami/kafka/config/certs/kafka.keystore.jks
    depends_on:
      zookeeper:
        condition: service_healthy
