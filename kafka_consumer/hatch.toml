[env.collectors.datadog-checks]

[[envs.default.matrix]]
python = ["2.7", "3.8"]
# Note: 0.9 is for testing legacy pre-0.10.2 implementation
version = ["0.9"]
offset-storage = ["kafka", "zk"]

[[envs.default.matrix]]
python = ["3.8"]
version = ["0.11", "1.1", "2.3"]
offset-storage = ["kafka", "zk"]

[envs.default.overrides]
matrix.version.e2e-env = { value = true, if = ["0.9"] }
matrix.version.env-vars = [
  { key = "KAFKA_VERSION", value = "0.9.0.1-1", if = ["0.9"] },
  { key = "KAFKA_VERSION", value = "0.11.0.1", if = ["0.11"] },
  { key = "KAFKA_VERSION", value = "1.1.0", if = ["1.1"] },
  { key = "KAFKA_VERSION", value = "2.12-2.3.0", if = ["2.3"] },
  # Using Kafka 0.9 + with ZK 3.4 due to flakiness of Kafka 0.9 + ZK 3.6
  { key = "ZK_VERSION", value = "3.4.11", if = ["0.9"] },
  { key = "ZK_VERSION", value = "3.6.0", if = ["0.11", "1.1", "2.3"] },
  { key = "USE_MULTIPLE_BROKERS", value = "true", if = ["1.1", "2.3"] },
  # Can't have a working `docker compose` for these versions
  { key = "USE_MULTIPLE_BROKERS", value = "false", if = ["0.9", "0.11"] },
]
matrix.offset-storage.env-vars = [
  { key = "KAFKA_OFFSETS_STORAGE", value = "kafka", if = ["kafka"] },
  { key = "KAFKA_OFFSETS_STORAGE", value = "zookeeper", if = ["zk"] },
]

[envs.default]
dependencies = [
  "datadog_checks_tests_helper @ {root:uri}/../datadog_checks_tests_helper",
]
e2e-env = false

[envs.latest.env-vars]
KAFKA_OFFSETS_STORAGE = "kafka"
KAFKA_VERSION = "latest"
USE_MULTIPLE_BROKERS = "true"
ZK_VERSION = "3.6.0"
