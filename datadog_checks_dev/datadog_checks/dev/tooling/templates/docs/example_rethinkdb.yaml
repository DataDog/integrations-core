name: RethinkDB
files:
  - name: README.md
    sections:
      - template: overview
        overrides:
          description: |
            [RethinkDB][1] is a distributed documented-oriented NoSQL database, with first class support for realtime
            change feeds.

            This check monitors a RethinkDB cluster through the Datadog Agent and collects metrics about performance,
            data availability, cluster configuration, and more.

            **Note**: this integration is compatible with RethinkDB **version 2.3.6 and above**.

            [1]: https://rethinkdb.com
          parameters:
            value1: foo
      - template: setup
      - template: setup/installation
      - template: setup/configuration
        overrides:
          description: |
            1. If using RethinkDB 2.4+, add a `datadog-agent` user with read-only permissions on the `rethinkdb`
            database. You can use the following ReQL commands, and refer to [Permissions and user accounts][4] for
            details:

                ```python
                r.db('rethinkdb').table('users').insert({'id': 'datadog-agent', 'password': '<PASSWORD>'})
                r.db('rethinkdb').grant('datadog-agent', {'read': True})
                ```

                **Note**: on RethinkDB 2.3.x, granting permissions on the `rethinkdb` database is not supported. Skip
                *this step and use your [admin account][5] below instead.

            2. Edit the `rethinkdb.d/conf.yaml` file in the `conf.d/` folder at the root of your [Agent's configuration
            directory][6]. See the [sample rethinkdb.d/conf.yaml][7] for all available configuration options.

                ```yaml
                init_config:

                instances:
                  - host: localhost
                    port: 28015
                    user: "<USER>"
                    password: "<PASSWORD>"
                ```

            3. [Restart the Agent][8].

            **Note**: this integration collects metrics from all servers in the cluster, so you only need a single
            *Agent.
      - template: setup/configuration/log_collection
        overrides:
          parameters:
            check_log_conf_snippet: |
              ```yaml
              logs:
                - type: file
                  path: "<LOG_FILE_PATH>"
                  source: rethinkdb
                  service: "<SERVICE_NAME>"
              ```
      - template: setup/validation
      - template: data_collected/metrics
      - template: data_collected/events
      # override for service checks unnecessary, `processor` function will parse `service_checks.json`
      - template: data_collected/service_checks
      - template: troubleshooting
