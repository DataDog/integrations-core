## All options defined here are available to all instances.
#
init_config:

    ## @param workload_username - string - required
    ## The Workload username. This value can be found in the `User Management` tab of the Management 
    ## Console in the `Workload User Name`.
    #
    workload_username: <WORKLOAD_USERNAME>

    ## @param workload_password - string - required
    ## The Workload password. This value can be found in the `User Management` tab of the Management 
    ## Console in the `Workload Password`.
    #
    workload_password: <WORKLOAD_PASSWORD>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independently of the others.
#
instances:

    ## @param api_url - string - required
    ## The URL endpoint for the Cloudera Manager API. This can be found under the Endpoints tab for 
    ## your Data Hub to monitor. 
    ##
    ## Note: The version of the Cloudera Manager API needs to be appended at the end of the URL. 
    ## For example, using v48 of the API for Data Hub `cluster_1` should result with a URL similar 
    ## to the following:
    ## `https://cluster1.cloudera.site/cluster_1/cdp-proxy-api/cm-api/v48`
    #
  - api_url: <API_URL>

    ## @param clusters - mapping - optional
    ## Optional configuration to indicate the clusters that we want to be processed. If not configured, 
    ## all clusters will be processed.
    ##
    ## The 'include' key will indicate the regular expressions of the clusters for which metrics are to be reported
    ## and the configuration to be applied to each of them. If no configuration associated with the key is indicated
    ## with the regular expression, they will be processed with the default configuration.
    ## The clusters will be processed in the order indicated in the 'include'. 
    ## If a cluster is matched on an 'include' key, it will only be processed there and not in a later 'include'
    ## that it might match on.
    ##
    ## The 'exclude' key will indicate the regular expressions of those clusters for which metrics
    ## are not to be reported.
    ## The excludes will have priority over the includes, that is, if a cluster matches an exclude, it will not be
    ## processed even if it matches an include.
    ##
    ## The 'limit' key will allow limiting the number of clusters processed to avoid a combinatorial explosion of tags
    ## associated with a metric.
    ##
    ## The 'interval' key will indicate the validity time of the last list of clusters obtained through the endpoint.
    ## If 'interval' is not indicated, the list of clusters will be obtained each time the check is executed
    ## and will not be cached.
    ##
    ## In the following example, all clusters will be processed except those whose name begins with 'tmp_' 
    ## up to a maximum of 10 clusters.
    ## Furthermore, the cache will be valid for 1 minute.
    ##
    ##   clusters:
    ##     limit: 10
    ##     include:
    ##       - '.*'             
    ##     exclude:
    ##       - 'tmp_.*'
    ##     interval: 60
    #
    # clusters: {}

    ## @param custom_queries - list of mappings - optional
    ## Define custom queries to run using Cloudera Manager with tsquery. 
    ## More information on querying Cloudera Manager can be found here:
    ##
    ## https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/cm_dg_tsquery.html
    ##
    ## Note: If metric expression functions are used, make sure to set aliases or possibly
    ## risk metrics being misnamed. For example, "SELECT last(foo)" will result
    ## in a metric name of 'cloudera.last_foo'.
    ##
    ## Example usage:
    ##
    ## custom_queries:
    ## - query: SELECT foo, bar
    ##   tags: baz:1 
    ##
    ## This configuration will collect cloudera.<CATEGORY>.foo and cloudera.<CATEGORY>.bar,
    ## both with custom tags of `baz:1`.
    #
    # custom_queries: []

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

    ## @param metric_patterns - mapping - optional
    ## A mapping of metrics to include or exclude, with each entry being a regular expression.
    ##
    ## Metrics defined in `exclude` will take precedence in case of overlap.
    #
    # metric_patterns:
    #   include:
    #   - <INCLUDE_REGEX>
    #   exclude:
    #   - <EXCLUDE_REGEX>
