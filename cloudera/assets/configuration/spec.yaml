name: Cloudera
files:
- name: cloudera.yaml
  options:
  - template: init_config
    options:
    - name: workload_username
      description: |
        The Workload username. This value can be found in the `User Management` tab of the Management
        Console in the `Workload User Name`.
      required: true
      value:
        type: string
    - name: workload_password
      description: |
        The Workload password. This value can be found in the `User Management` tab of the Management
        Console in the `Workload Password`.
      required: true
      value:
        type: string
    - template: init_config/default
  - template: instances
    options:
    - name: api_url
      required: true
      description: |
        The URL endpoint for the Cloudera Manager API. This can be found under the Endpoints tab for
        your Data Hub to monitor.

        Note: The version of the Cloudera Manager API needs to be appended at the end of the URL.
        For example, using v48 of the API for Data Hub `cluster_1` should result with a URL similar
        to the following:
        `https://cluster1.cloudera.site/cluster_1/cdp-proxy-api/cm-api/v48`

      value:
        type: string
    - name: max_parallel_requests
      description: |
        The maximum number of requests to Cloudera Manager that are allowed in parallel.
      hidden: true
      value:
        type: integer
        example: 100
    - name: clusters
      description: |
        Optional configuration to indicate the clusters that we want to be processed. If not configured,
        all clusters will be processed.

        The 'include' key will indicate the regular expressions of the clusters for which metrics are to be reported
        and the configuration to be applied to each of them. If no configuration associated with the key is indicated
        with the regular expression, they will be processed with the default configuration.
        The clusters will be processed in the order indicated in the 'include'.
        If a cluster is matched on an 'include' key, it will only be processed there and not in a later 'include'
        that it might match on.

        The 'exclude' key will indicate the regular expressions of those clusters for which metrics
        are not to be reported.
        The excludes will have priority over the includes, that is, if a cluster matches an exclude, it will not be
        processed even if it matches an include.

        The 'limit' key will allow limiting the number of clusters processed to avoid a combinatorial explosion of tags
        associated with a metric.

        The 'interval' key will indicate the validity time of the last list of clusters obtained through the endpoint.
        If 'interval' is not indicated, the list of clusters will be obtained each time the check is executed
        and will not be cached.

        In the following example, all clusters will be processed except those whose name begins with 'tmp_'
        up to a maximum of 10 clusters.
        Furthermore, the cache will be valid for 1 minute.

          clusters:
            limit: 10
            include:
              - '.*'
            exclude:
              - 'tmp_.*'
            interval: 60
      value:
        type: object
        properties:
          - name: limit
            description: |
              Maximum number of clusters to be processed.
            type: integer
          - name: include
            type: array
            items:
              anyOf:
                - type: string
                - type: object
          - name: exclude
            type: array
            items:
              type: string
          - name: interval
            type: integer
        example: {}
    - name: custom_queries
      description: |
        Define custom queries to run using Cloudera Manager with tsquery.
        More information on querying Cloudera Manager can be found here:

        https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/cm_dg_tsquery.html

        Note: If metric expression functions are used, make sure to set aliases or possibly
        risk metrics being misnamed. For example, "SELECT last(foo)" will result
        in a metric name of 'cloudera.last_foo'.

        Example usage:

        custom_queries:
        - query: SELECT foo, bar
          tags: baz:1

        This configuration will collect cloudera.<CATEGORY>.foo and cloudera.<CATEGORY>.bar,
        both with custom tags of `baz:1`.
      value:
        type: array
        items:
          type: object
          properties:
            - name: query
              type: string
            - name: tags
              type: array
              items:
                type: string
    - name: cloudera_client
      description: |
        Type of client.
      required: false
      hidden: true
      value:
        type: string
        example: 'cm_client'
    - template: instances/default
