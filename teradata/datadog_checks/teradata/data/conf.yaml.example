## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

    ## @param global_custom_queries - list of mappings - optional
    ## See `custom_queries` defined below.
    ##
    ## Global custom queries can be applied to all instances using the
    ## `use_global_custom_queries` setting at the instance level.
    #
    # global_custom_queries:
    #   - query: <QUERY>
    #     columns: <COLUMNS>
    #     tags: <TAGS>

## Every instance is scheduled independent of the others.
##
## Note: All '%' characters must be escaped as '%%'
#
instances:

  -
    ## @param use_odbc - string - optional
    ## Whether or not to use ODBC method for connecting to the Teradata database. If `true`, ODBC options are required.
    ## If `false`, the check will use the teradatasql python driver to connect to the Teradata database.
    #
    # use_odbc: <USE_ODBC>

    ## @param use_jdbc - string - optional
    ## Whether or not to use JDBC method for connecting to the Teradata database.
    #
    # use_jdbc: <USE_JDBC>

    ## @param dsn - string - optional
    ## Data Source Name. The name of ODBC Driver for Teradata in the [ODBC Data Sources] section of odbc.ini.
    #
    # dsn: <DSN>

    ## @param account - string - optional
    ## The account string to use when logging into the database.
    #
    # account: <ACCOUNT>

    ## @param host - string - required
    ## The IP address or FQDN (fully qualified domain name) of the Teradata database server. If `use_odbc` is enabled,
    ## specify the DBC name.
    #
    host: <IP>

    ## @param port - string - optional
    ## Specifies the Teradata database port number
    #
    # port: <PORT>

    ## @param database - string - optional - default: system
    ## The name of the database to access.
    #
    # database: system

    ## @param odbc_driver_path - string - optional - default: Teradata Database ODBC Driver 17.10
    ## The named ODBC Driver or the full path to ODBC Driver for Teradata shared objects
    ## (e.g. <DRIVER_INSTALL_DIR>/teradata/client/ODBC/lib/tdataodbc_sb64.so).
    #
    # odbc_driver_path: Teradata Database ODBC Driver 17.10

    ## @param jdbc_driver_path - string - optional - default: <DRIVER_PATH>.jar
    ## The full path to the Teradata JDBC Driver.
    #
    # jdbc_driver_path: <DRIVER_PATH>.jar

    ## @param connection_string - string - optional
    ## Specify a custom connection string to be used for connecting to the Teradata database.
    #
    # connection_string: <CONNECTION_STRING>

    ## @param username - string - required
    ## Username for the Datadog-Teradata check user.
    #
    username: <USERNAME>

    ## @param password - string - required
    ## Password for the Datadog-Teradata check user.
    #
    password: <PASSWORD>

    ## @param use_tls - string - optional
    ## Whether or not to use TLS for making connections to the Teradata database.
    #
    # use_tls: <USE_TLS>

    ## @param https_port - string - optional
    ## The port number used for making TLS connections to the Teradata database.
    #
    # https_port: <PORT>

    ## @param ssl_mode - string - optional
    ## The SSL mode used for making TLS connections to the Teradata database.
    ## Valid options are:
    ## * Allow
    ## * Disable
    ## * Prefer
    ## * Require
    ## * Verify-CA (Note: Does not perform TLS certificate verification if `use_odbc: false`)
    ## * Verify-Full (Note: Does not perform TLS certificate verification if `use_odbc: false`)
    #
    # ssl_mode: <SSL_MODE>

    ## @param ssl_protocol - string - optional
    ## Specifies the TLS protocol for HTTPS/TLS connections. Currently, only TLSv1.2 is supported.
    #
    # ssl_protocol: <SSL_PROTOCOL>

    ## @param ssl_ca - string - optional - default: /path/to/ssl_ca_dir
    ## The full path of the directory containing the root certificates for trusted CAs. If `ssl_mode` is not set to
    ## `Verify-CA` or `Verify-Full`, `ssl_ca` path or `ssl_ca_path` file name will be ignored.
    #
    # ssl_ca: /path/to/ssl_ca_dir

    ## @param ssl_ca_path - string - optional - default: /path/to/ssl_ca_file/ca.pem
    ## The full path and name of a .pem file containing one or more certificates for
    ## trusted Root and Intermediate CAs. If `ssl_mode` is not set to `Verify-CA` or `Verify-Full`,
    ## `ssl_ca` path or `ssl_ca_path` file name will be ignored.
    #
    # ssl_ca_path: /path/to/ssl_ca_file/ca.pem

    ## @param mechanism_key - string - optional
    ## Key parameter to the authenication mechanism.
    #
    # mechanism_key: <MECHANISM_KEY>

    ## @param mechanism_name - string - optional
    ## The authentication mechanism for connecting to the Teradata data source. If no value is provided,
    ## the default is determined by the configuration in the `tdgssconfigure` XML file.
    ## For more info, see: https://docs.teradata.com/r/ODBC-Driver-for-Teradata-User-Guide/October-2021
    ##
    ## Valid options are:
    ## * TD2 - Selects Teradata 2 authentication mechanism. Username and password are required.
    ## * TDNEGO - Selects the Authentication Mechanism automatically based on the policy without user involvement.
    ## * LDAP - Selects LDAP as the authentication mechanism. The application provides the username and password.
    ## * KRB5 - Selects Kerberos as the authentication mechanism. The application provides the username and password.
    #
    # mechanism_name: <MECHANISM_NAME>

## @param only_custom_queries - boolean - optional - default: false
## Set this parameter to `true` if you want to skip the integration's default metrics collection.
## Only metrics specified in `custom_queries` will be collected.
#
# only_custom_queries: false

## @param use_global_custom_queries - string - optional - default: true
## How `global_custom_queries` should be used for this instance. There are 3 options:
##
## 1. true - `global_custom_queries` override `custom_queries`.
## 2. false - `custom_queries` override `global_custom_queries`.
## 3. extend - `global_custom_queries` are used in addition to any `custom_queries`.
#
# use_global_custom_queries: 'true'

## @param custom_queries - list of mappings - optional
## Each query must have 2 fields, and can have a third optional field:
##
## 1. query - The SQL to execute. It can be a simple statement or a multi-line script.
##            Use the pipe `|` if you require a multi-line script.
## 2. columns - The list representing each column, ordered sequentially from left to right.
##              The number of columns must equal the number of columns returned in the query.
##              There are 2 required pieces of data:
##                a. name - The suffix to append to `<INTEGRATION>.` to form
##                          the full metric name. If `type` is `tag`, this column is
##                          considered a tag and applied to every
##                          metric collected by this particular query.
##                b. type - The submission method (gauge, monotonic_count, etc.).
##                          This can also be set to `tag` to tag each metric in the row
##                          with the name and value of the item in this column. You can
##                          use the `count` type to perform aggregation for queries that
##                          return multiple rows with the same or no tags.
##              Columns without a name are ignored. To skip a column, enter:
##                - {}
## 3. tags (optional) - A list of tags to apply to each metric.
#
# custom_queries:
#   - query: SELECT foo, COUNT(*) FROM table.events GROUP BY foo
#     columns:
#     - name: foo
#       type: tag
#     - name: event.total
#       type: gauge
#     tags:
#     - test:<INTEGRATION>

## @param tags - list of strings - optional
## A list of tags to attach to every metric and service check emitted by this instance.
##
## Learn more about tagging at https://docs.datadoghq.com/tagging
#
# tags:
#   - <KEY_1>:<VALUE_1>
#   - <KEY_2>:<VALUE_2>

## @param service - string - optional
## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
##
## Overrides any `service` defined in the `init_config` section.
#
# service: <SERVICE>

## @param min_collection_interval - number - optional - default: 15
## This changes the collection interval of the check. For more information, see:
## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
#
# min_collection_interval: 15

## @param empty_default_hostname - boolean - optional - default: false
## This forces the check to send metrics with no hostname.
##
## This is useful for cluster-level checks.
#
# empty_default_hostname: false

