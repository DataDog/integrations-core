name: Teradata
files:
- name: teradata.yaml
  options:
  - template: init_config
    options:
    - template: init_config/default
    - template: init_config/db
  - template: instances
    description: |
      Every instance is scheduled independent of the others.

      Note: All '%' characters must be escaped as '%%'
    options:
    - name: server
      required: true
      description: |
        The IP address or FQDN (fully qualified domain name) of the Teradata database server. If `use_odbc` is enabled,
        specify the DBC name.
      value:
        type: string
        example: <IP>
    - name: port
      description: |
        Specifies the Teradata database port number
      value:
        type: string
        default: 1025
    - name: username
      description: Username for the Datadog-Teradata check user.
      value:
        type: string
    - name: password
      description: Password for the Datadog-Teradata check user.
      value:
        type: string
    - name: account
      description: |
        The Datadog-Teradata check user's account string to use when logging into the database.
      value:
        type: string
    - name: database
      required: true
      description: |
        The name of the database to access.
      value:
        type: string
        example: system
    - name: collect_res_usage
      description: Collect metrics from the SPMA Resource Table
      value:
        type: boolean
        default: false
        example: true
    - name: jdbc_driver_path
      required: true
      description: |
        The full path to the Teradata JDBC Driver.
      value:
        type: string
        example: <DRIVER_PATH>.jar
    - name: use_tls
      description: Whether or not to use TLS for making connections to the Teradata database.
      value:
        type: boolean
        default: true
        example: false
    - name: https_port
      description: The port number used for making TLS connections to the Teradata database.
      value:
        type: string
        example: <PORT>
        default: 443
    - name: ssl_mode
      description: |
        The SSL mode used for making TLS connections to the Teradata database.
        Valid options are:
        * Allow
        * Disable
        * Prefer
        * Require
        * Verify-CA
        * Verify-Full
      value:
        type: string
        default: Prefer
    - name: ssl_protocol
      description: Specifies the TLS protocol for HTTPS/TLS connections. Currently, only TLSv1.2 is supported.
      value:
        type: string
        default: TLSv1.2
    - name: ssl_ca
      description: |
        The full path of the directory containing the root certificates for trusted CAs. If `ssl_mode` is not set to
        `Verify-CA` or `Verify-Full`, `ssl_ca` path or `ssl_ca_path` file name will be ignored.
      value:
        type: string
        example: /path/to/ssl_ca_dir
    - name: ssl_ca_path
      description: |
        The full path and name of a .pem file containing one or more certificates for
        trusted Root and Intermediate CAs. If `ssl_mode` is not set to `Verify-CA` or `Verify-Full`,
        `ssl_ca` path or `ssl_ca_path` file name will be ignored.
      value:
        type: string
        example: /path/to/ssl_ca_file/ca.pem
    - name: auth_mechanism
      description: |
        The authentication mechanism for connecting to the Teradata data source. If no value is provided, the defined
        local default mechanism is used, otherwise the default mechanism defined by the database is used.

        Valid options are:
        * TD2 - Selects Teradata 2 authentication mechanism. Username and password are required.
        * TDNEGO - Selects the Authentication Mechanism automatically based on the policy without user involvement.
        * LDAP - Selects LDAP as the authentication mechanism. Specify the username and password using the `auth_data`
                 configuration option.
        * KRB5 - Selects Kerberos as the authentication mechanism. Specify the username and password using the
                 `auth_data` configuration option.
        * JWT - Selects JWT as the authentication mechanism, available in Teradata Advanced SQL Engine 16.20+.
                Specify the JSON Web Token using the `auth_data` configuration option.
      value:
        type: string
    - name: auth_data
      description: |
        Specifies additional data needed by a logon authentication mechanism, such as a secure token,
        Distinguished Name, or a domain/realm name. `auth_data` values are specific to each logon mechanism.
        `auth_data` is not used with the TD2 mechanism.

        `auth_data` for the JWT mechanism contains token= followed by the JSON Web Token.
        For example:
        auth_data: token=dHkiOiJKV1QiLCJoI2tGIS42

        `auth_data` for the KRB5 mechanism can contain the Kerberos username, instance, realm, and password.
        Use is optional, the current user can logon without supplying this information.
        The sequence @@ always precedes the password.
        For example:
        auth_data: user1@ESDOM.ESDEV.TDAT@@mypassword

        `auth_data` for the LDAP mechanism can contain spaces, commas, and single quotes. When specifying
        this parameter for LDAP in a JDBC connection URL, the `auth_data` parameter should be enclosed in single quotes.
        Within the quoted string, a double-single quote can be used to represent an instance of a single quote.
        When specifying this parameter with a DataSource, no special processing is required.
        For example:
        auth_data: 'authcid=username password=userpassword'
        or
        auth_data: username@@userpassword
      value:
        type: string
  - template: instances/db
  - template: instances/default