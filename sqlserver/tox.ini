[tox]
minversion = 2.0
basepython = py38
envlist =
    py{27,38}-linux-{2017,2019}-{single,ha}
    py{27,38}-windows-{2016,2017,2019}-single

[testenv]
ensure_default_envdir = true
envdir =
    py27: {toxworkdir}/py27
    py38: {toxworkdir}/py38
dd_check_style = true
description =
    py{27,38}: e2e ready if platform_system != 'Windows'
usedevelop = true
platform =
    linux: linux|darwin
    windows: win32
deps =
    --extra-index-url https://datadoghq.dev/ci-wheels/bin
    -e../datadog_checks_base[deps,db,json]
    -rrequirements-dev.txt
passenv =
    # Windows requires a bunch of env vars to setup the OLEDB providers, just
    # passing everything should give us more resiliency.
    *
commands =
    pip install -r requirements.in
    pytest -v {posargs}
setenv =
    ODBCSYSINI = {toxinidir}/tests/odbc
    COMPOSE_FOLDER = compose
    ha: COMPOSE_FOLDER = compose-ha
    windows: COMPOSE_FOLDER = compose-windows
    linux-2017: SQLSERVER_IMAGE_TAG = 2017-CU24-ubuntu-16.04
    linux-2019: SQLSERVER_IMAGE_TAG = 2019-CU11-ubuntu-16.04
    windows-2016: SQLSERVER_BASE_IMAGE = datadog/docker-library:sqlserver_2016
    windows-2017: SQLSERVER_BASE_IMAGE = datadog/docker-library:sqlserver_2017
    windows-2019: SQLSERVER_BASE_IMAGE = datadog/docker-library:sqlserver_2019
    # we need SETUPTOOLS_USE_DISTUTILS=stdlib for setuptools versions 60+ in order for adodbapi to be able to install
    # correctly for python3 on windows. If not set installation fails with the following error:
    #    in ImportError: cannot import name 'build_py_2to3' from 'distutils.command.build_py'
    windows: SETUPTOOLS_USE_DISTUTILS = "stdlib"
