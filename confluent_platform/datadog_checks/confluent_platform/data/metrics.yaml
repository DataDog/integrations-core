# Default metrics collected by this check. You should not have to modify this.
jmx_metrics:
  # Kafka Broker Metrics (Yammer Metric Gauge)
  - include:
      bean:
        # Size of the request queue. A congested request queue will not be able to process incoming or outgoing requests
        - kafka.network:type=RequestChannel,name=RequestQueueSize
        # Average fraction of time the network processor threads are idle. Values are between 0 (all resources are used) and 1 (all resources are available)
        - kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent
        # Number of requests waiting in the fetch purgatory. This is high if consumers use a large value for fetch.wait.max.ms .
        - kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Fetch
        # Number of requests waiting in the producer purgatory. This should be non-zero when acks=all is used on the producer.
        - kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Produce
        # Maximum lag in messages between the follower and leader replicas. This is controlled by the `replica.lag.max.messages` config.
        - kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica
        # Number of leaders on this broker. This should be mostly even across all brokers. If not, set auto.leader.rebalance.enable to true on all brokers in the cluster.
        - kafka.server:type=ReplicaManager,name=LeaderCount
        # Number of partitions on this broker. This should be mostly even across all brokers.
        - kafka.server:type=ReplicaManager,name=PartitionCount
        # Number of partitions whose in-sync replicas count is less than minIsr.
        - kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount
        # Number of under-replicated partitions (| ISR | < | all replicas |). Alert if value is greater than 0.
        - kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions
      attribute:
        Value:
          alias: confluent.$domain.$type.$name
          metric_type: gauge

  # Kafka Broker Controller Metrics (Yammer Metric Gauge)
  - include:
      domain: kafka.controller
      bean:
        # Number of partitions that don’t have an active leader and are hence not writable or readable. Alert if value is greater than 0.
        - kafka.controller:type=KafkaController,name=OfflinePartitionsCount
        # Number of active controllers in the cluster. Alert if the aggregated sum across all brokers in the cluster is anything other than 1 because there should be exactly one controller per cluster.
        - kafka.controller:type=KafkaController,name=ActiveControllerCount
      attribute:
        Value:
          alias: confluent.$domain.$name
          metric_type: gauge

  # Kafka Broker Server Metrics Regex (Yammer Metric Gauge)
  - include:
      domain: kafka.server
      bean_regex:
        # Lag in number of messages per follower replica. This is useful to know if the replica is slow or has stopped replicating from the leader.
        # Pattern: kafka.server:type=FetcherLagMetrics,name=ConsumerLag,clientId=([-.\w]+),topic=([-.\w]+),partition=([0-9]+)
        - kafka\.server:type=FetcherLagMetrics,name=ConsumerLag,.*
      attribute:
        Value:
          alias: confluent.$domain.fetcher_lag.$name
          metric_type: gauge

  # Kafka Broker Cluster Metrics Regex (Yammer Metric Gauge)
  - include:
      domain: kafka.cluster
      bean_regex:
        # Number of partitions whose in-sync replicas count is less than minIsr. These partitions will be unavailable to producers who use acks=all.
        - kafka\.cluster:type=Partition,name=UnderMinIsr,.*
      attribute:
        Value:
          alias: confluent.$domain.$type.$name
          metric_type: gauge

  # Kafka Broker Topic Metrics (Yammer Metric Meter)
  - include:
      domain: kafka.server
      bean:
        # Aggregate incoming byte rate.
        - kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec
        # Aggregate outgoing byte rate.
        - kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec
        # Aggregate rejected byte rate.
        - kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec
        # Fetch request rate for requests that failed.
        - kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec
        # Produce request rate for requests that failed.
        - kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec
        # Aggregate incoming message rate.
        - kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec
        # Fetch request rate.
        - kafka.server:type=BrokerTopicMetrics,name=TotalFetchRequestsPerSec
        # Produce request rate.
        - kafka.server:type=BrokerTopicMetrics,name=TotalProduceRequestsPerSec
      attribute:
        # Count metric is monotonically increasing.
        Count:
          alias: confluent.$domain.topic.$name.rate
          metric_type: rate

  # Kafka Broker Topic Metrics Regex (Yammer Metric Meter)
  - include:
      domain: kafka.server
      bean:
        # Rate at which the pool of in-sync replicas (ISRs) expands.
        - kafka.server:type=ReplicaManager,name=IsrExpandsPerSec
        # Rate at which the pool of in-sync replicas (ISRs) shrinks.
        - kafka.server:type=ReplicaManager,name=IsrShrinksPerSec
      attribute:
        Count:
          alias: confluent.$domain.$type.$name.rate
          metric_type: rate
  - include:
      domain: kafka.server
      bean:
        # Average fraction of time the request handler threads are idle. Values are between 0 (all resources are used) and 1 (all resources are available)
        - kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent
      attribute:
        Count:
          alias: confluent.$domain.request_handler_pool.avg_idle_percent.rate
          metric_type: rate

  # Kafka Broker ZooKeeper Metrics (Yammer Metric Meter)
  - include:
      domain: kafka.server
      bean:
        # ZooKeeper client is currently disconnected from the ensemble. The client lost its previous connection to a server and it is currently trying to reconnect. The session is not necessarily expired.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperDisconnectsPerSec
        # The ZooKeeper session has expired. When a session expires, we can have leader changes and even a new controller.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperExpiresPerSec
        # ZooKeeper client is connected to the ensemble and ready to execute operations.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperSyncConnectsPerSec
        # An attempt to connect to the ensemble failed because the client has not provided correct credentials.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperAuthFailuresPerSec
        # The server the client is connected to is currently LOOKING, which means that it is neither FOLLOWING nor LEADING.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperReadOnlyConnectsPerSec
        # Client has successfully authenticated.
        - kafka.server:type=SessionExpireListener,name=ZooKeeperSaslAuthenticationsPerSec
      attribute:
        Count:
          alias: confluent.$domain.session.$name.rate
          metric_type: rate

  # Kafka Broker Request Metrics (Yammer Metric Meter)
  - include:
      domain: kafka.network
      bean_regex:
        # Request rate.
        - kafka.network:type=RequestMetrics,name=RequestsPerSec,request=(Produce|FetchConsumer|FetchFollower).*
      attribute:
        Count:
          alias: confluent.$domain.request.$name.rate
          metric_type: rate

  # Kafka Broker Controller Metrics (Yammer Metric Timer/Meter)
  - include:
      domain: kafka.controller
      bean:
        # Unclean leader election rate.
        - kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec
        # Leader election rate.
        - kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs
      attribute:
        Count:  # Timer and Meter
          alias: confluent.$domain.$name.rate
          metric_type: rate
        Mean: # Timer
          alias: confluent.$domain.$name.avg
          metric_type: gauge

  # Kafka Broker Log Metrics (Yammer Metric Timer)
  - include:
      domain: kafka.log
      bean:
        # Log flush rate and time.
        - kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs
      attribute:
        Count:
          alias: confluent.$domain.$name.rate
          metric_type: rate
        Mean:
          alias: confluent.$domain.$name.avg
          metric_type: gauge

  # Kafka Broker Request Metrics (Yammer Metric Histogram)
  - include:
      domain: kafka.network
      bean_regex:
        # Total time in ms to serve the specified request
        - kafka\.network:type=RequestMetrics,name=TotalTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
        # Time the request waits in the request queue
        - kafka\.network:type=RequestMetrics,name=RequestQueueTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
        # Time the request is processed at the leader
        - kafka\.network:type=RequestMetrics,name=LocalTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
        # Time the request waits for the follower. This is non-zero for produce requests when acks=all
        - kafka\.network:type=RequestMetrics,name=RemoteTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
        # Time the request waits in the response queue
        - kafka\.network:type=RequestMetrics,name=ResponseQueueTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
        # Time to send the response
        - kafka\.network:type=RequestMetrics,name=ResponseSendTimeMs,request=(Produce|FetchConsumer|FetchFollower).*
      attribute:
        Count:
          alias: confluent.$domain.request.$name.rate
          metric_type: rate
        Mean:
          alias: confluent.$domain.request.$name.avg
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Global Producer Metrics: https://docs.confluent.io/current/kafka/monitoring.html#global-connection-metrics
  #   - Confluent Replicator Important Producer Metrics: https://docs.confluent.io/current/multi-dc-deployments/replicator/replicator-monitoring.html#important-producer-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-metrics,client-id=.*
      attribute:
        # batch-size-avg and batch-size-max:
        # If they are consistently close to the configured batch.size, you may be producing as fast as possible and you’ll want to increase the batch size to get better batching.
        batch-size-avg:
          # The average number of bytes sent per partition per-request.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        batch-size-max:
          # The max number of bytes sent per partition per-request.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # io-ratio or io-wait-ratio:
        # If the io-ratio is low or io-wait-ratio is high, this means the producer is not very busy and is unlikely to be a bottleneck.
        io-ratio:
          # The fraction of time the I/O thread spent doing I/O
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-ratio:
          # The fraction of time the I/O thread spent waiting
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # outgoing-byte-rate:
        # Reports the producer throughput when writing to destination Kafka.
        outgoing-byte-rate:
          # The number of outgoing bytes sent to all servers per second
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # record-retry-rate and record-error-rate:
        # The average per-second number of retried record sends and failed record sends for a topic. High number of those can indicate issues writing to the destination cluster.
        record-retry-rate:
          # The average per-second number of retried record sends
          alias: confluent.$domain.$attribute
          metric_type: gauge
        record-error-rate:
          # The average per-second number of record sends that resulted in errors
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # produce-throttle-time-avg and produce-throttle-time-max:
        # Produce requests may be throttled to meet quotas configured on the destination cluster. If these are non-zero, it indicates that the destination brokers are slowing the producer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas.
        produce-throttle-time-avg:
          # The average time in ms a request was throttled by a broker
          alias: confluent.$domain.$attribute
          metric_type: gauge
        produce-throttle-time-max:
          # The maximum time in ms a request was throttled by a broker
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # waiting-threads and bufferpool-wait-time:
        # Non-zero values here indicate memory pressure. Connect producers can’t send events fast enough, resulting in full memory buffers that cause Replicator threads to block.
        waiting-threads:
          # The number of user threads blocked waiting for buffer memory to enqueue their records
          alias: confluent.$domain.$attribute
          metric_type: gauge
        bufferpool-wait-time-total:
          # The total time an appender waits for space allocation.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # Other useful metrics
        connection-count:
          # The current number of active connections.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        network-io-rate:
          # The number of network operations (reads or writes) on all connections per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-rate:
          # The number of requests sent per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        response-rate:
          # The number of responses received per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-latency-avg:
          # The average request latency in ms
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-time-ns-avg:
          # The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        connection-creation-rate:
          # New connections established per second in the window.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        connection-close-rate:
          # Connections closed per second in the window.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-time-ns-avg:
          # The average length of time for I/O per select call in nanoseconds.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        select-rate:
          # Number of times the I/O layer checked for new I/O to perform per second.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        incoming-byte-rate:
          # The average number of incoming bytes received per second from all servers.
          alias: confluent.$domain.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Global Producer Node Metrics: https://docs.confluent.io/current/kafka/monitoring.html#global-connection-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-node-metrics,client-id=.*,node-id=.*
      attribute:
        request-size-max:
          # The maximum size of any request sent in the window for a broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        request-size-avg:
          # The average size of all requests in the window for a broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        request-rate:
          # The average number of requests sent per second to the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        response-rate:
          # The average number of responses received per second from the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        incoming-byte-rate:
          # The average number of bytes received per second from the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge
        outgoing-byte-rate:
          # The average number of bytes sent per second to the broker.
          alias: confluent.$domain.node.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Global Producer Topic Metrics: https://docs.confluent.io/current/kafka/monitoring.html#per-topic-metrics
  - include:
      domain: kafka.producer
      bean_regex: kafka\.producer:type=producer-topic-metrics,client-id=.*,topic=.*
      attribute:
        byte-rate:
          # The average number of bytes sent per second for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-send-rate:
          # The average number of records sent per second for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        compression-rate:
          # The average compression rate of record batches for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-retry-rate:
          # The average per-second number of retried record sends for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge
        record-error-rate:
          # The average per-second number of record sends that resulted in errors for a topic.
          alias: confluent.$domain.topic.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Broker Global Consumer Metrics: https://docs.confluent.io/current/kafka/monitoring.html#consumer-metric-global-connection-metrics
  #   - Confluent Replicator Important Consumer Metrics: https://docs.confluent.io/current/multi-dc-deployments/replicator/replicator-monitoring.html#important-consumer-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-metrics,client-id=.*
      attribute:
        # io-ratio or io-wait-ratio:
        # If the io-ratio is low or io-wait-ratio is high, this means the consumer is not very busy and is unlikely to be a bottleneck.
        io-ratio:
          # The fraction of time the I/O thread spent doing I/O
          alias: confluent.$domain.$attribute
          metric_type: gauge
        io-wait-ratio:
          # The fraction of time the I/O thread spent waiting
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # bytes-consumed-rate:
        # Indicates throughput of Replicator reading events from origin cluster.
        bytes-consumed-rate:
          # Indicates throughput of Replicator reading events from origin cluster.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-size-avg and fetch-size-max:
        # If they are close to the configured maximum fetch size consistently, it means that Replicator is reading at the maximum possible rate. Increase the maximum fetch size and check if the throughput per task is improved.
        fetch-size-avg:
          # The average number of bytes fetched per request
          alias: confluent.$domain.$attribute
          metric_type: gauge
        fetch-size-max:
          # The maximum number of bytes fetched per request.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # records-lag-max:
        # The maximum lag in terms of number of records for any partition. An increasing value over time indicates that Replicator is not keeping up with the rate at which events are written to the origin cluster.
        records-lag-max:
          # The maximum lag in terms of number of records for any partition. An increasing value over time indicates that Replicator is not keeping up with the rate at which events are written to the origin cluster.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-rate, fetch-size-avg and fetch-size-max:
        # If fetch-rate is high but fetch-size-avg and fetch-size-max are not close to the maximum configured fetch size, perhaps the consumer is “churning”. Try increasing the fetch.min.bytes and fetch.max.wait configuration. This can help the consumer batch more efficiently.
        fetch-rate:
          # The number of fetch requests per second.
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # fetch-throttle-time-max and fetch-throttle-time-avg:
        # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
        fetch-throttle-time-max:
          # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
          alias: confluent.$domain.$attribute
          metric_type: gauge
        fetch-throttle-time-avg:
          # Fetch requests may be throttled to meet quotas configured on the origin cluster. If these are non-zero, it indicates that the origin brokers are slowing the consumer down and the quotas configuration should be reviewed. For more information on quotas see Enforcing Client Quotas
          alias: confluent.$domain.$attribute
          metric_type: gauge

        # metrics not listed in official doc, but might be useful to collect
        connection-count:
          # The current number of active connections.
          alias: confluent.$domain.$attribute
          metric_type: gauge
        network-io-rate:
          # The number of network operations (reads or writes) on all connections per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-rate:
          # The number of requests sent per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        response-rate:
          # The number of responses received per second
          alias: confluent.$domain.$attribute
          metric_type: gauge
        request-latency-avg:
          # The average request latency in ms
          alias: confluent.$domain.$attribute
          metric_type: gauge

  # Confluent Broker Consumer Fetch Metrics: https://docs.confluent.io/current/kafka/monitoring.html#fetch-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-fetch-manager-metrics,client-id=([-.\w]+)$
      attribute:
        records-lag-max:
          # The maximum lag in terms of number of records for any partition in this window. An increasing value over time is your best indication that the consumer group is not keeping up with the producers.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-size-avg:
          # The average number of bytes fetched per request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-size-max:
          # The average number of bytes fetched per request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        bytes-consumed-rate:
          # The average number of bytes consumed per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        records-per-request-avg:
          # The average number of records in each request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        records-consumed-rate:
          # The average number of records consumed per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-rate:
          # The number of fetch requests per second.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-latency-avg:
          # The average time taken for a fetch request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-latency-max:
          # The max time taken for a fetch request.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-throttle-time-avg:
          # The average throttle time in ms. When quotas are enabled, the broker may delay fetch requests in order to throttle a consumer which has exceeded its limit. This metric indicates how throttling time has been added to fetch requests on average.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge
        fetch-throttle-time-max:
          # The maximum throttle time in ms.
          alias: confluent.$domain.fetch.$attribute
          metric_type: gauge

  # Confluent Broker Consumer Fetch Topic Metrics: https://docs.confluent.io/current/kafka/monitoring.html#topic-level-fetch-metrics
  - include:
      domain: kafka.consumer
      bean_regex: kafka\.consumer:type=consumer-fetch-manager-metrics,client-id=.*,topic=.*
      attribute:
          fetch-size-avg:
            # The average number of bytes fetched per request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          fetch-size-max:
            # The maximum number of bytes fetched per request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          bytes-consumed-rate:
            # The average number of bytes consumed per second for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          records-per-request-avg:
            # The average number of records in each request for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge
          records-consumed-rate:
            # The average number of records consumed per second for a specific topic.
            alias: confluent.$domain.fetch_topic.$attribute
            metric_type: gauge


  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean: kafka.connect:type=connect-worker-metrics
      attribute:
        connector-count:
          # The number of connectors run in this worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-attempts-total:
          # The total number of connector startups that this worker has attempted.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-failure-percentage:
          # The average percentage of this worker's connectors starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-failure-total:
          # The total number of connector starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-success-percentage:
          # The average percentage of this worker's connectors starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-startup-success-total:
          # The total number of connector starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-count:
          # The number of tasks run in this worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-attempts-total:
          # The total number of task startups that this worker has attempted.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-failure-percentage:
          # The average percentage of this worker's tasks starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-failure-total:
          # The total number of task starts that failed.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-success-percentage:
          # The average percentage of this worker's tasks starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        task-startup-success-total:
          # The total number of task starts that succeeded.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      # Recent metrics merged on 3 Oct 2019: https://github.com/apache/kafka/pull/6843
      # Probably not present in the connector we are using for testing
      bean_regex: kafka\.connect:type=connect-worker-metrics,connector=.*
      attribute:
        connector-destroyed-task-count:
          # The number of destroyed tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-failed-task-count:
          # The number of failed tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-paused-task-count:
          # The number of paused tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-running-task-count:
          # The number of running tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-total-task-count:
          # The number of tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge
        connector-unassigned-task-count:
          # The number of unassigned tasks of the connector on the worker.
          alias: confluent.$domain.worker.$attribute
          metric_type: gauge

  # Kafka Connect Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean: kafka.connect:type=connect-worker-rebalance-metrics
      attribute:
        completed-rebalances-total:
          # The total number of rebalances completed by this worker.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        epoch:
          # The epoch or generation number of this worker.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalance-avg-time-ms:
          # The average time in milliseconds spent by this worker to rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalance-max-time-ms:
          # The maximum time in milliseconds spent by this worker to rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        rebalancing:
          # Whether this worker is currently rebalancing.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge
        time-since-last-rebalance-ms:
          # The time in milliseconds since this worker completed the most recent rebalance.
          alias: confluent.$domain.worker_rebalance.$attribute
          metric_type: gauge

  # Kafka Connect Task Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=connector-task-metrics,connector=.*,task=.*
      attribute:
        batch-size-avg:
          # The average size of the batches processed by the connector.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        batch-size-max:
          # The maximum size of the batches processed by the connector.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-avg-time-ms:
          # The average time in milliseconds taken by this task to commit offsets.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-failure-percentage:
          # The average percentage of this task's offset commit attempts that failed.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-max-time-ms:
          # The maximum time in milliseconds taken by this task to commit offsets.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        offset-commit-success-percentage:
          # The average percentage of this task's offset commit attempts that succeeded.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        pause-ratio:
          # The fraction of time this task has spent in the pause state.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge
        running-ratio:
          # The fraction of time this task has spent in the running state.
          alias: confluent.$domain.connector_task.$attribute
          metric_type: gauge

  # Kafka Connect Sink Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=sink-task-metrics,connector=.*,task=.*
      attribute:
        offset-commit-completion-rate:
          # The average per-second number of offset commit completions that were completed successfully.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-completion-total:
          # The total number of offset commit completions that were completed successfully.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-seq-no:
          # The current sequence number for offset commits.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-skip-rate:
          # The average per-second number of offset commit completions that were received too late and skipped/ignored.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        offset-commit-skip-total:
          # The total number of offset commit completions that were received too late and skipped/ignored.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        partition-count:
          # The number of topic partitions assigned to this task belonging to the named sink connector in this worker.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        put-batch-avg-time-ms:
          # The average time taken by this task to put a batch of sinks records.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        put-batch-max-time-ms:
          # The maximum time taken by this task to put a batch of sinks records.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count:
          # The number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count-avg:
          # The average number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-active-count-max:
          # The maximum number of records that have been read from Kafka but not yet completely committed/flushed/acknowledged by the sink task.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-lag-max:
          # The maximum lag in terms of number of records that the sink task is behind the consumer's position for any topic partitions.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-read-rate:
          # The average per-second number of records read from Kafka for this task belonging to the named sink connector in this worker. This is before transformations are applied.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-read-total:
          # The total number of records read from Kafka by this task belonging to the named sink connector in this worker, since the task was last restarted.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-send-rate:
          # The average per-second number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge
        sink-record-send-total:
          # The total number of records output from the transformations and sent/put to this task belonging to the named sink connector in this worker, since the task was last restarted.
          alias: confluent.$domain.sink_task.$attribute
          metric_type: gauge

  # Kafka Connect Source Tasks Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=source-task-metrics,connector=.*,task=.*
      attribute:
        poll-batch-avg-time-ms:
          # The average time in milliseconds taken by this task to poll for a batch of source records.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        poll-batch-max-time-ms:
          # The maximum time in milliseconds taken by this task to poll for a batch of source records.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count:
          # The number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count-avg:
          # The average number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-active-count-max:
          # The maximum number of records that have been produced by this task but not yet completely written to Kafka.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-poll-rate:
          # The average per-second number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-poll-total:
          # The total number of records produced/polled (before transformation) by this task belonging to the named source connector in this worker.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-write-rate:
          # The average per-second number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker. This is after transformations are applied and excludes any records filtered out by the transformations.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge
        source-record-write-total:
          # The number of records output from the transformations and written to Kafka for this task belonging to the named source connector in this worker, since the task was last restarted.
          alias: confluent.$domain.source_task.$attribute
          metric_type: gauge

  # Kafka Connect Task Error Metrics
  # https://kafka.apache.org/documentation/#connect_monitoring
  - include:
      domain: kafka.connect
      bean_regex: kafka\.connect:type=task-error-metrics,connector=.*,task=.*
      attribute:
        deadletterqueue-produce-failures:
          # The number of failed writes to the dead letter queue.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        deadletterqueue-produce-requests:
          # The number of attempted writes to the dead letter queue.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        last-error-timestamp:
          # The epoch timestamp when this task last encountered an error.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-errors-logged:
          # The number of errors that were logged.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-record-errors:
          # The number of record processing errors in this task.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-record-failures:
          # The number of record processing failures in this task.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-records-skipped:
          # The number of records skipped due to errors.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge
        total-retries:
          # The number of operations retried.
          alias: confluent.$domain.task_error.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Kafka REST: https://docs.confluent.io/current/kafka-rest/monitoring.html
  #   - Kafka Schema Registry: https://docs.confluent.io/current/schema-registry/monitoring.html
  - include:
      bean:
        - kafka.rest:type=jetty-metrics
        - kafka.schema.registry:type=jetty-metrics
      attribute:
        connections-active:
          # Total number of active TCP connections.
          alias: confluent.$domain.jetty.$attribute
          metric_type: gauge
        connections-opened-rate:
          # The average rate per second of opened TCP connections.
          alias: confluent.$domain.jetty.$attribute
          metric_type: gauge
        connections-closed-rate:
          # The average rate per second of closed TCP connections.
          alias: confluent.$domain.jetty.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Kafka REST: https://docs.confluent.io/current/kafka-rest/monitoring.html
  #   - Kafka Schema Registry: https://docs.confluent.io/current/schema-registry/monitoring.html
  - include:
      bean:
        - kafka.rest:type=jetty-metrics
        - kafka.schema.registry:type=jetty-metrics
      attribute:
        brokers.list.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.assign+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.assignment+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.commit-offsets+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.commit.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.committed-offsets+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.create+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.create.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.delete+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.delete.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.records.read-avro+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.records.read-binary+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.records.read-json+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.seek-to-beginning+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.seek-to-end+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.seek-to-offset+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.subscribe+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.subscription+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.topic.read-avro.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.topic.read-binary.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.topic.read-json.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        consumer.unsubscribe+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.consume-avro.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.consume-binary.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.consume-json.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.get+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.get.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-avro+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-avro.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-binary+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-binary.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-json+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partition.produce-json.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partitions.list+v2.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        partitions.list.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        root.get.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        root.post.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        topic.get.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        topic.produce-avro.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        topic.produce-binary.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        topic.produce-json.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge
        topics.list.request-error-rate:
          # The average number of requests per second that resulted in HTTP error responses
          alias: confluent.$domain.jersey.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Kafka Schema Registry: https://docs.confluent.io/current/schema-registry/monitoring.html
  - include:
      domain: kafka.schema.registry
      bean: kafka.schema.registry:type=master-slave-role
      attribute:
        master-slave-role:
          # The current role of this Schema Registry instance. A value of 1 indicates this instance is the primary, 0 indicates it is a secondary.
          alias: confluent.$domain.$type.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Replicator: https://docs.confluent.io/current/multi-dc-deployments/replicator/replicator-monitoring.html
  - include:
      domain: confluent.replicator
      bean_regex: confluent\.replicator:type=confluent-replicator-task-metrics,confluent-replicator-task=(.*),confluent-replicator-task-topic-partition=(.*)
      tags:
        task: $1
        partition: $2
      attribute:
        confluent-replicator-task-topic-partition-message-lag:
          # The number of messages that were produced to the origin cluster, but have not yet arrived to the destination cluster.
          alias: $domain.task.topic_partition_message_lag
          metric_type: gauge
        confluent-replicator-task-topic-partition-throughput:
          # The number of messages replicated per second from the source to destination cluster.
          alias: $domain.task.topic_partition_throughput
          metric_type: gauge
        confluent-replicator-task-topic-partition-latency:
          # The average time between message production to the source cluster and message production to the destination cluster.
          alias: $domain.task.topic_partition_latency
          metric_type: gauge

  # Components Metrics:
  #   - Confluent KSQL: https://docs.confluent.io/current/ksql/docs/installation/server-config/index.html#jmx-metrics
  - include:
      domain: io.confluent.ksql.metrics
      bean: io.confluent.ksql.metrics:type=_confluent-ksql-default_ksql-engine-query-stats
      attribute:
        bytes-consumed-total:
          # Number of bytes consumed across all queries.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        error-rate:
          # Number of messages that have been consumed but not processed across all queries.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-consumed-avg:
          # Average number of messages consumed by a query per second.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-consumed-per-sec:
          # Number of messages consumed per second across all queries.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-consumed-min:
          # Number of messages consumed per second for the query with the fewest messages consumed per second.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-consumed-max:
          # Number of messages consumed per second for the query with the most messages consumed per second.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-consumed-total:
          # Number of messages consumed across all queries.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        messages-produced-per-sec:
          # Number of messages produced per second across all queries.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        num-persistent-queries:
          # Number of persistent queries that are currently executing.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        num-active-queries:
          # Number of queries that are actively processing messages.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge
        num-idle-queries:
          # Number of queries with no messages available to process.
          alias: confluent.ksql.query_stats.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Streams Thread: https://docs.confluent.io/current/streams/monitoring.html#built-in-metrics
  - include:
      domain: kafka.streams
      bean_regex: kafka\.streams:type=stream-metrics,client-id=.*
      attribute:
        commit-latency-avg:
          # The average value of commit-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        commit-latency-max:
          # The maximum value of commit-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        commit-rate:
          # The average per-second number of commit calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        commit-total:
          # The total number of commit calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        poll-latency-avg:
          # The average value of poll-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        poll-latency-max:
          # The maximum value of poll-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        poll-rate:
          # The average per-second number of poll calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        poll-total:
          # The total number of poll calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        process-latency-avg:
          # The average value of process-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        process-latency-max:
          # The maximum value of process-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        process-rate:
          # The average per-second number of process calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        process-total:
          # The total number of process calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        punctuate-latency-avg:
          # The average value of punctuate-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        punctuate-latency-max:
          # The maximum value of punctuate-latency.
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        punctuate-rate:
          # The average per-second number of punctuate calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        punctuate-total:
          # The total number of punctuate calls
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        skipped-records-rate:
          # The average per-second number of skipped records
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        skipped-records-total:
          # The total number of skipped records
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        task-closed-rate:
          # The average per-second number of closed tasks
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        task-closed-total:
          # The total number of closed tasks
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        task-created-rate:
          # The average per-second number of newly created tasks
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge
        task-created-total:
          # The total number of newly created tasks
          alias: confluent.$domain.stream.$attribute
          metric_type: gauge

  # Components Metrics:
  #   - Confluent Stream Task: https://docs.confluent.io/current/streams/monitoring.html#task-metrics
  - include:
      domain: kafka.streams
      # Pattern: MBean: kafka.streams:type=stream-task-metrics,client-id=[threadId],task-id=[taskId]
      bean_regex: kafka\.streams:type=stream-task-metrics,.*
      attribute:
        commit-latency-avg:
          # The average value of commit-latency.
          alias: confluent.$domain.task.$attribute
          metric_type: gauge
        commit-rate:
          # The average per-second number of commit calls over all tasks
          alias: confluent.$domain.task.$attribute
          metric_type: gauge
        record-lateness-avg:
          # The average value of record-lateness.
          alias: confluent.$domain.task.$attribute
          metric_type: gauge

  # Confluent Stream Processor Node Metrics:
  # https://docs.confluent.io/current/streams/monitoring.html#processor-node-metrics
  - include:
      domain: kafka.streams
      # Pattern: kafka.streams:type=stream-processor-node-metrics,client-id=[threadId],task-id=[taskId],processor-node-id=[processorNodeId]
      bean_regex: kafka\.streams:type=stream-processor-node-metrics,.*
      attribute:
        # The average execution time in ns, for the respective operation.
        process-latency-avg:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The average number of respective operations per second.
        process-rate:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The total number of respective operations.
        process-total:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The average rate of records being forwarded downstream, from source nodes only, per second. This metric can be used to understand how fast the library is consuming from source topics.
        forward-rate:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The total number of records being forwarded downstream, from source nodes only.
        forward-total:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The rate at which records that have been emitted downstream from suppression operation nodes. Compare with the process-rate metric to determine how many updates are being suppressed.
        suppression-emit-rate:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
        # The total number of records that have been emitted downstream from suppression operation nodes. Compare with the process-total metric to determine how many updates are being suppressed.
        suppression-emit-total:
          alias: confluent.$domain.processor_node.$attribute
          metric_type: gauge
