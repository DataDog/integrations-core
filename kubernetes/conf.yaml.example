init_config:

instances:
  # The kubernetes check retrieves metrics from cadvisor running under kubelet on each node.
  # It also queries kubelet for its health and the list of local-running pods, and (optionally)
  # the apiserver for services and events
  #
  # By default we assume we're running under docker and
  # that the kubelet read-only port with no auth is enabled.
  #
  # In this case we will use the address of the default router to reach the kubelet and cadvisor APIs
  # unless the environment variable KUBERNETES_KUBELET_HOST is found. You can set this variable to
  # spec.nodeName (If your node name can be resolved by pods) or status.hostIP (for Kubernetes 1.7+)
  # through the downward API. See
  # https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/
  #
  # To enable Kubernetes State Metrics, please refer to kubernetes_states integration.
  # For more information,
  # please consult http://docs.datadoghq.com/integrations/kubernetes/#kubernetes-state-metrics
  # and https://github.com/DataDog/integrations-core/ on the kubernetes_state directory.
  #
  # If the read-only endpoint is disabled, the check will query kubelet over HTTPS
  #
  # To override this behavior, e.g. in the case of a standalone cadvisor instance, use the following:
  #
  # host: localhost
  # port: 4194
  # method: http

  # cAdvisor port
 - port: 4194
  #
  # cAdvisor host
  # host: localhost
  #
  # kubelet port. It needs to be set if you are not using a default one (10250 or 10255)
  # kubelet_port: 10255
  #
  # apiserver url for cluster-level queries. If not configured here, the KUBERNETES_SERVICE_HOST
  # and KUBERNETES_SERVICE_PORT environment variables will be used
  #
  # api_server_url: https://kubernetes:443

  # Client Authentication against the apiserver and kubelet
  #
  # By default the agent authenticates against the apiserver and kubelet with its service account
  # bearer token. If you want to specify its path, set the following option. If X509 client certificates
  # are set, either for the kubelet or apiserver, they will be used instead. The recommended way to expose
  # these files to the agent is by using Kubernetes Secrets.
  #
  # bearer_token_path: /var/run/secrets/kubernetes.io/serviceaccount/token
  #
  # apiserver_client_crt: /path/to/client.crt
  # apiserver_client_key: /path/to/client.key
  #
  # kubelet_client_crt: /path/to/client.crt
  # kubelet_client_key: /path/to/client.key

  # Server Authentication for apiserver and kubelet
  #
  # Similarly we use the default CA cert of the agent's service account to verify the
  # apiserver's identity, but custom ones can be specified here.
  #
  # apiserver_ca_cert: /path/to/cacert.crt
  # kubelet_cert: /path/to/ca.pem
  #
  # The default for kubelet traffic is to try and use the read-only port that doesn't require TLS
  # and to fall back to the HTTPS API with simple TLS validation. Providing a cert forces TLS validation on.
  # Explicitly disabling tls_verify should be used with caution:
  # if an attacker sniffs the agent requests they will see the agent's service account bearer token.
  #
  # kubelet_tls_verify: True

  # collect_events controls whether the agent should fetch events from the kubernetes API and
  # ingest them in Datadog. To avoid duplicates, only one agent at a time across the entire
  # cluster should have this feature enabled. To enable the feature, set the parameter to `true`.
  #
  # collect_events: false
  #
  # Matching the pods to Kubernetes services requires to retrieve events regularly.
  # To reduce the traffic to the apiserver, we only query them every 5 minutes, adding a delay
  # in pod -> service matching. You can configure it below (in seconds) or disable kube_service
  # tagging completely
  #
  # collect_service_tags: true
  # service_tag_update_freq: 300
  #
  # The namespaces for which events should be collected.
  # If not modified, the 'default' namespace will be used.
  #
  # namespaces:
  #  - default

  # The regexp used to select namespaces for which events should be collected.
  # The matched namespaces will be added to the "namespaces" list.
  # If empty, regexp selection will be ignored.
  #
  # namespace_name_regexp:

  # Node labels that should be collected and their name in host tags. Off by default, but some of them are redundant
  # with metadata collected by cloud provider crawlers (AWS, GCE, Azure)
  #
  # node_labels_to_host_tags:
  #   kubernetes.io/hostname: nodename
  #   beta.kubernetes.io/os: os

  # use_histogram controls whether we send detailed metrics, i.e. one per container.
  # When false, we send detailed metrics corresponding to individual containers, tagging by container id
  # to keep them unique.
  # When true, we aggregate data based on container image.
  #
  # use_histogram: false
  #
  # We can define a whitelist of patterns that permit publishing raw metrics.
  # enabled_rates:
  #   - cpu.*
  #   - network.*
  #
  # enabled_gauges:
  #   - filesystem.*
  #
  # Prefix to use when converting pod labels to metric tags, can be made empty with ""
  # label_to_tag_prefix: "kube_"
  #
  # Custom tags that should be applied to kubernetes metrics
  # tags:
  #   - optional_tag1
  #   - optional_tag2
