init_config:
  ## @param global_custom_queries - list - optional
  ## See `custom_queries` defined below.
  ##
  ## Global custom queries can be applied to all instances using the
  ## `use_global_custom_queries` setting at the instance level.
  #
  # global_custom_queries:
  #   - query: <QUERY>
  #     columns: <COLUMNS>
  #     tags: <TAGS>

instances:

    ## @param db - string - required
    ## The name of the database to establish a connection with.
    #
  - db: <DATABASE_NAME>

    ## @param server - string - required
    ## The hostname used to connect to the database.
    #
    server: <SERVER>

    ## @param port - integer - required - default: 5433
    ## The port used to connect to the database.
    #
    port: 5433

    ## @param username - string - required
    ## The database user to authenticate as.
    #
    username: <USERNAME>

    ## @param password - string - optional
    ## The password of `username`.
    #
    # password: <PASSWORD>

    ## @param backup_servers - list - optional
    ## A list of backup servers to try if the primary `server` is unreachable.
    ## If no port is specified, `port` will be used.
    #
    # backup_servers:
    #   - server: <SERVER_1>
    #     port: <PORT_1>
    #   - server: <SERVER_2>
    #     port: <PORT_2>

    ## @param connection_load_balance - boolean - optional - default: false
    ## Whether or not to enable connection load balancing. This helps automatically spread
    ## the overhead caused by client connections across clusters by having hosts redirect
    ## client connections to other hosts. If the server disables connection load balancing,
    ## load balancing requests will be ignored.
    #
    # connection_load_balance: false

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to `server` or `backup_servers`.
    #
    # timeout: 10

    ## @param tls_verify - boolean - optional - default: false
    ## Whether or not to connect securely using TLS. The server must also support this.
    #
    # tls_verify: false

    ## @param validate_hostname - boolean - optional - default: true
    ## Whether or not to verify the TLS certificate was issued for `server` if `tls_verify` is true.
    #
    # validate_hostname: true

    ## @param cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificateâ€™s authenticity for
    ## use when connecting to `server`. It may also contain an unencrypted private key to use.
    ##
    ## Setting this implicitly sets `tls_verify` to true.
    #
    # cert: <CERT_PATH>

    ## @param private_key - string - optional
    ## The unencrypted private key to use for `cert` when connecting to `server`. This is
    ## required if `cert` is set and it does not already contain a private key.
    #
    # private_key: <PRIVATE_KEY_PATH>

    ## @param ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    ##
    ## Setting this implicitly sets `tls_verify` to true.
    #
    # ca_cert: <CA_CERT_PATH>

    ## @param tags - list of key:value strings - optional
    ## List of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param use_global_custom_queries - string - optional - default: true
    ## How `global_custom_queries` should be used for this instance. There are 3 options:
    ##
    ## 1. true - `global_custom_queries` will override `custom_queries`
    ## 2. false - `custom_queries` will override `global_custom_queries`
    ## 2. extend - `global_custom_queries` will be used in addition to any `custom_queries`
    #
    # use_global_custom_queries: true

    ## @param custom_queries - list - optional
    ## Each query must have 2 fields:
    ##
    ## 1. query - This is the SQL to execute. It can be a simple statement or a multi-line script.
    ## 2. columns - This is a list representing each column, ordered sequentially from left to right.
    ##              The number of columns must equal the number of columns returned in the query.
    ##              There are 2 required pieces of data:
    ##                a. name - This is the suffix to append to `vertica.` in order to form
    ##                          the full metric name. If `type` is `tag`, this column will
    ##                          instead be considered a tag and will be applied to every
    ##                          metric collected by this particular query.
    ##                b. type - This is the submission method (gauge, monotonic_count, etc.).
    ##                          This can also be set to `tag` to tag each metric in the row
    ##                          with the name and value of the item in this column. You can
    ##                          use the `count` type to perform aggregation for queries that
    ##                          return multiple rows with the same or no tags.
    ## 3. tags (optional) - A list of tags to apply to each metric.
    #
    # custom_queries:
    #   - query: |  # Use the pipe if you require a multi-line script.
    #       SELECT force_outer,
    #              table_name
    #       FROM v_catalog.tables
    #     columns:
    #       # Columns without a name are ignored, put this for any column you wish to skip:
    #       # - {}
    #       - name: table.force_outer
    #         type: gauge
    #       - name: table_name
    #         type: tag
    #     tags:
    #       - test:vertica

## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel_path if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - source: vertica
#     type: file
#     path: /catalog-path/database-name/node-name_catalog/vertica.log
#     service: vertica
