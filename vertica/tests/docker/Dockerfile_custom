ARG VERTICA_VERSION="latest"
FROM opentext/vertica-k8s:${VERTICA_VERSION}

# --- become root for package install ---
USER 0

# Install tzdata using whatever package manager exists in the base
RUN set -eux; \
  if command -v microdnf >/dev/null 2>&1; then microdnf install -y tzdata && microdnf clean all; \
  elif command -v dnf >/dev/null 2>&1; then dnf install -y tzdata && dnf clean all; \
  elif command -v apt-get >/dev/null 2>&1; then apt-get update && apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*; \
  elif command -v apk >/dev/null 2>&1; then apk add --no-cache tzdata; \
  else echo "WARN: no known package manager; skipping tzdata" >&2; fi

# Put the entrypoint in a stable path
COPY ./custom-entrypoint.sh /usr/local/bin/custom-entrypoint.sh
RUN chmod 755 /usr/local/bin/custom-entrypoint.sh

# Prune extension packages only if the directory exists (don’t fail if the var/dir isn’t there)
RUN set -eux; \
  if [ -n "${VERTICA_OPT_DIR:-}" ] && [ -d "${VERTICA_OPT_DIR}/packages" ]; then rm -rf "${VERTICA_OPT_DIR}/packages"; fi

# --- switch back to the image's runtime user ---
# The Vertica k8s image typically runs non-root; your logs showed 'daemon'
# If your base uses a different user (e.g. dbadmin), set it here instead.
USER daemon

# Use exec form; the script itself handles tz + startup
ENTRYPOINT ["/bin/bash","-lc","/usr/local/bin/custom-entrypoint.sh"]