## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

  -
    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

    ## @param api_url - string - required
    ## URL of the Cloud Controller API.
    #
    api_url: <API_URL>

    ## @param uaa_url - string - required
    ## URL of the UAA server.
    #
    uaa_url: <UAA_URL>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param client_id - string - required
    ## `client_id` used to authenticate with UAA and obtain an oauth token
    ## for communication with the Cloud Controller API.
    #
    client_id: <CLIENT_ID>

    ## @param client_secret - string - required
    ## `client_secret` used to authenticate with UAA and obtain an oauth token
    ## for communication with the Cloud Controller API.
    #
    client_secret: <CLIENT_SECRET>

    ## @param api_version - string - optional - default: v3
    ## Version of the Cloud Controller API to target. Choose between `v2` and `v3`.
    ## Depending on your Cloud Controller version, not all resources are available in `v3`.
    ## Switch to `v2` if that is the case.
    #
    # api_version: v3

    ## @param event_filter - list of strings - optional - default: []
    ## A list of the types of audit events to fetch.
    ## See https://docs.cloudfoundry.org/running/managing-cf/audit-events.html#types for detailed information.
    #
    # event_filter:
    #   - audit.app.restage
    #   - audit.app.update
    #   - audit.app.create

    ## @param results_per_page - integer - optional - default: 2000
    ## Maximum number of event results per request to the API. Maximum is 5000 for v3, and 100 for v2.
    #
    # results_per_page: <RESULTS_PER_PAGE>
