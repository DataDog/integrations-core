# HELP kube_hpa_metadata_generation The generation observed by the HorizontalPodAutoscaler controller.
# TYPE kube_hpa_metadata_generation gauge
kube_hpa_metadata_generation{hpa="hpa1",namespace="ns1"} 2
# HELP kube_hpa_spec_max_replicas Upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
# TYPE kube_hpa_spec_max_replicas gauge
kube_hpa_spec_max_replicas{hpa="hpa1",namespace="ns1"} 4
# HELP kube_hpa_spec_min_replicas Lower limit for the number of pods that can be set by the autoscaler, default 1.
# TYPE kube_hpa_spec_min_replicas gauge
kube_hpa_spec_min_replicas{hpa="hpa1",namespace="ns1"} 2
# HELP kube_hpa_status_current_replicas Current number of replicas of pods managed by this autoscaler.
# TYPE kube_hpa_status_current_replicas gauge
kube_hpa_status_current_replicas{hpa="hpa1",namespace="ns1"} 2
# HELP kube_hpa_status_desired_replicas Desired number of replicas of pods managed by this autoscaler.
# TYPE kube_hpa_status_desired_replicas gauge
kube_hpa_status_desired_replicas{hpa="hpa1",namespace="ns1"} 2
# HELP kube_cronjob_created Unix creation timestamp
# TYPE kube_cronjob_created gauge
kube_cronjob_created{cronjob="hello",namespace="default"} 1.509978394e+09
# HELP kube_cronjob_info Info about cronjob.
# TYPE kube_cronjob_info gauge
kube_cronjob_info{concurrency_policy="Allow",cronjob="hello",namespace="default",schedule="*/1 * * * *"} 1
# HELP kube_cronjob_next_schedule_time Next time the cronjob should be scheduled. The time after lastScheduleTime, or after the cron job's creation time if it's never been scheduled. Use this to determine if the job is delayed.
# TYPE kube_cronjob_next_schedule_time gauge
kube_cronjob_next_schedule_time{cronjob="hello",namespace="default"} 1.50999852e+09
# HELP kube_cronjob_spec_suspend Suspend flag tells the controller to suspend subsequent executions.
# TYPE kube_cronjob_spec_suspend gauge
kube_cronjob_spec_suspend{cronjob="hello",namespace="default"} 0
# HELP kube_cronjob_status_active Active holds pointers to currently running jobs.
# TYPE kube_cronjob_status_active gauge
kube_cronjob_status_active{cronjob="hello",namespace="default"} 0
# HELP kube_cronjob_status_last_schedule_time LastScheduleTime keeps information of when was the last time the job was successfully scheduled.
# TYPE kube_cronjob_status_last_schedule_time gauge
kube_cronjob_status_last_schedule_time{cronjob="hello",namespace="default"} 1.50999846e+09
# HELP kube_statefulset_status_replicas The number of replicas per StatefulSet.
# TYPE kube_statefulset_status_replicas gauge
kube_statefulset_status_replicas{namespace="ns3",statefulset="statefulset3"} 7
# HELP kube_statefulset_status_replicas_current The number of current replicas per StatefulSet.
# TYPE kube_statefulset_status_replicas_current gauge
kube_statefulset_status_replicas_current{namespace="ns2",statefulset="statefulset2"} 2
# HELP kube_statefulset_status_replicas_ready The number of ready replicas per StatefulSet.
# TYPE kube_statefulset_status_replicas_ready gauge
kube_statefulset_status_replicas_ready{namespace="ns2",statefulset="statefulset2"} 5
# HELP kube_statefulset_status_replicas_updated The number of updated replicas per StatefulSet.
# TYPE kube_statefulset_status_replicas_updated gauge
kube_statefulset_status_replicas_updated{namespace="ns2",statefulset="statefulset2"} 3
# HELP kube_daemonset_created Unix creation timestamp
# TYPE kube_daemonset_created gauge
kube_daemonset_created{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 1.509985033e+09
# HELP kube_daemonset_metadata_generation Sequence number representing a specific generation of the desired state.
# TYPE kube_daemonset_metadata_generation gauge
kube_daemonset_metadata_generation{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 1
# HELP kube_daemonset_status_current_number_scheduled The number of nodes running at least one daemon pod and are supposed to.
# TYPE kube_daemonset_status_current_number_scheduled gauge
kube_daemonset_status_current_number_scheduled{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 1
# HELP kube_daemonset_status_desired_number_scheduled The number of nodes that should be running the daemon pod.
# TYPE kube_daemonset_status_desired_number_scheduled gauge
kube_daemonset_status_desired_number_scheduled{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 1
# HELP kube_daemonset_status_number_misscheduled The number of nodes running a daemon pod but are not supposed to.
# TYPE kube_daemonset_status_number_misscheduled gauge
kube_daemonset_status_number_misscheduled{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 0
# HELP kube_daemonset_status_number_ready The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
# TYPE kube_daemonset_status_number_ready gauge
kube_daemonset_status_number_ready{daemonset="jaundiced-numbat-dd-k8state",namespace="default"} 1
# HELP kube_deployment_created Unix creation timestamp
# TYPE kube_deployment_created gauge
kube_deployment_created{deployment="failingtest",namespace="default"} 1.510059371e+09
kube_deployment_created{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1.509985033e+09
kube_deployment_created{deployment="kube-dns",namespace="kube-system"} 1.508406457e+09
kube_deployment_created{deployment="tiller-deploy",namespace="kube-system"} 1.508947465e+09
# HELP kube_deployment_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_deployment_labels gauge
kube_deployment_labels{deployment="failingtest",label_app="failingtest",namespace="default"} 1
kube_deployment_labels{deployment="tiller-deploy",label_app="helm",label_name="tiller",namespace="kube-system"} 1
kube_deployment_labels{deployment="kube-dns",label_addonmanager_kubernetes_io_mode="Reconcile",label_k8s_app="kube-dns",label_version="v20",namespace="kube-system"} 1
kube_deployment_labels{deployment="jaundiced-numbat-kube-state-metrics",label_app="kube-state-metrics",label_chart="kube-state-metrics-0.3.1",label_heritage="Tiller",label_release="jaundiced-numbat",namespace="default"} 1
# HELP kube_deployment_metadata_generation Sequence number representing a specific generation of the desired state.
# TYPE kube_deployment_metadata_generation gauge
kube_deployment_metadata_generation{deployment="failingtest",namespace="default"} 1
kube_deployment_metadata_generation{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_metadata_generation{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_metadata_generation{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_spec_paused Whether the deployment is paused and will not be processed by the deployment controller.
# TYPE kube_deployment_spec_paused gauge
kube_deployment_spec_paused{deployment="failingtest",namespace="default"} 0
kube_deployment_spec_paused{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 0
kube_deployment_spec_paused{deployment="kube-dns",namespace="kube-system"} 0
kube_deployment_spec_paused{deployment="tiller-deploy",namespace="kube-system"} 0
# HELP kube_deployment_spec_replicas Number of desired pods for a deployment.
# TYPE kube_deployment_spec_replicas gauge
kube_deployment_spec_replicas{deployment="failingtest",namespace="default"} 1
kube_deployment_spec_replicas{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_spec_replicas{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_spec_replicas{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_spec_strategy_rollingupdate_max_unavailable Maximum number of unavailable replicas during a rolling update of a deployment.
# TYPE kube_deployment_spec_strategy_rollingupdate_max_unavailable gauge
kube_deployment_spec_strategy_rollingupdate_max_unavailable{deployment="failingtest",namespace="default"} 1
kube_deployment_spec_strategy_rollingupdate_max_unavailable{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_spec_strategy_rollingupdate_max_unavailable{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_spec_strategy_rollingupdate_max_unavailable{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_status_observed_generation The generation observed by the deployment controller.
# TYPE kube_deployment_status_observed_generation gauge
kube_deployment_status_observed_generation{deployment="failingtest",namespace="default"} 1
kube_deployment_status_observed_generation{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_status_observed_generation{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_status_observed_generation{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_status_replicas The number of replicas per deployment.
# TYPE kube_deployment_status_replicas gauge
kube_deployment_status_replicas{deployment="failingtest",namespace="default"} 1
kube_deployment_status_replicas{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_status_replicas{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_status_replicas{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_status_replicas_available The number of available replicas per deployment.
# TYPE kube_deployment_status_replicas_available gauge
kube_deployment_status_replicas_available{deployment="failingtest",namespace="default"} 0
kube_deployment_status_replicas_available{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_status_replicas_available{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_status_replicas_available{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_deployment_status_replicas_unavailable The number of unavailable replicas per deployment.
# TYPE kube_deployment_status_replicas_unavailable gauge
kube_deployment_status_replicas_unavailable{deployment="failingtest",namespace="default"} 1
kube_deployment_status_replicas_unavailable{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 0
kube_deployment_status_replicas_unavailable{deployment="kube-dns",namespace="kube-system"} 0
kube_deployment_status_replicas_unavailable{deployment="tiller-deploy",namespace="kube-system"} 0
# HELP kube_deployment_status_replicas_updated The number of updated replicas per deployment.
# TYPE kube_deployment_status_replicas_updated gauge
kube_deployment_status_replicas_updated{deployment="failingtest",namespace="default"} 1
kube_deployment_status_replicas_updated{deployment="jaundiced-numbat-kube-state-metrics",namespace="default"} 1
kube_deployment_status_replicas_updated{deployment="kube-dns",namespace="kube-system"} 1
kube_deployment_status_replicas_updated{deployment="tiller-deploy",namespace="kube-system"} 1
# HELP kube_endpoint_address_available Number of addresses available in endpoint.
# TYPE kube_endpoint_address_available gauge
kube_endpoint_address_available{endpoint="test",namespace="default"} 0
# HELP kube_endpoint_address_not_ready Number of addresses not ready in endpoint
# TYPE kube_endpoint_address_not_ready gauge
kube_endpoint_address_not_ready{endpoint="test",namespace="default"} 0
# HELP kube_endpoint_created Unix creation timestamp
# TYPE kube_endpoint_created gauge
kube_endpoint_created{endpoint="test",namespace="default"} 1.513861395e+09
# HELP kube_job_complete The job has completed its execution.
# TYPE kube_job_complete gauge
kube_job_complete{condition="false",job="hello-1509998340",namespace="default"} 0
kube_job_complete{condition="false",job="hello-1509998400",namespace="default"} 0
kube_job_complete{condition="false",job="hello-1509998460",namespace="default"} 0
kube_job_complete{condition="true",job="hello-1509998340",namespace="default"} 1
kube_job_complete{condition="true",job="hello-1509998400",namespace="default"} 1
kube_job_complete{condition="true",job="hello-1509998460",namespace="default"} 1
kube_job_complete{condition="unknown",job="hello-1509998340",namespace="default"} 0
kube_job_complete{condition="unknown",job="hello-1509998400",namespace="default"} 0
kube_job_complete{condition="unknown",job="hello-1509998460",namespace="default"} 0
# HELP kube_job_created Unix creation timestamp
# TYPE kube_job_created gauge
kube_job_created{job="hello-1509998340",namespace="default"} 1.509998347e+09
kube_job_created{job="hello-1509998400",namespace="default"} 1.509998407e+09
kube_job_created{job="hello-1509998460",namespace="default"} 1.509998467e+09
# HELP kube_job_info Information about job.
# TYPE kube_job_info gauge
kube_job_info{job="hello-1509998340",namespace="default"} 1
kube_job_info{job="hello-1509998400",namespace="default"} 1
kube_job_info{job="hello-1509998460",namespace="default"} 1
# HELP kube_job_spec_completions The desired number of successfully finished pods the job should be run with.
# TYPE kube_job_spec_completions gauge
kube_job_spec_completions{job="hello-1509998340",namespace="default"} 1
kube_job_spec_completions{job="hello-1509998400",namespace="default"} 1
kube_job_spec_completions{job="hello-1509998460",namespace="default"} 1
# HELP kube_job_spec_parallelism The maximum desired number of pods the job should run at any given time.
# TYPE kube_job_spec_parallelism gauge
kube_job_spec_parallelism{job="hello-1509998340",namespace="default"} 1
kube_job_spec_parallelism{job="hello-1509998400",namespace="default"} 1
kube_job_spec_parallelism{job="hello-1509998460",namespace="default"} 1
# HELP kube_job_status_active The number of actively running pods.
# TYPE kube_job_status_active gauge
kube_job_status_active{job="hello-1509998340",namespace="default"} 0
kube_job_status_active{job="hello-1509998400",namespace="default"} 0
kube_job_status_active{job="hello-1509998460",namespace="default"} 0
# HELP kube_job_status_completion_time CompletionTime represents time when the job was completed.
# TYPE kube_job_status_completion_time counter
kube_job_status_completion_time{job="hello-1509998340",namespace="default"} 1.509998351e+09
kube_job_status_completion_time{job="hello-1509998400",namespace="default"} 1.509998411e+09
kube_job_status_completion_time{job="hello-1509998460",namespace="default"} 1.509998472e+09
# HELP kube_job_status_failed The number of pods which reached Phase Failed.
# TYPE kube_job_status_failed gauge
kube_job_status_failed{job="hello-1509998340",namespace="default"} 0
kube_job_status_failed{job="hello-1509998400",namespace="default"} 0
kube_job_status_failed{job="hello-1509998460",namespace="default"} 0
kube_job_status_failed{job_name="hello2-1509998340",namespace="default"} 0
kube_job_status_failed{job_name="hello2-1509998400",namespace="default"} 0
kube_job_status_failed{job_name="hello2-1509998460",namespace="default"} 0
kube_job_status_failed{job_name="test",namespace="default"} 0
# HELP kube_job_status_start_time StartTime represents time when the job was acknowledged by the Job Manager.
# TYPE kube_job_status_start_time counter
kube_job_status_start_time{job="hello-1509998340",namespace="default"} 1.509998347e+09
kube_job_status_start_time{job="hello-1509998400",namespace="default"} 1.509998407e+09
kube_job_status_start_time{job="hello-1509998460",namespace="default"} 1.509998467e+09
# HELP kube_job_status_succeeded The number of pods which reached Phase Succeeded.
# TYPE kube_job_status_succeeded gauge
kube_job_status_succeeded{job="hello-1509998340",namespace="default"} 1
kube_job_status_succeeded{job="hello-1509998400",namespace="default"} 1
kube_job_status_succeeded{job="hello-1509998460",namespace="default"} 1
kube_job_status_succeeded{job_name="hello2-1509998340",namespace="default"} 1
kube_job_status_succeeded{job_name="hello2-1509998400",namespace="default"} 1
kube_job_status_succeeded{job_name="hello2-1509998460",namespace="default"} 1
kube_job_status_succeeded{job_name="test",namespace="default"} 1
# HELP kube_namespace_created Unix creation timestamp
# TYPE kube_namespace_created gauge
kube_namespace_created{namespace="default"} 1.508406437e+09
kube_namespace_created{namespace="kube-public"} 1.508406438e+09
kube_namespace_created{namespace="kube-system"} 1.508406438e+09
kube_namespace_created{namespace="test"} 1.508414419e+09
# HELP kube_namespace_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_namespace_labels gauge
kube_namespace_labels{namespace="default"} 1
kube_namespace_labels{namespace="kube-public"} 1
kube_namespace_labels{namespace="kube-system"} 1
kube_namespace_labels{namespace="test"} 1
# HELP kube_namespace_status_phase kubernetes namespace status phase.
# TYPE kube_namespace_status_phase gauge
kube_namespace_status_phase{namespace="default",phase="Active"} 1
kube_namespace_status_phase{namespace="default",phase="Terminating"} 0
kube_namespace_status_phase{namespace="kube-public",phase="Active"} 1
kube_namespace_status_phase{namespace="kube-public",phase="Terminating"} 0
kube_namespace_status_phase{namespace="kube-system",phase="Active"} 1
kube_namespace_status_phase{namespace="kube-system",phase="Terminating"} 0
kube_namespace_status_phase{namespace="test",phase="Active"} 1
kube_namespace_status_phase{namespace="test",phase="Terminating"} 0
# HELP kube_node_created Unix creation timestamp
# TYPE kube_node_created gauge
kube_node_created{node="minikube"} 1.508406442e+09
# HELP kube_node_info Information about a cluster node.
# TYPE kube_node_info gauge
kube_node_info{container_runtime_version="docker://1.12.6",kernel_version="4.9.13",kubelet_version="v1.8.0",kubeproxy_version="v1.8.0",node="minikube",os_image="Buildroot 2017.02",provider_id=""} 1
# HELP kube_node_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_node_labels gauge
kube_node_labels{label_beta_kubernetes_io_arch="amd64",label_beta_kubernetes_io_os="linux",label_kubernetes_io_hostname="minikube",node="minikube"} 1
# HELP kube_node_spec_unschedulable Whether a node can schedule new pods.
# TYPE kube_node_spec_unschedulable gauge
kube_node_spec_unschedulable{node="minikube"} 0
# HELP kube_node_status_allocatable_cpu_cores The CPU resources of a node that are available for scheduling.
# TYPE kube_node_status_allocatable_cpu_cores gauge
kube_node_status_allocatable_cpu_cores{node="minikube"} 2
# HELP kube_node_status_allocatable_memory_bytes The memory resources of a node that are available for scheduling.
# TYPE kube_node_status_allocatable_memory_bytes gauge
kube_node_status_allocatable_memory_bytes{node="minikube"} 1.992372224e+09
# HELP kube_node_status_allocatable_pods The pod resources of a node that are available for scheduling.
# TYPE kube_node_status_allocatable_pods gauge
kube_node_status_allocatable_pods{node="minikube"} 110
# HELP kube_node_status_capacity_cpu_cores The total CPU resources of the node.
# TYPE kube_node_status_capacity_cpu_cores gauge
kube_node_status_capacity_cpu_cores{node="minikube"} 2
# HELP kube_node_status_capacity_memory_bytes The total memory resources of the node.
# TYPE kube_node_status_capacity_memory_bytes gauge
kube_node_status_capacity_memory_bytes{node="minikube"} 2.097229824e+09
# HELP kube_node_status_capacity_pods The total pod resources of the node.
# TYPE kube_node_status_capacity_pods gauge
kube_node_status_capacity_pods{node="minikube"} 110
# HELP kube_node_status_capacity_nvidia_gpu_cards The total Nvidia GPU resources of the node.
# TYPE kube_node_status_capacity_nvidia_gpu_cards gauge
kube_node_status_capacity_nvidia_gpu_cards{node="127.0.0.1"} 4
# HELP kube_node_status_allocatable_nvidia_gpu_cards The Nvidia GPU resources of a node that are available for scheduling.
# TYPE kube_node_status_allocatable_nvidia_gpu_cards gauge
kube_node_status_allocatable_nvidia_gpu_cards{node="127.0.0.1"} 2
# HELP kube_node_status_condition The condition of a cluster node.
# TYPE kube_node_status_condition gauge
kube_node_status_condition{condition="DiskPressure",node="minikube",status="false"} 1
kube_node_status_condition{condition="DiskPressure",node="minikube",status="true"} 0
kube_node_status_condition{condition="DiskPressure",node="minikube",status="unknown"} 0
kube_node_status_condition{condition="MemoryPressure",node="minikube",status="false"} 1
kube_node_status_condition{condition="MemoryPressure",node="minikube",status="true"} 0
kube_node_status_condition{condition="MemoryPressure",node="minikube",status="unknown"} 0
kube_node_status_condition{condition="OutOfDisk",node="minikube",status="false"} 1
kube_node_status_condition{condition="OutOfDisk",node="minikube",status="true"} 0
kube_node_status_condition{condition="OutOfDisk",node="minikube",status="unknown"} 0
kube_node_status_condition{condition="Ready",node="minikube",status="false"} 0
kube_node_status_condition{condition="Ready",node="minikube",status="true"} 1
kube_node_status_condition{condition="Ready",node="minikube",status="unknown"} 0
# HELP kube_node_status_network_unavailable Whether the network is correctly configured for the node.
# TYPE kube_node_status_network_unavailable gauge
kube_node_status_network_unavailable{node="127.0.0.1",condition="false"} 1
# TYPE kube_persistentvolume_status_phase gauge
kube_persistentvolume_status_phase{persistentvolume="local-pv-103fef5d",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-103fef5d",phase="Bound"} 1
kube_persistentvolume_status_phase{persistentvolume="local-pv-103fef5d",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-103fef5d",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-103fef5d",phase="Released"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-15d0a3a3",phase="Available"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-15d0a3a3",phase="Bound"} 1
kube_persistentvolume_status_phase{persistentvolume="local-pv-15d0a3a3",phase="Failed"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-15d0a3a3",phase="Pending"} 0
kube_persistentvolume_status_phase{persistentvolume="local-pv-15d0a3a3",phase="Released"} 0
# HELP kube_persistentvolume_info Information about persistentvolume.
# TYPE kube_persistentvolume_info gauge
kube_persistentvolume_info{persistentvolume="local-pv-103fef5d",storageclass="local-data"} 1
kube_persistentvolume_info{persistentvolume="local-pv-15d0a3a3",storageclass="local-data"} 1
# HELP kube_persistentvolumeclaim_info Information about persistent volume claim.
# TYPE kube_persistentvolumeclaim_info gauge
kube_persistentvolumeclaim_info{namespace="default",persistentvolumeclaim="task-pv-claim",storageclass="manual"} 1
# HELP kube_persistentvolumeclaim_resource_requests_storage_bytes The capacity of storage requested by the persistent volume claim.
# TYPE kube_persistentvolumeclaim_resource_requests_storage_bytes gauge
kube_persistentvolumeclaim_resource_requests_storage_bytes{namespace="default",persistentvolumeclaim="task-pv-claim"} 3.221225472e+09
# HELP kube_persistentvolumeclaim_status_phase The phase the persistent volume claim is currently in.
# TYPE kube_persistentvolumeclaim_status_phase gauge
kube_persistentvolumeclaim_status_phase{namespace="default",persistentvolumeclaim="task-pv-claim",phase="Bound"} 1
kube_persistentvolumeclaim_status_phase{namespace="default",persistentvolumeclaim="task-pv-claim",phase="Lost"} 0
kube_persistentvolumeclaim_status_phase{namespace="default",persistentvolumeclaim="task-pv-claim",phase="Pending"} 0
# HELP kube_pod_container_info Information about a container in a pod.
# TYPE kube_pod_container_info gauge
kube_pod_container_info{container="dd-k8state",container_id="docker://7cb618a8a95bba49cb1c77e8bd81f4410f7f98c27b036d67ad84fcb2d0a79146",image="datadog/docker-dd-agent:latest",image_id="docker-pullable://datadog/docker-dd-agent@sha256:64a562b89431441d52fb38544e5f7d395020481333e5c5a07f2a7e93639453a7",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_container_info{container="dnsmasq",container_id="docker://6b53931d2126fb164c5f139d348c292f5ea0449ab437c13e5cc883a9cad1ae5d",image="gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5",image_id="docker-pullable://gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64@sha256:46b933bb70270c8a02fa6b6f87d440f6f1fce1a5a2a719e164f83f7b109f7544",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_info{container="hello",container_id="docker://1a2d16f242e8603b569c453b121c1345f2905763790f2745db6e49d0f907d320",image="busybox:latest",image_id="docker-pullable://busybox@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0",namespace="default",pod="hello-1509998400-rb8bs"} 1
kube_pod_container_info{container="hello",container_id="docker://4e3fa7569b1d5910a06a6592dbdf775ad1671fb20c4ceb06b2523760e15a3c7a",image="busybox:latest",image_id="docker-pullable://busybox@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0",namespace="default",pod="hello-1509998340-k4f8q"} 1
kube_pod_container_info{container="hello",container_id="docker://e84f38fd8e29196e39aec60b5421e96da04caa005e81c015fcf5b0e7a202ba70",image="busybox:latest",image_id="docker-pullable://busybox@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0",namespace="default",pod="hello-1509998460-tzh8k"} 1
kube_pod_container_info{container="kube-addon-manager",container_id="docker://26048044c3c59e7f7a7a571726d291a89050541e3a550f3884b3152a6c7f2534",image="gcr.io/google-containers/kube-addon-manager:v6.4-beta.2",image_id="docker://sha256:0a951668696f914e15e5fd2ef876fe7ea09596b4056f236eded5f5d8fc0bc395",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_container_info{container="kube-state-metrics",container_id="docker://3f07c70bf6b6ae5051c88f8e6631df1224a1340034ef1358db9e87cbb41a2377",image="gcr.io/google_containers/kube-state-metrics:v1.1.0",image_id="docker-pullable://gcr.io/google_containers/kube-state-metrics@sha256:53416b3d560a1b821b7e302460a387fef887ce72206c3ccbf82fd9e2d1f71fd9",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_container_info{container="kubedns",container_id="docker://48533b71e82a90034fe79b68cabead3b0272ea8b28bb835dcd190757d76e936e",image="gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5",image_id="docker-pullable://gcr.io/google_containers/k8s-dns-kube-dns-amd64@sha256:1a3fc069de481ae690188f6f1ba4664b5cc7760af37120f70c86505c79eea61d",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_info{container="kubernetes-dashboard",container_id="docker://6421cc598803404e733bd28b9f2a18038fa073797d14fa72d2b2257eb7f3953c",image="gcr.io/google_containers/kubernetes-dashboard-amd64:v1.6.3",image_id="docker://sha256:691a82db1ecd12bf573b1b9992108a48e0d1a8640564c96d4f07e18e69dd83e6",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_container_info{container="nginxbleww",container_id="",image="nginxbleww",image_id="",namespace="default",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_container_info{container="nxf-126",container_id="docker://5998f73374098909a0663e793c188e74e0418c9873282e61867c99f1a61b5462",image="busybox:latest",image_id="docker-pullable://busybox@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0",namespace="default",pod="nxf-126"} 1
kube_pod_container_info{container="registry-creds",container_id="",image="upmcenterprises/registry-creds:1.8",image_id="",namespace="kube-system",pod="registry-creds-hq249"} 1
kube_pod_container_info{container="should-run-once",container_id="docker://b427a66001b9880b01620fe06b6a5175941fd78ad76abb575a126df63135df34",image="busybox:latest",image_id="docker-pullable://busybox@sha256:bbc3a03235220b170ba48a157dd097dd1379299370e1ed99ce976df0355d24f0",namespace="default",pod="should-run-once"} 1
kube_pod_container_info{container="sidecar",container_id="docker://c452e5b70413f4040cca1d1f445719251bcb67822936d12e7f1ce7648e758926",image="gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5",image_id="docker-pullable://gcr.io/google_containers/k8s-dns-sidecar-amd64@sha256:9aab42bf6a2a068b797fe7d91a5d8d915b10dbbc3d6f2b10492848debfba6044",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_info{container="task-pv-container",container_id="docker://36f94bc9a2fded50b9e4b4690f166a1f2fa1ca40fc68cf176222b766e51a7c52",image="nginx:latest",image_id="docker-pullable://nginx@sha256:9fca103a62af6db7f188ac3376c60927db41f88b8d2354bf02d2290a672dc425",namespace="default",pod="task-pv-pod"} 1
kube_pod_container_info{container="tiller",container_id="docker://1473297bd6ad8f256cd05f4aa4130c2936f504b092c4761a49afd53d817ea64d",image="gcr.io/kubernetes-helm/tiller:v2.6.1",image_id="docker-pullable://gcr.io/kubernetes-helm/tiller@sha256:6b561c3bb9fed1b028520cce3852e6c9a6a91161df9b92ca0c3a20ebecc0581a",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
# HELP kube_pod_container_resource_limits_cpu_cores The limit on cpu cores to be used by a container.
# TYPE kube_pod_container_resource_limits_cpu_cores gauge
kube_pod_container_resource_limits_cpu_cores{container="pod1_con1",namespace="ns1",node="node1",pod="pod1"} 0.2
kube_pod_container_resource_limits_cpu_cores{container="pod1_con2",namespace="ns1",node="node1",pod="pod1"} 0.3
kube_pod_container_resource_limits_cpu_cores{container="pod2_con1",namespace="ns2",node="node2",pod="pod2"} 0.4
kube_pod_container_resource_limits_cpu_cores{container="pod2_con2",namespace="ns2",node="node2",pod="pod2"} 0.5
# HELP kube_pod_container_resource_limits_memory_bytes The limit on memory to be used by a container in bytes.
# TYPE kube_pod_container_resource_limits_memory_bytes gauge
kube_pod_container_resource_limits_memory_bytes{container="kubedns",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 1.7825792e+08
# HELP kube_pod_container_resource_limits_nvidia_gpu_devices The limit on gpu devices to be used by a container.
# TYPE kube_pod_container_resource_limits_nvidia_gpu_devices gauge
kube_pod_container_resource_limits_nvidia_gpu_devices{container="pod2_con1",namespace="ns2",node="node2",pod="pod2"} 3
kube_pod_container_resource_limits_nvidia_gpu_devices{container="pod2_con2",namespace="ns2",node="node2",pod="pod2"} 5
# HELP kube_pod_container_resource_requests_nvidia_gpu_devices The number of requested gpu devices by a container.
# TYPE kube_pod_container_resource_requests_nvidia_gpu_devices gauge
kube_pod_container_resource_requests_nvidia_gpu_devices{container="pod1_con1",namespace="ns1",node="node1",pod="pod1"} 3
kube_pod_container_resource_requests_nvidia_gpu_devices{container="pod1_con2",namespace="ns1",node="node1",pod="pod1"} 2
# HELP kube_pod_container_resource_requests_cpu_cores The number of requested cpu cores by a container.
# TYPE kube_pod_container_resource_requests_cpu_cores gauge
kube_pod_container_resource_requests_cpu_cores{container="dnsmasq",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 0.15
kube_pod_container_resource_requests_cpu_cores{container="kube-addon-manager",namespace="kube-system",node="minikube",pod="kube-addon-manager-minikube"} 0.005
kube_pod_container_resource_requests_cpu_cores{container="kubedns",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 0.1
kube_pod_container_resource_requests_cpu_cores{container="sidecar",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 0.01
# HELP kube_pod_container_resource_requests_memory_bytes The number of requested memory bytes  by a container.
# TYPE kube_pod_container_resource_requests_memory_bytes gauge
kube_pod_container_resource_requests_memory_bytes{container="dnsmasq",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 2.097152e+07
kube_pod_container_resource_requests_memory_bytes{container="kube-addon-manager",namespace="kube-system",node="minikube",pod="kube-addon-manager-minikube"} 5.24288e+07
kube_pod_container_resource_requests_memory_bytes{container="kubedns",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 7.340032e+07
kube_pod_container_resource_requests_memory_bytes{container="sidecar",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx"} 2.097152e+07
# HELP kube_pod_container_status_ready Describes whether the containers readiness check succeeded.
# TYPE kube_pod_container_status_ready gauge
kube_pod_container_status_ready{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_container_status_ready{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_ready{container="hello",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_container_status_ready{container="hello",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_container_status_ready{container="hello",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_container_status_ready{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_container_status_ready{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_container_status_ready{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_ready{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_container_status_ready{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_container_status_ready{container="nxf-126",namespace="default",pod="nxf-126"} 0
kube_pod_container_status_ready{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_container_status_ready{container="should-run-once",namespace="default",pod="should-run-once"} 0
kube_pod_container_status_ready{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_ready{container="task-pv-container",namespace="default",pod="task-pv-pod"} 1
kube_pod_container_status_ready{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
# HELP kube_pod_container_status_restarts The number of container restarts per container.
# TYPE kube_pod_container_status_restarts counter
kube_pod_container_status_restarts{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 2
kube_pod_container_status_restarts{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 9
kube_pod_container_status_restarts{container="hello",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_container_status_restarts{container="hello",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_container_status_restarts{container="hello",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_container_status_restarts{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_container_status_restarts{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 2
kube_pod_container_status_restarts{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 9
kube_pod_container_status_restarts{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 11
kube_pod_container_status_restarts{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_container_status_restarts{container="nxf-126",namespace="default",pod="nxf-126"} 0
kube_pod_container_status_restarts{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_container_status_restarts{container="should-run-once",namespace="default",pod="should-run-once"} 0
kube_pod_container_status_restarts{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 9
kube_pod_container_status_restarts{container="task-pv-container",namespace="default",pod="task-pv-pod"} 0
kube_pod_container_status_restarts{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 6
# HELP kube_pod_container_status_running Describes whether the container is currently in running state.
# TYPE kube_pod_container_status_running gauge
kube_pod_container_status_running{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_container_status_running{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_running{container="hello",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_container_status_running{container="hello",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_container_status_running{container="hello",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_container_status_running{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_container_status_running{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_container_status_running{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_running{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_container_status_running{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_container_status_running{container="nxf-126",namespace="default",pod="nxf-126"} 0
kube_pod_container_status_running{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_container_status_running{container="should-run-once",namespace="default",pod="should-run-once"} 0
kube_pod_container_status_running{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_container_status_running{container="task-pv-container",namespace="default",pod="task-pv-pod"} 1
kube_pod_container_status_running{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
# HELP kube_pod_container_status_terminated Describes whether the container is currently in terminated state.
# TYPE kube_pod_container_status_terminated gauge
kube_pod_container_status_terminated{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_container_status_terminated{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_terminated{container="hello",namespace="default",pod="hello-1509998340-k4f8q"} 1
kube_pod_container_status_terminated{container="hello",namespace="default",pod="hello-1509998400-rb8bs"} 1
kube_pod_container_status_terminated{container="hello",namespace="default",pod="hello-1509998460-tzh8k"} 1
kube_pod_container_status_terminated{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_container_status_terminated{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_container_status_terminated{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_terminated{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_container_status_terminated{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_container_status_terminated{container="nxf-126",namespace="default",pod="nxf-126"} 1
kube_pod_container_status_terminated{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_container_status_terminated{container="should-run-once",namespace="default",pod="should-run-once"} 0
kube_pod_container_status_terminated{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_terminated{container="task-pv-container",namespace="default",pod="task-pv-pod"} 0
kube_pod_container_status_terminated{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_container_status_terminated{container="container2",namespace="ns2",pod="pod2"} 0
# HELP kube_pod_container_status_terminated_reason Describes the reason the container is currently in terminated state.
# TYPE kube_pod_container_status_terminated_reason gauge
kube_pod_container_status_terminated_reason{container="container2",namespace="ns2",pod="pod2",reason="Completed"} 0
kube_pod_container_status_terminated_reason{container="container2",namespace="ns2",pod="pod2",reason="ContainerCannotRun"} 0
kube_pod_container_status_terminated_reason{container="container2",namespace="ns2",pod="pod2",reason="Error"} 0
kube_pod_container_status_terminated_reason{container="container2",namespace="ns2",pod="pod2",reason="OOMKilled"} 1
# HELP kube_pod_container_status_waiting Describes whether the container is currently in waiting state.
# TYPE kube_pod_container_status_waiting gauge
kube_pod_container_status_waiting{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_container_status_waiting{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_waiting{container="hello",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_container_status_waiting{container="hello",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_container_status_waiting{container="hello",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_container_status_waiting{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_container_status_waiting{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_container_status_waiting{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_waiting{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_container_status_waiting{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_container_status_waiting{container="nxf-126",namespace="default",pod="nxf-126"} 0
kube_pod_container_status_waiting{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249"} 1
kube_pod_container_status_waiting{container="should-run-once",namespace="default",pod="should-run-once"} 0
kube_pod_container_status_waiting{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_container_status_waiting{container="task-pv-container",namespace="default",pod="task-pv-pod"} 0
kube_pod_container_status_waiting{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
# HELP kube_pod_container_status_waiting_reason Describes the reason the container is currently in waiting state.
# TYPE kube_pod_container_status_waiting_reason gauge
kube_pod_container_status_waiting_reason{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="dd-k8state",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77",reason="ErrImagePull"} 1
kube_pod_container_status_waiting_reason{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="dnsmasq",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998340-k4f8q",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998340-k4f8q",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998400-rb8bs",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998400-rb8bs",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998460-tzh8k",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998460-tzh8k",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="hello",namespace="default",pod="hello-1509998460-tzh8k",reason="CrashLoopBackOff"} 1
kube_pod_container_status_waiting_reason{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="kube-addon-manager",namespace="kube-system",pod="kube-addon-manager-minikube",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj",reason="CrashLoopBackoff"} 1
kube_pod_container_status_waiting_reason{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj",reason="ImagePullBackoff"} 1
kube_pod_container_status_waiting_reason{container="kube-state-metrics",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="kubedns",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="kubernetes-dashboard",namespace="kube-system",pod="kubernetes-dashboard-zhtjl",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="nginxbleww",namespace="default",pod="failingtest-f585bbd4-2fsml",reason="ErrImagePull"} 1
kube_pod_container_status_waiting_reason{container="nxf-126",namespace="default",pod="nxf-126",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="nxf-126",namespace="default",pod="nxf-126",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249",reason="ContainerCreating"} 1
kube_pod_container_status_waiting_reason{container="registry-creds",namespace="kube-system",pod="registry-creds-hq249",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="should-run-once",namespace="default",pod="should-run-once",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="should-run-once",namespace="default",pod="should-run-once",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="sidecar",namespace="kube-system",pod="kube-dns-1326421443-hj4hx",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="task-pv-container",namespace="default",pod="task-pv-pod",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="task-pv-container",namespace="default",pod="task-pv-pod",reason="ErrImagePull"} 0
kube_pod_container_status_waiting_reason{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn",reason="ContainerCreating"} 0
kube_pod_container_status_waiting_reason{container="tiller",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn",reason="ErrImagePull"} 1
# HELP kube_pod_created Unix creation timestamp
# TYPE kube_pod_created gauge
kube_pod_created{namespace="default",pod="failingtest-f585bbd4-2fsml"} 1.510059371e+09
kube_pod_created{namespace="default",pod="hello-1509998340-k4f8q"} 1.509998347e+09
kube_pod_created{namespace="default",pod="hello-1509998400-rb8bs"} 1.509998407e+09
kube_pod_created{namespace="default",pod="hello-1509998460-tzh8k"} 1.509998467e+09
kube_pod_created{namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1.509985033e+09
kube_pod_created{namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1.509985033e+09
kube_pod_created{namespace="default",pod="nxf-126"} 1.509997502e+09
kube_pod_created{namespace="default",pod="should-run-once"} 1.509997452e+09
kube_pod_created{namespace="default",pod="task-pv-pod"} 1.510047518e+09
kube_pod_created{namespace="kube-system",pod="kube-addon-manager-minikube"} 1.509978334e+09
kube_pod_created{namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1.508406457e+09
kube_pod_created{namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1.508406457e+09
kube_pod_created{namespace="kube-system",pod="registry-creds-hq249"} 1.508406457e+09
kube_pod_created{namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1.508947465e+09
# HELP kube_pod_info Information about pod.
# TYPE kube_pod_info gauge
kube_pod_info{created_by_kind="<none>",created_by_name="<none>",host_ip="192.168.99.100",namespace="default",node="minikube",pod="nxf-126",pod_ip="172.17.0.2"} 1
kube_pod_info{created_by_kind="<none>",created_by_name="<none>",host_ip="192.168.99.100",namespace="default",node="minikube",pod="should-run-once",pod_ip="172.17.0.2"} 1
kube_pod_info{created_by_kind="<none>",created_by_name="<none>",host_ip="192.168.99.100",namespace="default",node="minikube",pod="task-pv-pod",pod_ip="172.17.0.3"} 1
kube_pod_info{created_by_kind="<none>",created_by_name="<none>",host_ip="192.168.99.100",namespace="kube-system",node="minikube",pod="kube-addon-manager-minikube",pod_ip="192.168.99.100"} 1
kube_pod_info{created_by_kind="DaemonSet",created_by_name="jaundiced-numbat-dd-k8state",host_ip="192.168.99.100",namespace="default",node="minikube",pod="jaundiced-numbat-dd-k8state-b6s77",pod_ip="172.17.0.5"} 1
kube_pod_info{created_by_kind="Job",created_by_name="hello-1509998340",host_ip="192.168.99.100",namespace="default",node="minikube",pod="hello-1509998340-k4f8q",pod_ip=""} 1
kube_pod_info{created_by_kind="Job",created_by_name="hello-1509998400",host_ip="192.168.99.100",namespace="default",node="minikube",pod="hello-1509998400-rb8bs",pod_ip=""} 1
kube_pod_info{created_by_kind="Job",created_by_name="hello-1509998460",host_ip="192.168.99.100",namespace="default",node="minikube",pod="hello-1509998460-tzh8k",pod_ip=""} 1
kube_pod_info{created_by_kind="ReplicaSet",created_by_name="failingtest-f585bbd4",host_ip="192.168.99.100",namespace="default",node="minikube",pod="failingtest-f585bbd4-2fsml",pod_ip="172.17.0.8"} 1
kube_pod_info{created_by_kind="ReplicaSet",created_by_name="jaundiced-numbat-kube-state-metrics-b7fbc487d",host_ip="192.168.99.100",namespace="default",node="minikube",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj",pod_ip="172.17.0.7"} 1
kube_pod_info{created_by_kind="ReplicaSet",created_by_name="kube-dns-1326421443",host_ip="192.168.99.100",namespace="kube-system",node="minikube",pod="kube-dns-1326421443-hj4hx",pod_ip="172.17.0.4"} 1
kube_pod_info{created_by_kind="ReplicaSet",created_by_name="tiller-deploy-1651615695",host_ip="192.168.99.100",namespace="kube-system",node="minikube",pod="tiller-deploy-1651615695-dcphn",pod_ip="172.17.0.6"} 1
kube_pod_info{created_by_kind="ReplicationController",created_by_name="kubernetes-dashboard",host_ip="192.168.99.100",namespace="kube-system",node="minikube",pod="kubernetes-dashboard-zhtjl",pod_ip="172.17.0.2"} 1
kube_pod_info{created_by_kind="ReplicationController",created_by_name="registry-creds",host_ip="192.168.99.100",namespace="kube-system",node="minikube",pod="registry-creds-hq249",pod_ip=""} 1
kube_pod_info{created_by_kind="Job",created_by_name="hello-1509998400",host_ip="192.168.99.100",node="minikube",namespace="ns2",pod="pod2",pod_ip=""} 1
# HELP kube_pod_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_pod_labels gauge
kube_pod_labels{namespace="default",pod="nxf-126"} 1
kube_pod_labels{namespace="default",pod="should-run-once"} 1
kube_pod_labels{namespace="default",pod="task-pv-pod"} 1
kube_pod_labels{label_controller_uid="16a43981-c32d-11e7-a7e7-080027bdd864",label_job_name="hello-1509998400",namespace="default",pod="hello-1509998400-rb8bs"} 1
kube_pod_labels{label_controller_uid="3a73a249-c32d-11e7-a7e7-080027bdd864",label_job_name="hello-1509998460",namespace="default",pod="hello-1509998460-tzh8k"} 1
kube_pod_labels{label_controller_uid="f2d4c3f7-c32c-11e7-a7e7-080027bdd864",label_job_name="hello-1509998340",namespace="default",pod="hello-1509998340-k4f8q"} 1
kube_pod_labels{label_app="failingtest",label_pod_template_hash="91416680",namespace="default",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_labels{label_k8s_app="kube-dns",label_pod_template_hash="1326421443",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_labels{label_addonmanager_kubernetes_io_mode="Reconcile",label_app="kubernetes-dashboard",label_version="v1.6.3",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_labels{label_addonmanager_kubernetes_io_mode="Reconcile",label_name="registry-creds",label_version="v1.8",namespace="kube-system",pod="registry-creds-hq249"} 1
kube_pod_labels{label_app="helm",label_name="tiller",label_pod_template_hash="1651615695",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
kube_pod_labels{label_app="jaundiced-numbat-dd-k8state",label_controller_revision_hash="3690254688",label_pod_template_generation="1",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_labels{label_component="kube-addon-manager",label_kubernetes_io_minikube_addons="addon-manager",label_version="v6.4",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_labels{label_app="kube-state-metrics",label_pod_template_hash="639670438",label_release="jaundiced-numbat",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
# HELP kube_pod_owner Information about the Pod's owner.
# TYPE kube_pod_owner gauge
kube_pod_owner{namespace="default",owner_is_controller="<none>",owner_kind="<none>",owner_name="<none>",pod="nxf-126"} 1
kube_pod_owner{namespace="default",owner_is_controller="<none>",owner_kind="<none>",owner_name="<none>",pod="should-run-once"} 1
kube_pod_owner{namespace="default",owner_is_controller="<none>",owner_kind="<none>",owner_name="<none>",pod="task-pv-pod"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="DaemonSet",owner_name="jaundiced-numbat-dd-k8state",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="Job",owner_name="hello-1509998340",pod="hello-1509998340-k4f8q"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="Job",owner_name="hello-1509998400",pod="hello-1509998400-rb8bs"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="Job",owner_name="hello-1509998460",pod="hello-1509998460-tzh8k"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="ReplicaSet",owner_name="failingtest-f585bbd4",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_owner{namespace="default",owner_is_controller="true",owner_kind="ReplicaSet",owner_name="jaundiced-numbat-kube-state-metrics-b7fbc487d",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_owner{namespace="kube-system",owner_is_controller="<none>",owner_kind="<none>",owner_name="<none>",pod="kube-addon-manager-minikube"} 1
kube_pod_owner{namespace="kube-system",owner_is_controller="true",owner_kind="ReplicaSet",owner_name="kube-dns-1326421443",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_owner{namespace="kube-system",owner_is_controller="true",owner_kind="ReplicaSet",owner_name="tiller-deploy-1651615695",pod="tiller-deploy-1651615695-dcphn"} 1
kube_pod_owner{namespace="kube-system",owner_is_controller="true",owner_kind="ReplicationController",owner_name="kubernetes-dashboard",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_owner{namespace="kube-system",owner_is_controller="true",owner_kind="ReplicationController",owner_name="registry-creds",pod="registry-creds-hq249"} 1
# HELP kube_pod_start_time Start time in unix timestamp for a pod.
# TYPE kube_pod_start_time gauge
kube_pod_start_time{namespace="default",pod="failingtest-f585bbd4-2fsml"} 1.510059371e+09
kube_pod_start_time{namespace="default",pod="hello-1509998340-k4f8q"} 1.509998347e+09
kube_pod_start_time{namespace="default",pod="hello-1509998400-rb8bs"} 1.509998407e+09
kube_pod_start_time{namespace="default",pod="hello-1509998460-tzh8k"} 1.509998467e+09
kube_pod_start_time{namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1.509985033e+09
kube_pod_start_time{namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1.509985033e+09
kube_pod_start_time{namespace="default",pod="nxf-126"} 1.509997502e+09
kube_pod_start_time{namespace="default",pod="should-run-once"} 1.509997452e+09
kube_pod_start_time{namespace="default",pod="task-pv-pod"} 1.510047518e+09
kube_pod_start_time{namespace="kube-system",pod="kube-addon-manager-minikube"} 1.508406447e+09
kube_pod_start_time{namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1.508406457e+09
kube_pod_start_time{namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1.508406457e+09
kube_pod_start_time{namespace="kube-system",pod="registry-creds-hq249"} 1.508406458e+09
kube_pod_start_time{namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1.508947465e+09
# HELP kube_pod_status_phase The pods current phase.
# TYPE kube_pod_status_phase gauge
kube_pod_status_phase{namespace="default",phase="Failed",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_phase{namespace="default",phase="Failed",pod="nxf-126"} 1
kube_pod_status_phase{namespace="default",phase="Failed",pod="should-run-once"} 1
kube_pod_status_phase{namespace="default",phase="Failed",pod="task-pv-pod"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_status_phase{namespace="default",phase="Pending",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="nxf-126"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="should-run-once"} 0
kube_pod_status_phase{namespace="default",phase="Pending",pod="task-pv-pod"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_status_phase{namespace="default",phase="Running",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_status_phase{namespace="default",phase="Running",pod="nxf-126"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="should-run-once"} 0
kube_pod_status_phase{namespace="default",phase="Running",pod="task-pv-pod"} 1
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="hello-1509998340-k4f8q"} 1
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="hello-1509998400-rb8bs"} 1
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="nxf-126"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="should-run-once"} 0
kube_pod_status_phase{namespace="default",phase="Succeeded",pod="task-pv-pod"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="hello-1509998460-tzh8k"} 1
kube_pod_status_phase{namespace="default",phase="Unknown",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="nxf-126"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="should-run-once"} 0
kube_pod_status_phase{namespace="default",phase="Unknown",pod="task-pv-pod"} 0
kube_pod_status_phase{namespace="kube-system",phase="Failed",pod="kube-addon-manager-minikube"} 0
kube_pod_status_phase{namespace="kube-system",phase="Failed",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_phase{namespace="kube-system",phase="Failed",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_phase{namespace="kube-system",phase="Failed",pod="registry-creds-hq249"} 0
kube_pod_status_phase{namespace="kube-system",phase="Failed",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_status_phase{namespace="kube-system",phase="Pending",pod="kube-addon-manager-minikube"} 0
kube_pod_status_phase{namespace="kube-system",phase="Pending",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_phase{namespace="kube-system",phase="Pending",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_phase{namespace="kube-system",phase="Pending",pod="registry-creds-hq249"} 1
kube_pod_status_phase{namespace="kube-system",phase="Pending",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_status_phase{namespace="kube-system",phase="Running",pod="kube-addon-manager-minikube"} 1
kube_pod_status_phase{namespace="kube-system",phase="Running",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_status_phase{namespace="kube-system",phase="Running",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_status_phase{namespace="kube-system",phase="Running",pod="registry-creds-hq249"} 0
kube_pod_status_phase{namespace="kube-system",phase="Running",pod="tiller-deploy-1651615695-dcphn"} 1
kube_pod_status_phase{namespace="kube-system",phase="Succeeded",pod="kube-addon-manager-minikube"} 0
kube_pod_status_phase{namespace="kube-system",phase="Succeeded",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_phase{namespace="kube-system",phase="Succeeded",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_phase{namespace="kube-system",phase="Succeeded",pod="registry-creds-hq249"} 0
kube_pod_status_phase{namespace="kube-system",phase="Succeeded",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_status_phase{namespace="kube-system",phase="Unknown",pod="kube-addon-manager-minikube"} 0
kube_pod_status_phase{namespace="kube-system",phase="Unknown",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_phase{namespace="kube-system",phase="Unknown",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_phase{namespace="kube-system",phase="Unknown",pod="registry-creds-hq249"} 0
kube_pod_status_phase{namespace="kube-system",phase="Unknown",pod="tiller-deploy-1651615695-dcphn"} 0
# HELP kube_pod_status_ready Describes whether the pod is ready to serve requests.
# TYPE kube_pod_status_ready gauge
kube_pod_status_ready{condition="false",namespace="default",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="hello-1509998340-k4f8q"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="hello-1509998400-rb8bs"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="hello-1509998460-tzh8k"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_ready{condition="false",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_ready{condition="false",namespace="default",pod="nxf-126"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="should-run-once"} 1
kube_pod_status_ready{condition="false",namespace="default",pod="task-pv-pod"} 0
kube_pod_status_ready{condition="false",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_status_ready{condition="false",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_ready{condition="false",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_ready{condition="false",namespace="kube-system",pod="registry-creds-hq249"} 1
kube_pod_status_ready{condition="false",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_status_ready{condition="true",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_status_ready{condition="true",namespace="default",pod="nxf-126"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="should-run-once"} 0
kube_pod_status_ready{condition="true",namespace="default",pod="task-pv-pod"} 1
kube_pod_status_ready{condition="true",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_status_ready{condition="true",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_status_ready{condition="true",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_status_ready{condition="true",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_status_ready{condition="true",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
kube_pod_status_ready{condition="unknown",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="nxf-126"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="should-run-once"} 0
kube_pod_status_ready{condition="unknown",namespace="default",pod="task-pv-pod"} 0
kube_pod_status_ready{condition="unknown",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_status_ready{condition="unknown",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_ready{condition="unknown",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_ready{condition="unknown",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_status_ready{condition="unknown",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
# HELP kube_pod_status_scheduled Describes the status of the scheduling process for the pod.
# TYPE kube_pod_status_scheduled gauge
kube_pod_status_scheduled{condition="false",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="nxf-126"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="should-run-once"} 0
kube_pod_status_scheduled{condition="false",namespace="default",pod="task-pv-pod"} 0
kube_pod_status_scheduled{condition="false",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_status_scheduled{condition="false",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_scheduled{condition="false",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_scheduled{condition="false",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_status_scheduled{condition="false",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
kube_pod_status_scheduled{condition="true",namespace="default",pod="failingtest-f585bbd4-2fsml"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="hello-1509998340-k4f8q"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="hello-1509998400-rb8bs"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="hello-1509998460-tzh8k"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="nxf-126"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="should-run-once"} 1
kube_pod_status_scheduled{condition="true",namespace="default",pod="task-pv-pod"} 1
kube_pod_status_scheduled{condition="true",namespace="kube-system",pod="kube-addon-manager-minikube"} 1
kube_pod_status_scheduled{condition="true",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 1
kube_pod_status_scheduled{condition="true",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 1
kube_pod_status_scheduled{condition="true",namespace="kube-system",pod="registry-creds-hq249"} 1
kube_pod_status_scheduled{condition="true",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 1
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="failingtest-f585bbd4-2fsml"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="hello-1509998340-k4f8q"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="hello-1509998400-rb8bs"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="hello-1509998460-tzh8k"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="jaundiced-numbat-dd-k8state-b6s77"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="jaundiced-numbat-kube-state-metrics-b7fbc487d-4phhj"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="nxf-126"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="should-run-once"} 0
kube_pod_status_scheduled{condition="unknown",namespace="default",pod="task-pv-pod"} 0
kube_pod_status_scheduled{condition="unknown",namespace="kube-system",pod="kube-addon-manager-minikube"} 0
kube_pod_status_scheduled{condition="unknown",namespace="kube-system",pod="kube-dns-1326421443-hj4hx"} 0
kube_pod_status_scheduled{condition="unknown",namespace="kube-system",pod="kubernetes-dashboard-zhtjl"} 0
kube_pod_status_scheduled{condition="unknown",namespace="kube-system",pod="registry-creds-hq249"} 0
kube_pod_status_scheduled{condition="unknown",namespace="kube-system",pod="tiller-deploy-1651615695-dcphn"} 0
# HELP kube_poddisruptionbudget_status_current_healthy Current number of healthy pods
# TYPE kube_poddisruptionbudget_status_current_healthy gauge
kube_poddisruptionbudget_status_current_healthy{namespace="default",poddisruptionbudget="web-pdb"} 3
# HELP kube_poddisruptionbudget_status_desired_healthy Minimum desired number of healthy pods
# TYPE kube_poddisruptionbudget_status_desired_healthy gauge
kube_poddisruptionbudget_status_desired_healthy{namespace="default",poddisruptionbudget="web-pdb"} 2
# HELP kube_poddisruptionbudget_status_pod_disruptions_allowed Number of pod disruptions that are currently allowed
# TYPE kube_poddisruptionbudget_status_pod_disruptions_allowed gauge
kube_poddisruptionbudget_status_pod_disruptions_allowed{namespace="default",poddisruptionbudget="web-pdb"} 1
# HELP kube_poddisruptionbudget_status_expected_pods Total number of pods counted by this disruption budget
# TYPE kube_poddisruptionbudget_status_expected_pods gauge
kube_poddisruptionbudget_status_expected_pods{namespace="default",poddisruptionbudget="web-pdb"} 3
# HELP kube_replicaset_created Unix creation timestamp
# TYPE kube_replicaset_created gauge
kube_replicaset_created{namespace="default",replicaset="failingtest-f585bbd4"} 1.510059371e+09
kube_replicaset_created{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1.509985033e+09
kube_replicaset_created{namespace="kube-system",replicaset="kube-dns-1326421443"} 1.508406457e+09
kube_replicaset_created{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1.508947465e+09
# HELP kube_replicaset_metadata_generation Sequence number representing a specific generation of the desired state.
# TYPE kube_replicaset_metadata_generation gauge
kube_replicaset_metadata_generation{namespace="default",replicaset="failingtest-f585bbd4"} 1
kube_replicaset_metadata_generation{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_metadata_generation{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_metadata_generation{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicaset_spec_replicas Number of desired pods for a ReplicaSet.
# TYPE kube_replicaset_spec_replicas gauge
kube_replicaset_spec_replicas{namespace="default",replicaset="failingtest-f585bbd4"} 1
kube_replicaset_spec_replicas{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_spec_replicas{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_spec_replicas{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicaset_status_fully_labeled_replicas The number of fully labeled replicas per ReplicaSet.
# TYPE kube_replicaset_status_fully_labeled_replicas gauge
kube_replicaset_status_fully_labeled_replicas{namespace="default",replicaset="failingtest-f585bbd4"} 1
kube_replicaset_status_fully_labeled_replicas{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_status_fully_labeled_replicas{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_status_fully_labeled_replicas{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicaset_status_observed_generation The generation observed by the ReplicaSet controller.
# TYPE kube_replicaset_status_observed_generation gauge
kube_replicaset_status_observed_generation{namespace="default",replicaset="failingtest-f585bbd4"} 1
kube_replicaset_status_observed_generation{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_status_observed_generation{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_status_observed_generation{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicaset_status_ready_replicas The number of ready replicas per ReplicaSet.
# TYPE kube_replicaset_status_ready_replicas gauge
kube_replicaset_status_ready_replicas{namespace="default",replicaset="failingtest-f585bbd4"} 0
kube_replicaset_status_ready_replicas{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_status_ready_replicas{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_status_ready_replicas{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicaset_status_replicas The number of replicas per ReplicaSet.
# TYPE kube_replicaset_status_replicas gauge
kube_replicaset_status_replicas{namespace="default",replicaset="failingtest-f585bbd4"} 1
kube_replicaset_status_replicas{namespace="default",replicaset="jaundiced-numbat-kube-state-metrics-b7fbc487d"} 1
kube_replicaset_status_replicas{namespace="kube-system",replicaset="kube-dns-1326421443"} 1
kube_replicaset_status_replicas{namespace="kube-system",replicaset="tiller-deploy-1651615695"} 1
# HELP kube_replicationcontroller_created Unix creation timestamp
# TYPE kube_replicationcontroller_created gauge
kube_replicationcontroller_created{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1.508406457e+09
kube_replicationcontroller_created{namespace="kube-system",replicationcontroller="registry-creds"} 1.508406457e+09
# HELP kube_replicationcontroller_metadata_generation Sequence number representing a specific generation of the desired state.
# TYPE kube_replicationcontroller_metadata_generation gauge
kube_replicationcontroller_metadata_generation{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_metadata_generation{namespace="kube-system",replicationcontroller="registry-creds"} 1
# HELP kube_replicationcontroller_spec_replicas Number of desired pods for a ReplicationController.
# TYPE kube_replicationcontroller_spec_replicas gauge
kube_replicationcontroller_spec_replicas{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_spec_replicas{namespace="kube-system",replicationcontroller="registry-creds"} 1
# HELP kube_replicationcontroller_status_available_replicas The number of available replicas per ReplicationController.
# TYPE kube_replicationcontroller_status_available_replicas gauge
kube_replicationcontroller_status_available_replicas{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_status_available_replicas{namespace="kube-system",replicationcontroller="registry-creds"} 0
# HELP kube_replicationcontroller_status_fully_labeled_replicas The number of fully labeled replicas per ReplicationController.
# TYPE kube_replicationcontroller_status_fully_labeled_replicas gauge
kube_replicationcontroller_status_fully_labeled_replicas{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_status_fully_labeled_replicas{namespace="kube-system",replicationcontroller="registry-creds"} 1
# HELP kube_replicationcontroller_status_observed_generation The generation observed by the ReplicationController controller.
# TYPE kube_replicationcontroller_status_observed_generation gauge
kube_replicationcontroller_status_observed_generation{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_status_observed_generation{namespace="kube-system",replicationcontroller="registry-creds"} 1
# HELP kube_replicationcontroller_status_ready_replicas The number of ready replicas per ReplicationController.
# TYPE kube_replicationcontroller_status_ready_replicas gauge
kube_replicationcontroller_status_ready_replicas{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_status_ready_replicas{namespace="kube-system",replicationcontroller="registry-creds"} 0
# HELP kube_replicationcontroller_status_replicas The number of replicas per ReplicationController.
# TYPE kube_replicationcontroller_status_replicas gauge
kube_replicationcontroller_status_replicas{namespace="kube-system",replicationcontroller="kubernetes-dashboard"} 1
kube_replicationcontroller_status_replicas{namespace="kube-system",replicationcontroller="registry-creds"} 1
# HELP kube_service_created Unix creation timestamp
# TYPE kube_service_created gauge
kube_service_created{namespace="default",service="jaundiced-numbat-kube-state-metrics"} 1.509985033e+09
kube_service_created{namespace="default",service="kubernetes"} 1.508406438e+09
kube_service_created{namespace="default",service="php-apache"} 1.50894874e+09
kube_service_created{namespace="kube-system",service="kube-dns"} 1.508406457e+09
kube_service_created{namespace="kube-system",service="kubernetes-dashboard"} 1.508406457e+09
kube_service_created{namespace="kube-system",service="tiller-deploy"} 1.508947465e+09
# HELP kube_service_info Information about service.
# TYPE kube_service_info gauge
kube_service_info{namespace="default",service="jaundiced-numbat-kube-state-metrics"} 1
kube_service_info{namespace="default",service="kubernetes"} 1
kube_service_info{namespace="default",service="php-apache"} 1
kube_service_info{namespace="kube-system",service="kube-dns"} 1
kube_service_info{namespace="kube-system",service="kubernetes-dashboard"} 1
kube_service_info{namespace="kube-system",service="tiller-deploy"} 1
# HELP kube_service_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_service_labels gauge
kube_service_labels{namespace="default",service="php-apache"} 1
kube_service_labels{label_component="apiserver",label_provider="kubernetes",namespace="default",service="kubernetes"} 1
kube_service_labels{label_app="helm",label_name="tiller",namespace="kube-system",service="tiller-deploy"} 1
kube_service_labels{label_addonmanager_kubernetes_io_mode="Reconcile",label_k8s_app="kube-dns",label_kubernetes_io_name="KubeDNS",namespace="kube-system",service="kube-dns"} 1
kube_service_labels{label_addonmanager_kubernetes_io_mode="Reconcile",label_app="kubernetes-dashboard",label_kubernetes_io_minikube_addons="dashboard",label_kubernetes_io_minikube_addons_endpoint="dashboard",namespace="kube-system",service="kubernetes-dashboard"} 1
kube_service_labels{label_app="kube-state-metrics",label_chart="kube-state-metrics-0.3.1",label_heritage="Tiller",label_release="jaundiced-numbat",namespace="default",service="jaundiced-numbat-kube-state-metrics"} 1
# HELP kube_service_spec_type Type about service.
# TYPE kube_service_spec_type gauge
kube_service_spec_type{namespace="default",service="datadog-cluster-agent",type="ClusterIP"} 1
kube_service_spec_type{namespace="default",service="ddrc1-kube-state-metrics",type="ClusterIP"} 1
kube_service_spec_type{namespace="default",service="kubernetes",type="ClusterIP"} 1
kube_service_spec_type{namespace="default",service="redis-db2",type="LoadBalancer"} 1
kube_service_spec_type{namespace="default",service="redis-db2-bis",type="LoadBalancer"} 1
kube_service_spec_type{namespace="kube-system",service="default-http-backend",type="NodePort"} 1
kube_service_spec_type{namespace="kube-system",service="heapster",type="ClusterIP"} 1
kube_service_spec_type{namespace="kube-system",service="kube-dns",type="ClusterIP"} 1
kube_service_spec_type{namespace="kube-system",service="metrics-server",type="ClusterIP"} 1
kube_service_spec_type{namespace="kube-system",service="tiller-deploy",type="ClusterIP"} 1
# HELP kube_resourcequota Information about resource quota.
# TYPE kube_resourcequota gauge
kube_resourcequota{namespace="default",resource="cpu",resourcequota="custom-resource-quotas",type="hard"} 65
kube_resourcequota{namespace="default",resource="cpu",resourcequota="custom-resource-quotas",type="used"} 15.904
kube_resourcequota{namespace="default",resource="limits.cpu",resourcequota="custom-resource-quotas",type="hard"} 100
kube_resourcequota{namespace="default",resource="limits.cpu",resourcequota="custom-resource-quotas",type="used"} 15.904
kube_resourcequota{namespace="default",resource="limits.memory",resourcequota="custom-resource-quotas",type="hard"} 1.34217728e+11
kube_resourcequota{namespace="default",resource="limits.memory",resourcequota="custom-resource-quotas",type="used"} 7.7129056256e+10
kube_resourcequota{namespace="default",resource="memory",resourcequota="custom-resource-quotas",type="hard"} 1.34217728e+11
kube_resourcequota{namespace="default",resource="memory",resourcequota="custom-resource-quotas",type="used"} 7.7129056256e+10
kube_resourcequota{namespace="default",resource="pods",resourcequota="custom-resource-quotas",type="hard"} 1000
kube_resourcequota{namespace="default",resource="pods",resourcequota="custom-resource-quotas",type="used"} 497
# HELP kube_limitrange Information about limit range.
# TYPE kube_limitrange gauge
kube_limitrange{constraint="defaultRequest",limitrange="limits",namespace="default",resource="cpu",type="Container"} 0.1
# HELP kube_daemonset_updated_number_scheduled The total number of nodes that are running updated daemon pod
# TYPE kube_daemonset_updated_number_scheduled gauge
kube_daemonset_updated_number_scheduled{namespace="kube-system",daemonset="kube-proxy"} 3
kube_daemonset_updated_number_scheduled{namespace="kube-system",daemonset="kube-svc-redirect"} 3
kube_daemonset_updated_number_scheduled{namespace="default",daemonset="dd-datadog"} 3
# HELP kube_hpa_status_condition The condition of this autoscaler.
# TYPE kube_hpa_status_condition gauge
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="true",status="AbleToScale"} 1
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="false",status="AbleToScale"} 0
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="unknown",status="AbleToScale"} 0
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="true",status="ScalingActive"} 0
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="false",status="ScalingActive"} 1
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="unknown",status="ScalingActive"} 0
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="true",status="ScalingLimited"} 1
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="false",status="ScalingLimited"} 0
kube_hpa_status_condition{namespace="default",hpa="myhpa",condition="unknown",status="ScalingLimited"} 0
# HELP kube_verticalpodautoscaler_labels Kubernetes labels converted to Prometheus labels.
# TYPE kube_verticalpodautoscaler_labels gauge
kube_verticalpodautoscaler_labels{label_app="foobar",namespace="ns1",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",verticalpodautoscaler="vpa1"} 1
# HELP kube_verticalpodautoscaler_spec_updatepolicy_updatemode Update mode of the VPA.
# TYPE kube_verticalpodautoscaler_spec_updatepolicy_updatemode gauge
kube_verticalpodautoscaler_spec_updatepolicy_updatemode{namespace="default",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",update_mode="Recreate",verticalpodautoscaler="vpa1"} 1
# HELP kube_verticalpodautoscaler_status_recommendation_containerrecommendations_lowerbound Minimum resources the container can use before the VPA updater evicts it.
# TYPE kube_verticalpodautoscaler_status_recommendation_containerrecommendations_lowerbound gauge
kube_verticalpodautoscaler_status_recommendation_containerrecommendations_lowerbound{container="container1",namespace="default",resource="cpu",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",unit="core",verticalpodautoscaler="vpa1"} 1
# HELP kube_verticalpodautoscaler_status_recommendation_containerrecommendations_upperbound Maximum resources the container can use before the VPA updater evicts it.
# TYPE kube_verticalpodautoscaler_status_recommendation_containerrecommendations_upperbound gauge
kube_verticalpodautoscaler_status_recommendation_containerrecommendations_upperbound{container="container1",namespace="default",resource="cpu",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",unit="core",verticalpodautoscaler="vpa1"} 4
# HELP kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target Target resources the VPA recommends for the container.
# TYPE kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target gauge
kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target{container="container1",namespace="default",resource="cpu",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",unit="core",verticalpodautoscaler="vpa1"} 3
# HELP kube_verticalpodautoscaler_status_recommendation_containerrecommendations_uncappedtarget Target resources the VPA recommends for the container ignoring bounds.
# TYPE kube_verticalpodautoscaler_status_recommendation_containerrecommendations_uncappedtarget gauge
kube_verticalpodautoscaler_status_recommendation_containerrecommendations_uncappedtarget{container="container1",namespace="default",resource="cpu",target_api_version="extensions/v1beta1",target_kind="Deployment",target_name="deployment1",unit="core",verticalpodautoscaler="vpa1"} 6
# HELP kube_hpa_spec_target_metric The metric specifications used by this autoscaler when calculating the desired replica count.
# TYPE kube_hpa_spec_target_metric gauge
kube_hpa_spec_target_metric{namespace="default",hpa="dummy-nginx-ingress-controller",metric_name="cpu",metric_target_type="utilization"} 80
