# The user running dd-agent must have passwordless sudo access for the find
# command to run the postfix check.  Here's an example:
#
# example /etc/sudoers entry:
#          dd-agent ALL=(postfix) NOPASSWD:/usr/bin/find /var/spool/postfix/incoming -type f
#
# Redhat/CentOS/Amazon Linux flavours will need to add:
#          Defaults:dd-agent !requiretty

init_config:
  postfix_user: postfix

# Optional: Set `postqueue: True` to gather mail queue counts using `postqueue -p` without the use of sudo.
# The caveat is that postqueue will gather message counts for only the `hold`, `active`, and `deferred` queues.
# The `incoming` mail queue will not be monitored.
# Postqueue binary is ran with set-group ID privileges, so that it can connect to Postfix daemon processes.
# Only `tags` keys will be used from `instances` definition.
#
# Postfix has internal access controls that limit activities on the mail queue. By default,
# Postfix allows `anyone` to view the queue. On production systems where the Postfix installation
# may be configured with stricter access controls, you may need to grant the dd-agent user access to view
# the mail queue.
#
# postconf -e "authorized_mailq_users = dd-agent"
#
# http://www.postfix.org/postqueue.1.html
#
#        authorized_mailq_users (static:anyone)
#            List of users who are authorized to view the queue.
#
#  postqueue: true
#
# The config_directory option only applies when `postqueue: true`.
# The config_directory is the location of the Postfix configuration directory
# where main.cf lives.
#
# instances:
#  - config_directory: /etc/postfix
#    tags:
#      - optional_tag
#      - optional_tag0

instances:
  - directory: /var/spool/postfix
    queues:
      - incoming
      - active
      - deferred
    tags:
      - optional_tag1
      - optional_tag2
  - directory: /var/spool/postfix-2
    queues:
      - incoming
      - active
      - deferred
    tags:
      - optional_tag3
      - optional_tag4


## Log Section (Available for Agent >=6.0)
##
## type - mandatory - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel - mandatory - Set port if type is tcp or udp. Set path if type is file. Set channel if type is windows_event
## service - mandatory - Name of the service that generated the log
## source  - mandatory - Attribute that defines which Integration sent the logs
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags: - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/

#logs:
#  - type: file
#    path: /var/log/mail.log
#    service: myapp
#    source: postfix
