variables:
  REMINDER_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/integrations-core:reminder
  TAGGER_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/integrations-core:tagger
  VALIDATE_LOG_INTGS: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/integrations-core:validate_log_intgs
  NOTIFIER_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/slack-notifier:latest
  TAGGER_EMAIL: packages@datadoghq.com
  TAGGER_NAME: ci.integrations-core

# Uncomment when/if we modify script to use Jira
#
# release-reminder:
#   image: $REMINDER_IMAGE
#   only:
#     - master
#   script:
#     - ./.gitlab/reminder/release-reminder.sh 2>&1
#   tags: [ "runner:main", "size:large" ]

stages:
  - build
  - validate
  - release
  - notify


validate-log-integrations:
  stage: validate
  image: $VALIDATE_LOG_INTGS
  only:
  - schedules
  variables:
    WEBUI_INTGS_FILE: web-ui/javascript/datadog/logs/lib/integrations/integrations.ts
    LOGS_BACKEND_INTGS_ROOT: logs-backend/service/src/main/resources/integrations/
    INTEGRATIONS_CORE_ROOT: .
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/Datadog/web-ui.git --depth 1
    - ts-node /scripts/parse_ts.ts > logs_integrations.json
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/Datadog/logs-backend.git --depth 1
    - python3 /scripts/validate_log_intgs.py logs_integrations.json
  tags: [ "runner:main", "size:large" ]

notify-slack-on-failure:
  stage: notify
  image: $NOTIFIER_IMAGE
  only:
  - schedules
  variables:
    MESSAGE: "Logs pipelines don't pass validation steps, please investigate $CI_PIPELINE_URL for errors."
  script:
    - postmessage agent-integrations "$MESSAGE" alert
  when: on_failure
  tags: [ "runner:main", "size:large" ]

release-auto:
  stage: release
  image: $TAGGER_IMAGE
  only:
    - master
  except:
    - schedules
  script:
    - ddev --version
    - ddev config set core .
    # Prefix every line with a timestamp
    - ./.gitlab/tagger/tag-release.sh 2>&1 | ts "[%H:%M:%S %Z]  "
  tags: [ "runner:main", "size:large" ]

release-manual:
  stage: release
  image: $TAGGER_IMAGE
  only:
    # Integration release tags e.g. any_check-X.Y.Z-rc.N
    - /.*-\d+\.\d+\.\d+(-(rc|pre|alpha|beta)\.\d+)?$/
  except:
  - schedules
  script:
    # Get tagger info
    - tagger=$(git for-each-ref refs/tags/$CI_COMMIT_TAG  --format='%(taggername) %(taggeremail)')
    # The automatic release builder will trigger this job as a side-effect of
    # tagging releases. To prevent multiple redundant builds we don't trigger
    # the pipeline unless the tag was applied manually.
    - |
      if [[ "$tagger" =~ "$TAGGER_NAME <$TAGGER_EMAIL>" ]]; then
          echo "Skipping, packages have already been built"
      else
          ./.gitlab/tagger/build-packages.sh
      fi
  tags: [ "runner:main", "size:large" ]

reminder-image-builder:
  stage: build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  only:
    changes:
      - .gitlab/reminder/**
    refs:
      - master
  script:
    - docker build --tag $REMINDER_IMAGE ./.gitlab/reminder/
    - docker images $REMINDER_IMAGE
    - docker push $REMINDER_IMAGE
  except: [ tags, schedules ]
  tags: [ "runner:docker", "size:large" ]

tagger-image-builder:
  stage: build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  only:
    changes:
      - .gitlab/tagger/**
      - datadog_checks_dev/**
    refs:
      - master
  script:
    - docker build --tag $TAGGER_IMAGE -f .gitlab/tagger/Dockerfile ./datadog_checks_dev/
    - docker images $TAGGER_IMAGE
    - docker push $TAGGER_IMAGE
  except: [ tags, schedules ]
  tags: [ "runner:docker", "size:large" ]

validate-log-intgs-builder:
  stage: build
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker:18.03.1
  only:
    changes:
      - .gitlab/validate-logs-intgs/**
    refs:
      - schedules
  script:
    - cd .gitlab/validate-logs-intgs/
    - docker build --tag $VALIDATE_LOG_INTGS .
    - docker images $VALIDATE_LOG_INTGS
    - docker push $VALIDATE_LOG_INTGS
  tags: [ "runner:docker", "size:large" ]
