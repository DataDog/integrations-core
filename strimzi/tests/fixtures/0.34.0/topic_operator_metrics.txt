# HELP strimzi_reconciliations_duration_seconds The time the reconciliation takes to complete
# TYPE strimzi_reconciliations_duration_seconds histogram
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="1.0",} 7.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="5.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="10.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="30.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="60.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="120.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="300.0",} 11.0
strimzi_reconciliations_duration_seconds_bucket{kind="KafkaTopic",le="+Inf",} 11.0
strimzi_reconciliations_duration_seconds_count{kind="KafkaTopic",} 11.0
strimzi_reconciliations_duration_seconds_sum{kind="KafkaTopic",} 5.166478504
# HELP strimzi_reconciliations_duration_seconds_max The time the reconciliation takes to complete
# TYPE strimzi_reconciliations_duration_seconds_max gauge
strimzi_reconciliations_duration_seconds_max{kind="KafkaTopic",} 0.0
# HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool
# TYPE jvm_buffer_total_capacity_bytes gauge
jvm_buffer_total_capacity_bytes{id="mapped - 'non-volatile memory'",} 0.0
jvm_buffer_total_capacity_bytes{id="mapped",} 0.0
jvm_buffer_total_capacity_bytes{id="direct",} 4350290.0
# HELP strimzi_resource_state Current state of the resource: 1 ready, 0 fail
# TYPE strimzi_resource_state gauge
strimzi_resource_state{kind="KafkaTopic",name="strimzi-store-topic---effb8e3e057afce1ecf67c3f5d8e4e3ff177fc55",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="connect-cluster-status",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="custom-topic",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="connect-cluster-offsets",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="consumer-offsets---84e7a678d08f4bd226872e5cdd4eb527fadc1c6a",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="my-topic",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="connect-cluster-configs",reason="none",resource_namespace="kafka",} 1.0
strimzi_resource_state{kind="KafkaTopic",name="strimzi-topic-operator-kstreams-topic-store-changelog---b75e702040b99be8a9263134de3507fc0cc4017b",reason="none",resource_namespace="kafka",} 1.0
# HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC
# TYPE jvm_gc_memory_promoted_bytes_total counter
jvm_gc_memory_promoted_bytes_total 2
# HELP vertx_http_server_active_connections Number of opened connections to the server
# TYPE vertx_http_server_active_connections gauge
vertx_http_server_active_connections 1.0
# HELP process_cpu_usage The "recent cpu usage" for the Java Virtual Machine process
# TYPE process_cpu_usage gauge
process_cpu_usage 0.0016714422158548234
# HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution
# TYPE jvm_classes_unloaded_classes_total counter
jvm_classes_unloaded_classes_total 0.0
# HELP vertx_http_server_active_requests Number of requests being processed
# TYPE vertx_http_server_active_requests gauge
vertx_http_server_active_requests{method="GET",} 13.0
# HELP strimzi_reconciliations_total Number of reconciliations done by the operator for individual topics
# TYPE strimzi_reconciliations_total counter
strimzi_reconciliations_total{kind="KafkaTopic",} 91.0
# HELP vertx_http_server_bytes_written_total Number of bytes sent by the server
# TYPE vertx_http_server_bytes_written_total counter
vertx_http_server_bytes_written_total 2119091.0
# HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
# TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id="mapped - 'non-volatile memory'",} 0.0
jvm_buffer_count_buffers{id="mapped",} 0.0
jvm_buffer_count_buffers{id="direct",} 30.0
# HELP system_cpu_usage The "recent cpu usage" of the system the application is running in
# TYPE system_cpu_usage gauge
system_cpu_usage 0.0017330069262001433
# HELP strimzi_resources Number of topics the operator sees
# TYPE strimzi_resources gauge
strimzi_resources{kind="KafkaTopic",} 8.0
# HELP vertx_pool_queue_pending Number of pending elements in queue
# TYPE vertx_pool_queue_pending gauge
vertx_pool_queue_pending{pool_type="worker",} 0.0
# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time
# TYPE system_load_average_1m gauge
system_load_average_1m 0.35
# HELP vertx_pool_ratio Pool usage ratio, only present if maximum pool size could be determined
# TYPE vertx_pool_ratio gauge
vertx_pool_ratio{pool_type="worker",} 0.0
# HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool
# TYPE jvm_buffer_memory_used_bytes gauge
jvm_buffer_memory_used_bytes{id="mapped - 'non-volatile memory'",} 0.0
jvm_buffer_memory_used_bytes{id="mapped",} 0.0
jvm_buffer_memory_used_bytes{id="direct",} 4350291.0
# HELP system_cpu_count The number of processors available to the Java virtual machine
# TYPE system_cpu_count gauge
system_cpu_count 5.0
# HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads
# TYPE jvm_threads_live_threads gauge
jvm_threads_live_threads 63.0
# HELP vertx_pool_in_use Number of resources used
# TYPE vertx_pool_in_use gauge
vertx_pool_in_use{pool_type="worker",} 0.0
# HELP vertx_http_server_errors_total Number of errors
# TYPE vertx_http_server_errors_total counter
vertx_http_server_errors_total 12.0
# HELP vertx_http_server_requests_total Number of processed requests
# TYPE vertx_http_server_requests_total counter
vertx_http_server_requests_total{code="200",method="GET",route="",} 516.0
vertx_http_server_requests_total{code="404",method="GET",route="",} 1.0
vertx_http_server_requests_total{code="400",method="GET",route="",} 12.0
# HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next
# TYPE jvm_gc_memory_allocated_bytes_total counter
jvm_gc_memory_allocated_bytes_total 5.70425344E8
# HELP jvm_threads_states_threads The current number of threads
# TYPE jvm_threads_states_threads gauge
jvm_threads_states_threads{state="runnable",} 22.0
jvm_threads_states_threads{state="blocked",} 0.0
jvm_threads_states_threads{state="waiting",} 34.0
jvm_threads_states_threads{state="timed-waiting",} 7.0
jvm_threads_states_threads{state="new",} 0.0
jvm_threads_states_threads{state="terminated",} 0.0
# HELP strimzi_reconciliations_successful_total Number of reconciliations done by the operator for individual topics which were successful
# TYPE strimzi_reconciliations_successful_total counter
strimzi_reconciliations_successful_total{kind="KafkaTopic",} 94.0
# HELP jvm_memory_used_bytes The amount of used memory
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'",} 1.7885824E7
jvm_memory_used_bytes{area="heap",id="G1 Survivor Space",} 4244480.0
jvm_memory_used_bytes{area="heap",id="G1 Old Gen",} 2.7095552E7
jvm_memory_used_bytes{area="nonheap",id="Metaspace",} 6.2426728E7
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-nmethods'",} 1448448.0
jvm_memory_used_bytes{area="heap",id="G1 Eden Space",} 0.0
jvm_memory_used_bytes{area="nonheap",id="Compressed Class Space",} 6924784.0
jvm_memory_used_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'",} 5549568.0
# HELP vertx_http_server_request_bytes_max Size of requests in bytes
# TYPE vertx_http_server_request_bytes_max gauge
vertx_http_server_request_bytes_max{method="GET",} 0.0
# HELP vertx_http_server_request_bytes Size of requests in bytes
# TYPE vertx_http_server_request_bytes summary
vertx_http_server_request_bytes_count{method="GET",} 517.0
vertx_http_server_request_bytes_sum{method="GET",} 0.0
# HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
# TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 0.0
# HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine
# TYPE jvm_classes_loaded_classes gauge
jvm_classes_loaded_classes 10781.0
# HELP strimzi_reconciliations_locked_total Number of reconciliations skipped because another reconciliation for the same topic was still running
# TYPE strimzi_reconciliations_locked_total counter
strimzi_reconciliations_locked_total{kind="KafkaTopic",} 0.0
# HELP vertx_pool_usage_seconds Time using a resource
# TYPE vertx_pool_usage_seconds summary
vertx_pool_usage_seconds_count{pool_type="worker",} 170.0
vertx_pool_usage_seconds_sum{pool_type="worker",} 5.921031377
# HELP vertx_pool_usage_seconds_max Time using a resource
# TYPE vertx_pool_usage_seconds_max gauge
vertx_pool_usage_seconds_max{pool_type="worker",} 0.009303292
# HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management
# TYPE jvm_memory_max_bytes gauge
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'",} 1.22908672E8
jvm_memory_max_bytes{area="heap",id="G1 Survivor Space",} -1.0
jvm_memory_max_bytes{area="heap",id="G1 Old Gen",} 6.723469312E9
jvm_memory_max_bytes{area="nonheap",id="Metaspace",} -1.0
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-nmethods'",} 5836800.0
jvm_memory_max_bytes{area="heap",id="G1 Eden Space",} -1.0
jvm_memory_max_bytes{area="nonheap",id="Compressed Class Space",} 1.073741824E9
jvm_memory_max_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_threads_daemon_threads The current number of live daemon threads
# TYPE jvm_threads_daemon_threads gauge
jvm_threads_daemon_threads 19.0
# HELP vertx_http_server_response_bytes_max Size of responses in bytes
# TYPE vertx_http_server_response_bytes_max gauge
vertx_http_server_response_bytes_max{code="200",method="GET",route="",} 15690.0
vertx_http_server_response_bytes_max{code="404",method="GET",route="",} 0.0
vertx_http_server_response_bytes_max{code="400",method="GET",route="",} 0.0
# HELP vertx_http_server_response_bytes Size of responses in bytes
# TYPE vertx_http_server_response_bytes summary
vertx_http_server_response_bytes_count{code="200",method="GET",route="",} 516.0
vertx_http_server_response_bytes_sum{code="200",method="GET",route="",} 2119091.0
vertx_http_server_response_bytes_count{code="404",method="GET",route="",} 1.0
vertx_http_server_response_bytes_sum{code="404",method="GET",route="",} 0.0
vertx_http_server_response_bytes_count{code="400",method="GET",route="",} 12.0
vertx_http_server_response_bytes_sum{code="400",method="GET",route="",} 0.0
# HELP strimzi_resources_paused Number of topics the operator sees but does not reconcile due to paused reconciliations
# TYPE strimzi_resources_paused gauge
strimzi_resources_paused{kind="KafkaTopic",} 0.0
# HELP vertx_pool_completed_total Number of elements done with the resource
# TYPE vertx_pool_completed_total counter
vertx_pool_completed_total{pool_type="worker",} 170.0
# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset
# TYPE jvm_threads_peak_threads gauge
jvm_threads_peak_threads 66.0
# HELP vertx_pool_queue_time_seconds_max Time spent in queue before being processed
# TYPE vertx_pool_queue_time_seconds_max gauge
vertx_pool_queue_time_seconds_max{pool_type="worker",} 0.026187542
# HELP vertx_pool_queue_time_seconds Time spent in queue before being processed
# TYPE vertx_pool_queue_time_seconds summary
vertx_pool_queue_time_seconds_count{pool_type="worker",} 170.0
vertx_pool_queue_time_seconds_sum{pool_type="worker",} 1.822415543
# HELP jvm_gc_pause_seconds Time spent in GC pause
# TYPE jvm_gc_pause_seconds summary
jvm_gc_pause_seconds_count{action="end of minor GC",cause="Metadata GC Threshold",} 3.0
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="Metadata GC Threshold",} 0.018
jvm_gc_pause_seconds_count{action="end of minor GC",cause="G1 Preventive Collection",} 1.0
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="G1 Preventive Collection",} 0.005
jvm_gc_pause_seconds_count{action="end of minor GC",cause="G1 Evacuation Pause",} 8.0
jvm_gc_pause_seconds_sum{action="end of minor GC",cause="G1 Evacuation Pause",} 0.046
# HELP jvm_gc_pause_seconds_max Time spent in GC pause
# TYPE jvm_gc_pause_seconds_max gauge
jvm_gc_pause_seconds_max{action="end of minor GC",cause="Metadata GC Threshold",} 0.0
jvm_gc_pause_seconds_max{action="end of minor GC",cause="G1 Preventive Collection",} 0.0
jvm_gc_pause_seconds_max{action="end of minor GC",cause="G1 Evacuation Pause",} 0.006
# HELP strimzi_reconciliations_failed_total Number of reconciliations done by the operator for individual topics which failed
# TYPE strimzi_reconciliations_failed_total counter
strimzi_reconciliations_failed_total{kind="KafkaTopic",} 0.0
# HELP vertx_http_server_response_time_seconds_max Request processing time
# TYPE vertx_http_server_response_time_seconds_max gauge
vertx_http_server_response_time_seconds_max{code="200",method="GET",route="",} 0.001419209
vertx_http_server_response_time_seconds_max{code="404",method="GET",route="",} 0.0
vertx_http_server_response_time_seconds_max{code="400",method="GET",route="",} 2.44875E-4
# HELP vertx_http_server_response_time_seconds Request processing time
# TYPE vertx_http_server_response_time_seconds summary
vertx_http_server_response_time_seconds_count{code="200",method="GET",route="",} 516.0
vertx_http_server_response_time_seconds_sum{code="200",method="GET",route="",} 0.29434741
vertx_http_server_response_time_seconds_count{code="404",method="GET",route="",} 1.0
vertx_http_server_response_time_seconds_sum{code="404",method="GET",route="",} 3.69917E-4
vertx_http_server_response_time_seconds_count{code="400",method="GET",route="",} 12.0
vertx_http_server_response_time_seconds_sum{code="400",method="GET",route="",} 0.004179459
# HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'profiled nmethods'",} 1.7891328E7
jvm_memory_committed_bytes{area="heap",id="G1 Survivor Space",} 8388608.0
jvm_memory_committed_bytes{area="heap",id="G1 Old Gen",} 5.0331648E7
jvm_memory_committed_bytes{area="nonheap",id="Metaspace",} 6.2980096E7
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_committed_bytes{area="heap",id="G1 Eden Space",} 6.7108864E7
jvm_memory_committed_bytes{area="nonheap",id="Compressed Class Space",} 7208960.0
jvm_memory_committed_bytes{area="nonheap",id="CodeHeap 'non-profiled nmethods'",} 5570560.0
# HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool
# TYPE jvm_gc_max_data_size_bytes gauge
jvm_gc_max_data_size_bytes 6.723469312E9
# HELP strimzi_reconciliations_periodical_total Number of periodical reconciliations done by the operator
# TYPE strimzi_reconciliations_periodical_total counter
strimzi_reconciliations_periodical_total{kind="KafkaTopic",} 16.0