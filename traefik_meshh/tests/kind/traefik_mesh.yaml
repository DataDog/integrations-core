---
# Source: traefik-mesh/charts/metrics/templates/grafana-pdb.yaml
---
# Source: traefik-mesh/charts/metrics/templates/prometheus-pdb.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-pdb.yaml
---
# Source: traefik-mesh/templates/controller/controller-pdb.yaml
---
# Source: traefik-mesh/charts/metrics/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-k8s
  namespace: traefik-mesh
  labels:
    app: maesh
    component: prometheus
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-mesh-controller
  namespace: traefik-mesh
  labels:
    app: maesh
    component: controller
automountServiceAccountToken: true
---
# Source: traefik-mesh/templates/coredns/coredns-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-mesh-coredns
  namespace: traefik-mesh
  labels:
    app: maesh
    component: coredns
---
# Source: traefik-mesh/templates/proxy/proxy-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-mesh-proxy
  namespace: traefik-mesh
  labels:
    app: maesh
    component: maesh-mesh
automountServiceAccountToken: false
---
# Source: traefik-mesh/charts/metrics/templates/grafana.yaml
---
# Source: traefik-mesh/charts/metrics/templates/grafana.yaml
---
# Source: traefik-mesh/charts/metrics/templates/prometheus.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-rules
  namespace: traefik-mesh
  labels:
    app: maesh
    component: prometheus
data:
  general.yaml: |
    groups:
      - name: general
        rules:
          - record: job:http_duration_seconds:p99:5m
            expr: histogram_quantile(0.99, sum(rate(http_duration_seconds_bucket[5m])) by (job, le))
          - record: job:http_duration_seconds:p90:5m
            expr: histogram_quantile(0.90, sum(rate(http_duration_seconds_bucket[5m])) by (job, le))
          - record: job:http_duration_seconds:p50:5m
            expr: histogram_quantile(0.50, sum(rate(http_duration_seconds_bucket[5m])) by (job, le))
---
# Source: traefik-mesh/charts/metrics/templates/prometheus.yaml
---
# Source: traefik-mesh/templates/coredns/coredns-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: traefik-mesh
  labels:
    app: maesh
    component: coredns
data:
  Corefile: |
    .:53 {
        errors
        health
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
---
# Source: traefik-mesh/charts/metrics/templates/storage.yaml
---
# Source: traefik-mesh/charts/metrics/templates/storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: traefik-mesh
  labels:
    app: maesh
    component: prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: traefik-mesh/charts/metrics/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  labels:
    app: maesh
    component: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
- apiGroups: ["extensions"]
  resources:
    - ingresses
  verbs: ["get", "list", "watch"]
---
# Source: traefik-mesh/templates/controller/controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-mesh-controller-role
  namespace: traefik-mesh
  labels:
    app: maesh
    component: controller
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - endpoints
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - delete
      - create
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - update
  - apiGroups:
      - access.smi-spec.io
      - specs.smi-spec.io
      - split.smi-spec.io
    resources:
      - traffictargets
      - tcproutes
      - httproutegroups
      - trafficsplits
      - events
    verbs:
      - get
      - list
      - watch
---
# Source: traefik-mesh/templates/coredns/coredns-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: maesh
    component: coredns
  name: traefik-mesh-coredns-role
  namespace: traefik-mesh
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
      - pods
      - namtraefik-mesh
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
# Source: traefik-mesh/charts/metrics/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  labels:
    app: maesh
    component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: traefik-mesh
---
# Source: traefik-mesh/templates/controller/controller-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-mesh-controller
  namespace: traefik-mesh
  labels:
    app: maesh
    component: controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-mesh-controller-role
subjects:
- kind: ServiceAccount
  name: traefik-mesh-controller
  namespace: traefik-mesh
---
# Source: traefik-mesh/templates/coredns/coredns-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: traefik-mesh-coredns
  namespace: traefik-mesh
  labels:
    app: maesh
    component: coredns
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-mesh-coredns-role
subjects:
  - kind: ServiceAccount
    name: traefik-mesh-coredns
    namespace: traefik-mesh
---
# Source: traefik-mesh/charts/metrics/templates/grafana.yaml
---
# Source: traefik-mesh/charts/metrics/templates/prometheus.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-services.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-services.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-services.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-services.yaml
---
# Source: traefik-mesh/templates/controller/controller-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: traefik-mesh-controller
  namespace: traefik-mesh
  labels:
    app: maesh
    component: controller
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: api
  selector:
    app: maesh
    component: controller
    release: "traefik-mesh"
---
# Source: traefik-mesh/templates/coredns/coredns-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: coredns
  namespace: traefik-mesh
  labels:
    app: maesh
    component: coredns
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
spec:
  selector:
    app: maesh
    component: coredns
    release: "traefik-mesh"
  type: ClusterIP
  ports:
    - name: dns
      port: 53
      protocol: UDP
    - name: dns-tcp
      port: 53
      protocol: TCP
    - name: metrics
      port: 9153
      protocol: TCP
---
# Source: traefik-mesh/templates/proxy/proxy-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik-mesh-proxy
  namespace: traefik-mesh
  labels:
    app: maesh
    component: maesh-mesh
spec:
  selector:
    matchLabels:
      app: maesh
      component: maesh-mesh
      release: "traefik-mesh"
  template:
    metadata:
      labels:
        app: maesh
        component: maesh-mesh
        release: "traefik-mesh"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: traefik-mesh-proxy
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      terminationGracePeriodSeconds: 30
      containers:
        - name: traefik-mesh-proxy
          image: "traefik:v2.5"
          imagePullPolicy: IfNotPresent
          args:
            - "--entryPoints.readiness.address=:1081"
            - "--entryPoints.liveness.address=:1082"
            - "--entryPoints.http-5000.address=:5000"
            - "--entryPoints.http-5000.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5001.address=:5001"
            - "--entryPoints.http-5001.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5002.address=:5002"
            - "--entryPoints.http-5002.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5003.address=:5003"
            - "--entryPoints.http-5003.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5004.address=:5004"
            - "--entryPoints.http-5004.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5005.address=:5005"
            - "--entryPoints.http-5005.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5006.address=:5006"
            - "--entryPoints.http-5006.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5007.address=:5007"
            - "--entryPoints.http-5007.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5008.address=:5008"
            - "--entryPoints.http-5008.forwardedHeaders.insecure=true"
            - "--entryPoints.http-5009.address=:5009"
            - "--entryPoints.http-5009.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10000.address=:10000"
            - "--entryPoints.tcp-10000.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10001.address=:10001"
            - "--entryPoints.tcp-10001.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10002.address=:10002"
            - "--entryPoints.tcp-10002.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10003.address=:10003"
            - "--entryPoints.tcp-10003.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10004.address=:10004"
            - "--entryPoints.tcp-10004.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10005.address=:10005"
            - "--entryPoints.tcp-10005.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10006.address=:10006"
            - "--entryPoints.tcp-10006.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10007.address=:10007"
            - "--entryPoints.tcp-10007.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10008.address=:10008"
            - "--entryPoints.tcp-10008.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10009.address=:10009"
            - "--entryPoints.tcp-10009.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10010.address=:10010"
            - "--entryPoints.tcp-10010.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10011.address=:10011"
            - "--entryPoints.tcp-10011.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10012.address=:10012"
            - "--entryPoints.tcp-10012.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10013.address=:10013"
            - "--entryPoints.tcp-10013.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10014.address=:10014"
            - "--entryPoints.tcp-10014.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10015.address=:10015"
            - "--entryPoints.tcp-10015.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10016.address=:10016"
            - "--entryPoints.tcp-10016.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10017.address=:10017"
            - "--entryPoints.tcp-10017.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10018.address=:10018"
            - "--entryPoints.tcp-10018.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10019.address=:10019"
            - "--entryPoints.tcp-10019.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10020.address=:10020"
            - "--entryPoints.tcp-10020.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10021.address=:10021"
            - "--entryPoints.tcp-10021.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10022.address=:10022"
            - "--entryPoints.tcp-10022.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10023.address=:10023"
            - "--entryPoints.tcp-10023.forwardedHeaders.insecure=true"
            - "--entryPoints.tcp-10024.address=:10024"
            - "--entryPoints.tcp-10024.forwardedHeaders.insecure=true"
            - "--entryPoints.udp-15000.address=:15000/udp"
            - "--entryPoints.udp-15001.address=:15001/udp"
            - "--entryPoints.udp-15002.address=:15002/udp"
            - "--entryPoints.udp-15003.address=:15003/udp"
            - "--entryPoints.udp-15004.address=:15004/udp"
            - "--entryPoints.udp-15005.address=:15005/udp"
            - "--entryPoints.udp-15006.address=:15006/udp"
            - "--entryPoints.udp-15007.address=:15007/udp"
            - "--entryPoints.udp-15008.address=:15008/udp"
            - "--entryPoints.udp-15009.address=:15009/udp"
            - "--entryPoints.udp-15010.address=:15010/udp"
            - "--entryPoints.udp-15011.address=:15011/udp"
            - "--entryPoints.udp-15012.address=:15012/udp"
            - "--entryPoints.udp-15013.address=:15013/udp"
            - "--entryPoints.udp-15014.address=:15014/udp"
            - "--entryPoints.udp-15015.address=:15015/udp"
            - "--entryPoints.udp-15016.address=:15016/udp"
            - "--entryPoints.udp-15017.address=:15017/udp"
            - "--entryPoints.udp-15018.address=:15018/udp"
            - "--entryPoints.udp-15019.address=:15019/udp"
            - "--entryPoints.udp-15020.address=:15020/udp"
            - "--entryPoints.udp-15021.address=:15021/udp"
            - "--entryPoints.udp-15022.address=:15022/udp"
            - "--entryPoints.udp-15023.address=:15023/udp"
            - "--entryPoints.udp-15024.address=:15024/udp"
            - "--providers.http.endpoint=http://traefik-mesh-controller.default.svc.cluster.local:9000/api/configuration/current"
            - "--api.dashboard=false"
            - "--api.insecure"
            - "--ping"
            - "--metrics.prometheus=true"
          ports:
            - name: readiness
              containerPort: 1081
            - name: liveness
              containerPort: 1082
            - name: api
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /ping
              port: readiness
            initialDelaySeconds: 3
            periodSeconds: 1
          livenessProbe:
            tcpSocket:
              port: liveness
            initialDelaySeconds: 3
            periodSeconds: 1
          resources:
            requests:
              memory: 50Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 200m
---
# Source: traefik-mesh/charts/metrics/templates/grafana.yaml
---
# Source: traefik-mesh/charts/metrics/templates/prometheus.yaml
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-deployment.yaml
---
# Source: traefik-mesh/templates/controller/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-mesh-controller
  namespace: traefik-mesh
  labels:
    app: maesh
    component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: maesh
      component: controller
      release: "traefik-mesh"
  template:
    metadata:
      labels:
        app: maesh
        component: controller
        release: "traefik-mesh"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4646"
    spec:
      serviceAccountName: traefik-mesh-controller
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      containers:
        - name: traefik-mesh-controller
          image: "traefik/mesh:v1.4.8"
          imagePullPolicy: IfNotPresent
          args:
            - "--namespace=traefik-mesh"
            - "--limitHTTPPort=10"
            - "--limitTCPPort=25"
            - "--limitUDPPort=25"
          resources:
            requests:
              memory: 50Mi
              cpu: 100m
            limits:
              memory: 100Mi
              cpu: 200m
          ports:
            - name: api
              containerPort: 9000
          readinessProbe:
            httpGet:
              path: /api/status/readiness
              port: api
            initialDelaySeconds: 3
            periodSeconds: 1
      initContainers:
        - name: traefik-mesh-prepare
          image: "traefik/mesh:v1.4.8"
          imagePullPolicy: IfNotPresent
          args:
            - "prepare"
            - "--clusterdomain"
            - "cluster.local"
            - "--namespace=traefik-mesh"
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
---
# Source: traefik-mesh/templates/coredns/coredns-deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: traefik-mesh
  labels:
    app: maesh
    component: coredns
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: maesh
      component: coredns
      release: "traefik-mesh"
  template:
    metadata:
      labels:
        app: maesh
        component: coredns
        release: "traefik-mesh"
    spec:
      serviceAccountName: traefik-mesh-coredns
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - maesh
                    - key: component
                      operator: In
                      values:
                        - coredns
                topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
        - name: coredns
          image: coredns/coredns:1.7.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          args: [ "-conf", "/etc/coredns/Corefile" ]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
              readOnly: true
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9153
              name: metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - all
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
              - key: Corefile
                path: Corefile
---
# Source: traefik-mesh/charts/tracing/templates/jaeger-deployment.yaml
#
# Copyright 2017-2019 The Jaeger Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#