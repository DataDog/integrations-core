metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
kubernetes_state.apiservice.condition,gauge,,,,The current condition of this apiservice. Tags:`kube_namespace` `apiservice` `condition` `status`.,0,kubernetes_state_core,k8s_state.as.condition,
kubernetes_state.apiservice.count,gauge,,,,The current count of apiservices.,0,kubernetes_state_core,k8s_state.as.count,
kubernetes_state.configmap.count,gauge,,,,Number of ConfigMaps. Requires ConfigMaps to be added to Cluster Agent collector. Tags: `kube_namespace`.,0,kubernetes_state_core,k8s_state.cm.count,
kubernetes_state.container.cpu_limit,gauge,,,,The value of CPU limit by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.cpu_limit,
kubernetes_state.container.cpu_limit.total,gauge,,,,The total value of CPU limits by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.cpu_limit.total,
kubernetes_state.container.cpu_requested,gauge,,,,The value of CPU requested by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.cpu_req,
kubernetes_state.container.cpu_requested.total,gauge,,,,The total value of CPU requested by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.cpu_req.total,
kubernetes_state.container.gpu_limit,gauge,,,,The value of GPU limit by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `mig_profile` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.gpu_limit,
kubernetes_state.container.gpu_limit.total,gauge,,,,The total value of GPU limits by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.gpu_limit.total,
kubernetes_state.container.gpu_requested,gauge,,,,The value of GPU requested by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `mig_profile` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.gpu_req,
kubernetes_state.container.gpu_requested.total,gauge,,,,The total value of GPU requested by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.gpu_req.total,
kubernetes_state.container.memory_limit,gauge,,,,The value of memory limit by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.mem_limit,
kubernetes_state.container.memory_limit.total,gauge,,,,The total value of memory limits by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.mem_limit.total,
kubernetes_state.container.memory_requested,gauge,,,,The value of memory requested by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.mem_req,
kubernetes_state.container.memory_requested.total,gauge,,,,The total value of memory requested by all containers in the cluster. Tags:`kube_namespace` `kube_container_name` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.container.mem_req.total,
kubernetes_state.container.network_bandwidth_limit,gauge,,,,The value of network bandwidth limit for a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,-1,kubernetes_state_core,k8s_state.container.band_limit,
kubernetes_state.container.network_bandwidth_requested,gauge,,,,The value of network bandwidth requested by a container. Tags:`kube_namespace` `pod_name` `kube_container_name` `node` `resource` `unit` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.band_req,
kubernetes_state.container.ready,gauge,,,,Describes whether the containers readiness check succeeded. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.rdy,
kubernetes_state.container.restarts,gauge,,,,The number of container restarts per container. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.restarts,
kubernetes_state.container.running,gauge,,,,Describes whether the container is currently in running state. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.running,
kubernetes_state.container.status_report.count.terminated,gauge,,,,Describes the reason the container is currently in terminated state. Tags:`kube_namespace` `pod_name` `kube_container_name` `reason` (`env` `service` `version` from standard labels).,-1,kubernetes_state_core,k8s_state.container.status_report.count.term,
kubernetes_state.container.status_report.count.waiting,gauge,,,,Describes the reason the container is currently in waiting state. Tags:`kube_namespace` `pod_name` `kube_container_name` `reason` (`env` `service` `version` from standard labels).,-1,kubernetes_state_core,k8s_state.container.status_report.count.wait,
kubernetes_state.container.terminated,gauge,,,,Describes whether the container is currently in terminated state. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.term,
kubernetes_state.container.waiting,gauge,,,,Describes whether the container is currently in waiting state. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.container.wait,
kubernetes_state.crd.condition,gauge,,,,The current condition of this custom resource definition. Tags: `customresourcedefinition` `condition` `status`.,0,kubernetes_state_core,k8s_state.crd.condition,
kubernetes_state.crd.count,gauge,,,,Number of custom resource definitions.,0,kubernetes_state_core,k8s_state.crd.count,
kubernetes_state.cronjob.count,gauge,,,,Number of cronjobs. Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.cronjob.count,
kubernetes_state.cronjob.duration_since_last_schedule,gauge,,,,The duration since the last time the cronjob was scheduled. Tags:`kube_cronjob` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.cronjob.last,
kubernetes_state.cronjob.spec_suspend,gauge,,,,Suspend flag tells the controller to suspend subsequent executions. Tags:`kube_namespace` `kube_cronjob` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.cronjob.suspend,
kubernetes_state.daemonset.count,gauge,,,,Number of DaemonSets. Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.ds.count,
kubernetes_state.daemonset.daemons_available,gauge,,,,The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.daemons_available,
kubernetes_state.daemonset.daemons_unavailable,gauge,,,,The number of nodes that should be running the daemon pod and have none of the daemon pod running and available. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.daemons_unavailable,
kubernetes_state.daemonset.desired,gauge,,,,The number of nodes that should be running the daemon pod. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.desired,
kubernetes_state.daemonset.misscheduled,gauge,,,,The number of nodes running a daemon pod but are not supposed to. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,-1,kubernetes_state_core,k8s_state.ds.misscheduled,
kubernetes_state.daemonset.ready,gauge,,,,The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.ready,
kubernetes_state.daemonset.scheduled,gauge,,,,The number of nodes running at least one daemon pod and are supposed to. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.scheduled,
kubernetes_state.daemonset.updated,gauge,,,,The total number of nodes that are running updated daemon pod. Tags:`kube_daemon_set` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.ds.updated,
kubernetes_state.deployment.condition,gauge,,,,The current status conditions of a deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.condition,
kubernetes_state.deployment.count,gauge,,,,Number of deployments. Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.deployment.count,
kubernetes_state.deployment.paused,gauge,,,,Whether the deployment is paused and will not be processed by the deployment controller. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.paused,
kubernetes_state.deployment.replicas,gauge,,,,The number of replicas per deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas,
kubernetes_state.deployment.replicas_available,gauge,,,,The number of available replicas per deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas_available,
kubernetes_state.deployment.replicas_desired,gauge,,,,Number of desired pods for a deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas_desired,
kubernetes_state.deployment.replicas_ready,gauge,,,,The number of ready replicas per deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas_ready,
kubernetes_state.deployment.replicas_unavailable,gauge,,,,The number of unavailable replicas per deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas_unavailable,
kubernetes_state.deployment.replicas_updated,gauge,,,,The number of updated replicas per deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.replicas_updated,
kubernetes_state.deployment.rollingupdate.max_surge,gauge,,,,Maximum number of replicas that can be scheduled above the desired number of replicas during a rolling update of a deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.rollupdate.max_surge,
kubernetes_state.deployment.rollingupdate.max_unavailable,gauge,,,,Maximum number of unavailable replicas during a rolling update of a deployment. Tags:`kube_deployment` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.deployment.rollupdate.max_unavail,
kubernetes_state.endpoint.address_available,gauge,,,,Number of addresses available in endpoint. Tags:`endpoint` `kube_namespace`.,0,kubernetes_state_core,k8s_state.endpoint.address_avail,
kubernetes_state.endpoint.address_not_ready,gauge,,,,Number of addresses not ready in endpoint. Tags:`endpoint` `kube_namespace`.,-1,kubernetes_state_core,k8s_state.endpoint.address_not_ready,
kubernetes_state.endpoint.count,gauge,,,,Number of endpoints. Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.endpoint.count,
kubernetes_state.hpa.condition,gauge,,,,The condition of this autoscaler. Tags:`kube_namespace` `horizontalpodautoscaler` `condition` `status`.,0,kubernetes_state_core,k8s_state.hpa.status,
kubernetes_state.hpa.count,gauge,,,,Number of horizontal pod autoscaler. Tags: `kube_namespace`.,0,kubernetes_state_core,k8s_state.hpa.count,
kubernetes_state.hpa.current_replicas,gauge,,,,Current number of replicas of pods managed by this autoscaler. Tags:`kube_namespace` `horizontalpodautoscaler`.,0,kubernetes_state_core,k8s_state.hpa.current_replicas,
kubernetes_state.hpa.desired_replicas,gauge,,,,Desired number of replicas of pods managed by this autoscaler. Tags:`kube_namespace` `horizontalpodautoscaler`.,0,kubernetes_state_core,k8s_state.hpa.desired_replicas,
kubernetes_state.hpa.max_replicas,gauge,,,,Upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas. Tags:`kube_namespace` `horizontalpodautoscaler`.,0,kubernetes_state_core,k8s_state.hpa.max_replicas,
kubernetes_state.hpa.min_replicas,gauge,,,,Lower limit for the number of pods that can be set by the autoscaler default 1. Tags:`kube_namespace` `horizontalpodautoscaler`.,0,kubernetes_state_core,k8s_state.hpa.min_replicas,
kubernetes_state.hpa.spec_target_metric,gauge,,,,The metric specifications used by this autoscaler when calculating the desired replica count. Tags:`kube_namespace` `horizontalpodautoscaler` `metric_name` `metric_target_type`.,0,kubernetes_state_core,k8s_state.hpa.spec_target,
kubernetes_state.hpa.status_target_metric,gauge,,,,The current metric status used by this autoscaler when calculating the desired replica count. Tags:`kube_namespace` `horizontalpodautoscaler` `metric_name` `metric_target_type`.,0,kubernetes_state_core,k8s_state.hpa.status_target_metric,
kubernetes_state.ingress.count,gauge,,,,Number of ingresses. Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.ingress.count,
kubernetes_state.ingress.path,gauge,,,,Information about the ingress path. Tags:`kube_namespace` `kube_ingress_path` `kube_ingress` `kube_service` `kube_service_port` `kube_ingress_host` .,0,kubernetes_state_core,k8s_state.ingress.path,
kubernetes_state.initcontainer.restarts,gauge,,,,Describes whether the number of restarts for the init container. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.initcontainer.restarts,
kubernetes_state.initcontainer.waiting,gauge,,,,Describes whether the init container is currently in waiting state. Tags:`kube_namespace` `pod_name` `kube_container_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.initcontainer.wait,
kubernetes_state.job.completion.failed,gauge,,,,The job has failed its execution. Tags:`kube_job` or `kube_cronjob` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.job.comp.failed,
kubernetes_state.job.completion.succeeded,gauge,,,,The job has completed its execution. Tags:`kube_job` or `kube_cronjob` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.job.comp.succeeded,
kubernetes_state.job.count,gauge,,,,Number of jobs. Tags:`kube_namespace` `kube_cronjob`.,0,kubernetes_state_core,k8s_state.job.count,
kubernetes_state.job.duration,gauge,,,,Time elapsed between the start and completion time of the job or the current time if the job is still running. Tags:`kube_job` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.job.duration,
kubernetes_state.job.failed,gauge,,,,The number of pods which reached Phase Failed. Tags:`kube_job` or `kube_cronjob` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.job.failed,
kubernetes_state.job.succeeded,gauge,,,,The number of pods which reached Phase Succeeded. Tags:`kube_job` or `kube_cronjob` `kube_namespace` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.job.succeeded,
kubernetes_state.limitrange.cpu.default,gauge,,,,Information about CPU limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.cpu.default,
kubernetes_state.limitrange.cpu.default_request,gauge,,,,Information about CPU limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.cpu.default_request,
kubernetes_state.limitrange.cpu.max,gauge,,,,Information about CPU limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.cpu.max,
kubernetes_state.limitrange.cpu.max_limit_request_ratio,gauge,,,,Information about CPU limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.cpu.max_ratio,
kubernetes_state.limitrange.cpu.min,gauge,,,,Information about CPU limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.cpu.min,
kubernetes_state.limitrange.memory.default,gauge,,,,Information about memory limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.mem.default,
kubernetes_state.limitrange.memory.default_request,gauge,,,,Information about memory limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.mem.default_request,
kubernetes_state.limitrange.memory.max,gauge,,,,Information about memory limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.mem.max,
kubernetes_state.limitrange.memory.max_limit_request_ratio,gauge,,,,Information about memory limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.mem.max_ratio,
kubernetes_state.limitrange.memory.min,gauge,,,,Information about memory limit range usage by constraint. Tags:`kube_namespace` `limitrange` `type`.,0,kubernetes_state_core,k8s_state.mem.min,
kubernetes_state.namespace.count,gauge,,,,Number of namespaces. Tags:`phase`.,0,kubernetes_state_core,k8s_state.ns.count,
kubernetes_state.node.age,gauge,,second,,The time in seconds since the creation of the node. Tags:`node`.,0,kubernetes_state_core,k8s_state.node.age,
kubernetes_state.node.by_condition,gauge,,,,The condition of a cluster node. Tags:`condition` `node` `status`.,0,kubernetes_state_core,k8s_state.node.by_cond,
kubernetes_state.node.count,gauge,,,,Number of nodes. Tags:`kernel_version` `os_image` `container_runtime_version` `kubelet_version`.,0,kubernetes_state_core,k8s_state.node.count,
kubernetes_state.node.cpu_allocatable,gauge,,,,The allocatable CPU of a node that is available for scheduling. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.cpu_allocatable,
kubernetes_state.node.cpu_allocatable.total,gauge,,,,The total allocatable CPU of all nodes in the cluster that is available for scheduling.,0,kubernetes_state_core,k8s_state.node.cpu_allocatable.total,
kubernetes_state.node.cpu_capacity,gauge,,,,The CPU capacity of a node. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.cpu_capacity,
kubernetes_state.node.cpu_capacity.total,gauge,,,,The total CPU capacity of all nodes in the cluster.,0,kubernetes_state_core,k8s_state.node.cpu_capacity.total,
kubernetes_state.node.gpu_allocatable,gauge,,,,The allocatable GPU of a node that is available for scheduling. Tags:`node` `resource` `mig_profile` `unit`.,0,kubernetes_state_core,k8s_state.node.gpu_allocatable,
kubernetes_state.node.gpu_allocatable.total,gauge,,,,The total allocatable GPU of all nodes in the cluster that is available for scheduling.,0,kubernetes_state_core,k8s_state.node.gpu_allocatable.total,
kubernetes_state.node.gpu_capacity,gauge,,,,The GPU capacity of a node. Tags:`node` `resource` `mig_profile` `unit`.,0,kubernetes_state_core,k8s_state.node.gpu_capacity,
kubernetes_state.node.gpu_capacity.total,gauge,,,,The total GPU capacity of all nodes in the cluster.,0,kubernetes_state_core,k8s_state.node.gpu_capacity.total,
kubernetes_state.node.ephemeral_storage_allocatable,gauge,,,,The allocatable ephemeral-storage of a node that is available for scheduling. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.ephemeral_storage_allocatable,
kubernetes_state.node.ephemeral_storage_capacity,gauge,,,,The ephemeral-storage capacity of a node. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.ephemeral_storage_capacity,
kubernetes_state.node.memory_allocatable,gauge,,,,The allocatable memory of a node that is available for scheduling. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.memory_allocatable,
kubernetes_state.node.memory_allocatable.total,gauge,,,,The total allocatable memory of all nodes in the cluster that is available for scheduling.,0,kubernetes_state_core,k8s_state.node.memory_allocatable.total,
kubernetes_state.node.memory_capacity,gauge,,,,The memory capacity of a node. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.memory_capacity,
kubernetes_state.node.memory_capacity.total,gauge,,,,The total memory capacity of all nodes in the cluster.,0,kubernetes_state_core,k8s_state.node.memory_capacity.total,
kubernetes_state.node.network_bandwidth_allocatable,gauge,,,,The allocatable network bandwidth of a node that is available for scheduling. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.band_allocatable,
kubernetes_state.node.network_bandwidth_capacity,gauge,,,,The network bandwidth capacity of a node. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.band_capacity,
kubernetes_state.node.pods_allocatable,gauge,,,,The allocatable memory of a node that is available for scheduling. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.pods_allocatable,
kubernetes_state.node.pods_capacity,gauge,,,,The pods capacity of a node. Tags:`node` `resource` `unit`.,0,kubernetes_state_core,k8s_state.node.pods_capacity,
kubernetes_state.node.status,gauge,,,,Whether the node can schedule new pods. Tags:`node` `status`.,0,kubernetes_state_core,k8s_state.node.status,
kubernetes_state.pdb.disruptions_allowed,gauge,,,,Number of pod disruptions that are currently allowed. Tags:`kube_namespace` `poddisruptionbudget`.,0,kubernetes_state_core,k8s_state.pdb.disruptions_allowed,
kubernetes_state.pdb.pods_desired,gauge,,,,Minimum desired number of healthy pods. Tags:`kube_namespace` `poddisruptionbudget`.,0,kubernetes_state_core,k8s_state.pdb.pods_desired,
kubernetes_state.pdb.pods_healthy,gauge,,,,Current number of healthy pods. Tags:`kube_namespace` `poddisruptionbudget`.,0,kubernetes_state_core,k8s_state.pdb.pods_healthy,
kubernetes_state.pdb.pods_total,gauge,,,,Total number of pods counted by this disruption budget. Tags:`kube_namespace` `poddisruptionbudget`.,0,kubernetes_state_core,k8s_state.pdb.pods_total,
kubernetes_state.persistentvolume.by_phase,gauge,,,,The phase indicates if a volume is available bound to a claim or released by a claim. Tags:`persistentvolume` `storageclass` `phase`.,0,kubernetes_state_core,k8s_state.pv.by_phase,
kubernetes_state.persistentvolume.capacity,gauge,,,,Persistentvolume capacity in bytes. Tags:`persistentvolume` `storageclass`.,0,kubernetes_state_core,k8s_state.pv.capacity,
kubernetes_state.persistentvolumeclaim.access_mode,gauge,,,,The access mode(s) specified by the persistent volume claim. Tags:`kube_namespace` `persistentvolumeclaim` `access_mode` `storageclass`.,0,kubernetes_state_core,k8s_state.pvc.access_mode,
kubernetes_state.persistentvolumeclaim.request_storage,gauge,,,,The capacity of storage requested by the persistent volume claim. Tags:`kube_namespace` `persistentvolumeclaim` `storageclass`.,0,kubernetes_state_core,k8s_state.pvc.request,
kubernetes_state.persistentvolumeclaim.status,gauge,,,,The phase the persistent volume claim is currently in. Tags:`kube_namespace` `persistentvolumeclaim` `phase` `storageclass`.,-1,kubernetes_state_core,k8s_state.pvc.status,
kubernetes_state.pod.age,gauge,,second,,The time in seconds since the creation of the pod. Tags:`node` `kube_namespace` `pod_name` `pod_phase` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.age,
kubernetes_state.pod.count,gauge,,,,Number of Pods. Tags:`node` `kube_namespace` `kube_<owner kind>`.,0,kubernetes_state_core,k8s_state.pod.count,
kubernetes_state.pod.ready,gauge,,,,Describes whether the pod is ready to serve requests. Tags:`node` `kube_namespace` `pod_name` `condition` (`env` `service` `version` from standard labels).,1,kubernetes_state_core,k8s_state.pod.ready,
kubernetes_state.pod.scheduled,gauge,,,,Describes the status of the scheduling process for the pod. Tags:`node` `kube_namespace` `pod_name` `condition` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.scheduled,
kubernetes_state.pod.status_phase,gauge,,,,The pods current phase. Tags:`node` `kube_namespace` `pod_name` `pod_phase` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.status_phase,
kubernetes_state.pod.unschedulable,gauge,,,,Describes the unschedulable status for the pod. Tags:`kube_namespace` `pod_name` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.unschedulable,
kubernetes_state.pod.uptime,gauge,,,,The time in seconds since the pod has been scheduled and acknowledged by the Kubelet. Tags:`node` `kube_namespace` `pod_name` `pod_phase` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.uptime,
kubernetes_state.pod.tolerations,gauge,,,,Information about the pod tolerations,0,kubernetes_state_core,k8s_state.pod.tolerations,
kubernetes_state.pod.volumes.persistentvolumeclaims_readonly,gauge,,,,Describes whether a persistentvolumeclaim is mounted read only. Tags:`node` `kube_namespace` `pod_name` `volume` `persistentvolumeclaim` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.pod.pvc_readonly,
kubernetes_state.replicaset.count,gauge,,,,Number of ReplicaSets Tags:`kube_namespace` `kube_deployment`.,0,kubernetes_state_core,k8s_state.rs.count,
kubernetes_state.replicaset.fully_labeled_replicas,gauge,,,,The number of fully labeled replicas per ReplicaSet. Tags:`kube_namespace` `kube_replica_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.rs.fully_labeled,
kubernetes_state.replicaset.replicas,gauge,,,,The number of replicas per ReplicaSet. Tags:`kube_namespace` `kube_replica_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.rs.replicas,
kubernetes_state.replicaset.replicas_desired,gauge,,,,Number of desired pods for a ReplicaSet. Tags:`kube_namespace` `kube_replica_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.rs.replicas_desired,
kubernetes_state.replicaset.replicas_ready,gauge,,,,The number of ready replicas per ReplicaSet. Tags:`kube_namespace` `kube_replica_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.rs.replicas_rdy,
kubernetes_state.replicationcontroller.fully_labeled_replicas,gauge,,,,The number of fully labeled replicas per ReplicationController. Tags:`kube_namespace` `kube_replication_controller`.,0,kubernetes_state_core,k8s_state.rc.fully_labeled,
kubernetes_state.replicationcontroller.replicas,gauge,,,,The number of replicas per ReplicationController. Tags:`kube_namespace` `kube_replication_controller`.,0,kubernetes_state_core,k8s_state.rc.replicas,
kubernetes_state.replicationcontroller.replicas_available,gauge,,,,The number of available replicas per ReplicationController. Tags:`kube_namespace` `kube_replication_controller`.,0,kubernetes_state_core,k8s_state.rc.replicas_available,
kubernetes_state.replicationcontroller.replicas_desired,gauge,,,,Number of desired pods for a ReplicationController. Tags:`kube_namespace` `kube_replication_controller`.,0,kubernetes_state_core,k8s_state.rc.replicas_desired,
kubernetes_state.replicationcontroller.replicas_ready,gauge,,,,The number of ready replicas per ReplicationController. Tags:`kube_namespace` `kube_replication_controller`.,0,kubernetes_state_core,k8s_state.rc.replicas_rdy,
kubernetes_state.resourcequota.count_configmaps.limit,gauge,,,,Information about resource quota limits by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.cm.limit,
kubernetes_state.resourcequota.count_configmaps.used,gauge,,,,Information about resource quota usage by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.cm.used,
kubernetes_state.resourcequota.count_secrets.limit,gauge,,,,Information about resource quota limits by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.secrets.limit,
kubernetes_state.resourcequota.count_secrets.used,gauge,,,,Information about resource quota usage by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.secrets.used,
kubernetes_state.resourcequota.pods.limit,gauge,,,,Information about resource quota limits by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.pods.limit,
kubernetes_state.resourcequota.pods.used,gauge,,,,Information about resource quota usage by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.pods.used,
kubernetes_state.resourcequota.requests.cpu.limit,gauge,,,,Information about resource quota limits by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.cpu_req.limit,
kubernetes_state.resourcequota.requests.cpu.used,gauge,,,,Information about resource quota usage by resource. Tags:`kube_namespace` `resourcequota`.,0,kubernetes_state_core,k8s_state.cpu_req.used,
kubernetes_state.secret.count,gauge,,,,Number of Secrets. Requires Secrets to be added to Cluster Agent collector. Tags: `kube_namespace`.,0,kubernetes_state_core,k8s_state.s.count,
kubernetes_state.secret.type,gauge,,,,Type about secret. Tags:`kube_namespace` `secret` `type`.,0,kubernetes_state_core,k8s_state.secret.type,
kubernetes_state.service.count,gauge,,,,Number of services. Tags:`kube_namespace` `type`.,0,kubernetes_state_core,k8s_state.svc.count,
kubernetes_state.service.type,gauge,,,,Service types. Tags:`kube_namespace` `kube_service` `type`.,0,kubernetes_state_core,k8s_state.svc.type,
kubernetes_state.statefulset.count,gauge,,,,Number of StatefulSets Tags:`kube_namespace`.,0,kubernetes_state_core,k8s_state.statefulset.count,
kubernetes_state.statefulset.replicas,gauge,,,,The number of replicas per StatefulSet. Tags:`kube_namespace` `kube_stateful_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.statefulset.replicas,
kubernetes_state.statefulset.replicas_current,gauge,,,,The number of current replicas per StatefulSet. Tags:`kube_namespace` `kube_stateful_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.statefulset.replicas_current,
kubernetes_state.statefulset.replicas_desired,gauge,,,,Number of desired pods for a StatefulSet. Tags:`kube_namespace` `kube_stateful_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.statefulset.replicas_desired,
kubernetes_state.statefulset.replicas_ready,gauge,,,,The number of ready replicas per StatefulSet. Tags:`kube_namespace` `kube_stateful_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.statefulset.replicas_ready,
kubernetes_state.statefulset.replicas_updated,gauge,,,,The number of updated replicas per StatefulSet. Tags:`kube_namespace` `kube_stateful_set` (`env` `service` `version` from standard labels).,0,kubernetes_state_core,k8s_state.statefulset.replicas_updated,
kubernetes_state.vpa.count,gauge,,,,Number of vertical pod autoscaler. Tags: `kube_namespace`.,0,kubernetes_state_core,k8s_state.vpa.count,
kubernetes_state.vpa.lower_bound,gauge,,,,Minimum resources the container can use before the VerticalPodAutoscaler updater evicts it. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.lower_bound,
kubernetes_state.vpa.spec_container_maxallowed,gauge,,,,Maximum resources the VerticalPodAutoscaler can set for containers matching the name. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.maxallowed,
kubernetes_state.vpa.spec_container_minallowed,gauge,,,,Minimum resources the VerticalPodAutoscaler can set for containers matching the name. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.minallowed,
kubernetes_state.vpa.target,gauge,,,,Target resources the VerticalPodAutoscaler recommends for the container. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.target,
kubernetes_state.vpa.uncapped_target,gauge,,,,Target resources the VerticalPodAutoscaler recommends for the container ignoring bounds. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.uncapped_target,
kubernetes_state.vpa.update_mode,gauge,,,,Update mode of the VerticalPodAutoscaler. Tags:`kube_namespace` `verticalpodautoscaler` `target_api_version` `target_kind` `target_name` `update_mode`.,0,kubernetes_state_core,k8s_state.vpa.update_mode,
kubernetes_state.vpa.upperbound,gauge,,,,Maximum resources the container can use before the VerticalPodAutoscaler updater evicts it. Tags:`kube_namespace` `verticalpodautoscaler` `kube_container_name` `resource` `target_api_version` `target_kind` `target_name` `unit`.,0,kubernetes_state_core,k8s_state.vpa.upper_bound,
