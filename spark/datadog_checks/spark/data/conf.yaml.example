init_config:

    ## @param proxy - object - optional
    ## Set HTTP or HTTPS proxies for all instances. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported like so:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## If set to true, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

instances:

    ## @param spark_url - string - required
    ## The Spark check can retrieve metrics from Standalone Spark, YARN and Mesos.
    ##
    ## For Spark Standalone, `spark_url` must be set to the Spark master's web UI.
    ## This is "http://localhost:8080" by default.
    ##
    ## For YARN, `spark_url` must be set to YARN's resource manager address. The
    ## ResourceManager host name can be found in the yarn-site.xml conf file
    ## under the `property yarn.resourcemanager.address` The ResourceManager port
    ## can be found in the yarn-site.xml conf file under the property
    ## `yarn.resourcemanager.webapp.address`. This is "http://localhost:8088"
    ## by default.
    ##
    ## For Mesos, `spark_url` must be set to the Mesos master's web UI. This is
    ## "http://<master_ip>:5050" by default, where `<master_ip>` is the IP
    ## address or resolvable host name for the Mesos master.
    ##
    ## For Kubernetes or a standalone spark driver, `spark_url` must be set to the spark application driver IP.
    ## "http://<driver_ip>:4040" by default, where `<driver_ip>` is the IP
    ## address or resolvable spark driver service name.
    #
  - spark_url: http://localhost:8080

    ## @param cluster_name - string - required
    ## A friendly name for the cluster.
    #
    cluster_name: <CLUSTER_NAME>

    ## @param spark_cluster_mode - string - optional - default: spark_yarn_mode
    ## To enable monitoring of a Standalone Spark cluster, the spark cluster
    ## mode must be set. Choose the cluster mode between :
    ##  * `spark_yarn_mode`
    ##  * `spark_standalone_mode`
    ##  * `spark_mesos_mode`
    ##  * `spark_driver_mode`
    #
    # spark_cluster_mode: spark_yarn_mode

    ## @param spark_ui_ports - list of integers - optional
    ## If you're using multiple frameworks with Mesos, you can specify which
    ## port(s) the Spark Web UI runs on and the check filters out the frameworks
    ## whose port don't match. If the check attempts to connect to a framework that
    ## requires authentication it will fail; this is to prevent that.
    #
    # spark_ui_ports:
    #   - <PORT_1>
    #   - <PORT_2>

    ## @param spark_pre_20_mode - boolean - optional - default: false
    ## To use an older (versions prior to 2.0) Standalone Spark cluster,
    ## the 'spark_pre_20_mode' must be set to true
    #
    # spark_pre_20_mode: false

    ## @param spark_proxy_enabled - boolean - optional - default: false
    ## If you have enabled the spark UI proxy, set this to `true`
    #
    # spark_proxy_enabled: false

    ## @param streaming_metrics - boolean - optional - default: true
    ## Enable collection of streaming statistics. Spark Structured Streaming metrics are currently not supported.
    #
    # streaming_metrics: true

    ## @param tags - list of key:value elements - optional
    ## List of tags to attach to every metric, event, and service check emitted by this Integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param proxy - object - optional
    ## This overrides the `proxy` setting in `init_config`.
    ##
    ## Set HTTP or HTTPS proxies. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported like so:
    ##
    ## socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #     - <HOSTNAME_1>
    #     - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## This overrides the `skip_proxy` setting in `init_config`.
    ##
    ## If set to true, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

    ## @param username - string - optional
    ## The username to use if services are behind basic auth.
    #
    # username: <USERNAME>

    ## @param ntlm_domain - string - optional
    ## If your services uses NTLM authentication, you can optionally
    ## specify a domain that will be used in the check. For NTLM Auth,
    ## append the username to domain, not as the `username` parameter.
    ## Example: example_ntlm_domain\example_username
    #
    # ntlm_domain: <DOMAIN>

    ## @param password - string - optional
    ## The password to use if services are behind basic or NTLM auth.
    #
    # password: <PASSWORD>

    ## @param kerberos_auth - string - optional - default: disabled
    ## If your service uses Kerberos authentication, you can specify the Kerberos
    ## strategy to use between:
    ##  * required
    ##  * optional
    ##  * disabled
    ##
    ## See https://github.com/requests/requests-kerberos#mutual-authentication
    #
    # kerberos_auth: disabled

    ## @param kerberos_delegate - boolean - optional - default: false
    ## Set to true to enable kerberos delegation of credentials to a server that requests delegation.
    ## See https://github.com/requests/requests-kerberos#delegation
    #
    # kerberos_delegate: false

    ## @param kerberos_force_initiate - boolean - optional - default: false
    ## Set to true to preemptively initiate the Kerberos GSS exchange and present a Kerberos ticket on the initial
    ## request (and all subsequent).
    ## See https://github.com/requests/requests-kerberos#preemptive-authentication
    #
    # kerberos_force_initiate: false

    ## @param kerberos_hostname - string - optional
    ## Override the hostname used for the Kerberos GSS exchange if its DNS name doesn't match its kerberos
    ## hostname (eg, behind a content switch or load balancer).
    ## See https://github.com/requests/requests-kerberos#hostname-override
    #
    # kerberos_hostname: null

    ## @param kerberos_principal - string - optional
    ## Set an explicit principal, to force Kerberos to look for a matching credential cache for the named user.
    ## See https://github.com/requests/requests-kerberos#explicit-principal
    #
    # kerberos_principal: null

    ## @param kerberos_keytab - string - optional
    ## Set the path to your Kerberos key tab file.
    #
    # kerberos_keytab: <KEYTAB_FILE_PATH>

    ## @param kerberos_cache - string - optional
    ## Sets the KRB5CCNAME environment variable.
    ## It should point to a credential cache with a valid TGT.
    #
    # kerberos_cache: <KRB5CCNAME>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## If you disable `tls_verify` you will receive security warnings in logs.
    ## Disable those by setting `tls_ignore_warning` to true.
    #
    # tls_ignore_warning: false

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificateâ€™s authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param headers - list of key:value elements - optional
    ## The headers parameter allows you to send specific headers with every request.
    ## This is useful for explicitly specifying the host header or adding headers for
    ## authorization purposes.
    ##
    ## This overrides any default headers.
    #
    # headers:
    #   Host: alternative.host.example.com
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param timeout - integer - optional - default: 10
    ## The timeout for connecting to services.
    #
    # timeout: 10

    ## @param log_requests - boolean - optional - default: false
    ## Whether or not to debug log the HTTP(S) requests made, including the method and URL.
    #
    # log_requests: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling for increased performance.
    #
    # persist_connections: false
