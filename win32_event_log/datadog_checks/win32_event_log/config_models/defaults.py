# (C) Datadog, Inc. 2021-present
# All rights reserved
# Licensed under a 3-clause BSD style license (see LICENSE)

# This file is autogenerated.
# To change this file you should edit assets/configuration/spec.yaml and then run the following commands:
#     ddev -x validate config -s <INTEGRATION_NAME>
#     ddev -x validate models -s <INTEGRATION_NAME>

from datadog_checks.base.utils.models.fields import get_default_field_value


def shared_default_event_priority(_field, _value):
    return 'normal'


def shared_event_priority(_field, _value):
    return 'normal'


def shared_interpret_messages(_field, _value):
    return True


def shared_service(field, value):
    return get_default_field_value(field, value)


def shared_tag_event_id(_field, _value):
    return False


def shared_tag_sid(_field, _value):
    return False


def instance_auth_type(_field, _value):
    return 'default'


def instance_bookmark_frequency(_field, _value):
    return '<PAYLOAD_SIZE>'


def instance_disable_generic_tags(_field, _value):
    return False


def instance_domain(field, value):
    return get_default_field_value(field, value)


def instance_empty_default_hostname(_field, _value):
    return False


def instance_event_format(_field, _value):
    return ['Message']


def instance_event_id(field, value):
    return get_default_field_value(field, value)


def instance_event_priority(_field, _value):
    return 'normal'


def instance_excluded_messages(field, value):
    return get_default_field_value(field, value)


def instance_filters(field, value):
    return get_default_field_value(field, value)


def instance_host(_field, _value):
    return 'localhost'


def instance_included_messages(field, value):
    return get_default_field_value(field, value)


def instance_interpret_messages(_field, _value):
    return True


def instance_legacy_mode(_field, _value):
    return True


def instance_log_file(field, value):
    return get_default_field_value(field, value)


def instance_message_filters(field, value):
    return get_default_field_value(field, value)


def instance_metric_patterns(field, value):
    return get_default_field_value(field, value)


def instance_min_collection_interval(_field, _value):
    return 15


def instance_password(field, value):
    return get_default_field_value(field, value)


def instance_path(field, value):
    return get_default_field_value(field, value)


def instance_payload_size(_field, _value):
    return 10


def instance_query(field, value):
    return get_default_field_value(field, value)


def instance_server(_field, _value):
    return 'localhost'


def instance_service(field, value):
    return get_default_field_value(field, value)


def instance_source_name(field, value):
    return get_default_field_value(field, value)


def instance_start(_field, _value):
    return 'now'


def instance_tag_event_id(_field, _value):
    return False


def instance_tag_sid(_field, _value):
    return False


def instance_tags(field, value):
    return get_default_field_value(field, value)


def instance_timeout(_field, _value):
    return 5


def instance_type(_field, _value):
    return ['information']


def instance_user(field, value):
    return get_default_field_value(field, value)
