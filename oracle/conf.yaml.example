init_config:

instances:
  # The Oracle check requires either access to the `cx_Oracle`
  # Python module, or the Oracle JDBC Driver. 
  # Due to restrictions on installation, this requires the
  # following steps in order to be included with the agent
  # 
  # Steps for cx_Oracle python module
  # 1. Download the relevant Oracle Instant Client:
  #    http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html
  #    Both the basic client and the client sdk will be required
  #    Example dir: ~/oracle
  # 2. Decompress this library in a given directory available to
  #    all users on the given machine (i.e. /opt/oracle)
  #       mkdir -p /opt/oracle/ && cd /opt/oracle/
  #       unzip ~/oracle/instantclient-basic-linux.x64-12.1.0.2.0.zip
  #       unzip ~/oracle/instantclient-sdk-linux.x64-12.1.0.2.0.zip
  # 3. Ensure LD_LIBRARY_PATH points
  #    to this directory when starting/restarting the agent
  #       export LD_LIBRARY_PATH=/opt/oracle/instantclient_12_1
  #
  # NOTE: connection string used will have the format:
  #        user/password@//server/service_name
  #
  # Steps for Oracle JDBC Driver
  # 1. Download the JDBC Driver:
  #    http://www.oracle.com/technetwork/database/application-development/jdbc/downloads/index.html
  # 2. Add the path to the downloaded jar to your $CLASSPATH, or add it to the instance configuration
  #    under the key `jdbc_driver_path`
  #
  # - server: 127.0.0.1
  #   service_name: my_sid
  #   user: my_username
  #   password: my_password
  #   jdbc_driver_path: "/path/to/driver.jar" # Optionnal: set if you are not using the oracle native client. You can also add it to your $CLASSPATH instead. 
  #
  - server: localhost:1521
    service_name: my_sid
    user: my_username
    password: my_password
    tags:
      - my_tag
