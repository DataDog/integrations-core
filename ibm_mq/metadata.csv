metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
ibm_mq.channel.channels,gauge,,resource,,The number of active channels.,0,ibm_mq,active channel count,
ibm_mq.channel.count,gauge,,,,Sum by status to count channels. Filter by channel and status tags to create notifications.,0,ibm_mq,channel count,
ibm_mq.channel.batch_interval,gauge,,second,,This attribute is a period during which the channel keeps a batch open even if there are no messages on the transmission queue (parameter identifier: `BATCHINT`).,0,ibm_mq,batch interval,
ibm_mq.channel.batch_size,gauge,,resource,,This attribute is the maximum number of messages to be sent before a sync point is taken (parameter identifier: `BATCHSZ`).,0,ibm_mq,batch size,
ibm_mq.channel.disc_interval,gauge,,second,,"This attribute is the length of time after which a channel closes down, if no message arrives during that period (parameter identifier: `DISCINT`).",0,ibm_mq,disc interval,
ibm_mq.channel.hb_interval,gauge,,second,,This attribute specifies the approximate time between heartbeat flows that are to be passed from a sending MCA when there are no messages on the transmission queue (parameter identifier: `HBINT`).,0,ibm_mq,hb interval,
ibm_mq.channel.keep_alive_interval,gauge,,second,,This attribute is used to specify a timeout value for a channel (parameter identifier: `KAINT`).,0,ibm_mq,keep alive interval,
ibm_mq.channel.long_retry,gauge,,time,,This attribute specifies the maximum number of times that the channel is to try allocating a session to its partner (parameter identifier: `LONGRTY`).,0,ibm_mq,long retry,
ibm_mq.channel.long_timer,gauge,,second,,"This attribute is the approximate interval in seconds that the channel is to wait before retrying to establish connection, during the long retry mode (parameter identifier: `LONGTMR`).",0,ibm_mq,long timer,
ibm_mq.channel.max_message_length,gauge,,byte,,This attribute specifies the maximum length of a message that can be transmitted on the channel (parameter identifier: `MAXMSGL`).,0,ibm_mq,max msg length,
ibm_mq.channel.mr_count,gauge,,,,This attribute specifies the number of times the channel tries to redeliver the message (parameter identifier: `MRRTY`).,0,ibm_mq,mr count,
ibm_mq.channel.mr_interval,gauge,,second,,This attribute specifies the minimum interval of time that must pass before the channel can retry the MQPUT operation (parameter identifier: `MRTMR`).,0,ibm_mq,mr interval,
ibm_mq.channel.network_priority,gauge,,,,"This attribute specifies the priority for the network connection. Distributed queuing chooses the path with the highest priority if there are multiple paths available. The value must be in the range 0 through 9; 0 is the lowest priority (parameter identifier: NETPRTY).",0,ibm_mq,network priority,
ibm_mq.channel.npm_speed,gauge,,,,This attribute specifies the speed at which non-persistent messages are to be sent (parameter identifier: `NPMSPEED`).,0,ibm_mq,npm speed,
ibm_mq.channel.sharing_conversations,gauge,,,,This attribute specifies the maximum number of conversations that can share a channel instance associated with this channel (parameter identifier: `SHARECNV`).,0,ibm_mq,sharing conversations,
ibm_mq.channel.short_retry,gauge,,,,This attribute specifies the maximum number of attempts that are made by a sender or server channel to establish a connection to the remote machine (parameter identifier: `MQIACH_SHORT_RETRY`).,0,ibm_mq,short retry,
ibm_mq.channel.short_timer,gauge,,second,,This attribute specifies the short retry wait interval for a sender or server channel that is started automatically by the channel initiator (Parameter identifier: `MQIACH_SHORT_TIMER`).,0,ibm_mq,short timer,
ibm_mq.channel.buffers_rcvd,gauge,,buffer,,This attribute specifies the number of buffers received (parameter identifier: `MQIACH_BUFFERS_RCVD`).,0,ibm_mq,buffers rcvd,
ibm_mq.channel.buffers_sent,gauge,,buffer,,This attribute specifies the number of buffers sent (parameter identifier: `MQIACH_BUFFERS_SENT`),0,ibm_mq,buffers sent,
ibm_mq.channel.bytes_rcvd,gauge,,byte,,This attribute specifies the number of bytes received (parameter identifier: `MQIACH_BYTES_RCVD`).,0,ibm_mq,bytes rcvd,
ibm_mq.channel.bytes_sent,gauge,,byte,,This attribute specifies the number of bytes sent (parameter identifier: `MQIACH_BYTES_SENT`).,0,ibm_mq,bytes sent,
ibm_mq.channel.channel_status,gauge,,,,This attribute specifies the channel status (parameter identifier: `MQIACH_CHANNEL_STATUS`).,0,ibm_mq,channel status,
ibm_mq.channel.mca_status,gauge,,,,This attribute specifies the MCA status (parameter identifier: `MQIACH_MCA_STATUS`). ,0,ibm_mq,mca status,
ibm_mq.channel.msgs,gauge,,message,,"This attribute specifies the number of messages sent or received, or number of MQI calls handled (parameter identifier: `MQIACH_MSGS`).",0,ibm_mq,msgs,
ibm_mq.channel.ssl_key_resets,gauge,,,,"The value represents the total number of unencrypted bytes that are sent and received on the channel before the secret key is renegotiated (parameter identifier: `SSLRSTCNT`).",0,ibm_mq,ssl key resets,
ibm_mq.channel.batches,gauge,,,,This attribute specifies the number of completed batches (parameter identifier: `MQIACH_BATCHES`).,0,ibm_mq,batches,
ibm_mq.channel.current_msgs,gauge,,message,,This attribute specifies the number of messages in-doubt (parameter identifier: `MQIACH_CURRENT_MSGS`).,0,ibm_mq,current msgs,
ibm_mq.channel.indoubt_status,gauge,,,,This attribute specifies the number whether the channel is currently in doubt (parameter identifier: `MQIACH_INDOUBT_STATUS`).,0,ibm_mq,indoubt status,
ibm_mq.queue.high_q_depth,gauge,,message,,This attribute specifies the maximum number of messages on a queue (parameter identifier: `MQIA_HIGH_Q_DEPTH`).,0,ibm_mq,high q depth,
ibm_mq.queue.msg_deq_count,count,,message,,This attribute specifies the number of messages dequeued (parameter identifier: `MQIA_MSG_DEQ_COUNT`).,0,ibm_mq,msg deq count,
ibm_mq.queue.msg_enq_count,count,,message,,This attribute specifies the number of messages enqueued (parameter identifier: `MQIA_MSG_ENQ_COUNT`).,0,ibm_mq,msg enq count,
ibm_mq.queue.time_since_reset,count,,second,,This attribute specifies the time since statistics reset in seconds (parameter identifier: `MQIA_TIME_SINCE_RESET`).,0,ibm_mq,time since reset,
ibm_mq.queue.service_interval,gauge,,millisecond,,This attribute specifies the target for queue service interval. This is used for comparison to generate Queue Service Interval High and Queue Service Interval OK events (parameter identifier: `MQIA_Q_SERVICE_INTERVAL`).,0,ibm_mq,service interval,
ibm_mq.queue.inhibit_put,gauge,,occurrence,,This attribute specifies whether put operations are allowed (parameter identifier: `MQIA_INHIBIT_PUT`).,0,ibm_mq,puts inhibited,
ibm_mq.queue.depth_low_limit,gauge,,item,,"This attribute specifies low limit for queue depth. This indicates that an application has retrieved a message from a queue, and this has caused the number of messages on the queue to become less than or equal to the queue depth low threshold (parameter identifier: MQIA_Q_DEPTH_LOW_LIMIT).",0,ibm_mq,depth low limit,
ibm_mq.queue.inhibit_get,gauge,,occurrence,,Whether get operations are allowed (parameter identifier: `MQIA_INHIBIT_GET`).,0,ibm_mq,gets inhibited,
ibm_mq.queue.harden_get_backout,gauge,,request,,Whether to harden backout count. Specifies whether the count of backed out messages should be saved (hardened) across restarts of the message queue manager (parameter identifier: `MQIA_HARDEN_GET_BACKOUT`).,0,ibm_mq,times messages retrieved,
ibm_mq.queue.service_interval_event,gauge,,occurrence,,Controls whether Service Interval High or Service Interval OK events are generated (parameter identifier: `MQIA_Q_SERVICE_INTERVAL_EVENT`).,0,ibm_mq,service needed,
ibm_mq.queue.trigger_control,gauge,,method,,This attribute specifies whether trigger messages are written to the initiation queue (parameter identifier: `MQIA_TRIGGER_CONTROL`).,0,ibm_mq,trigger control,
ibm_mq.queue.usage,gauge,,resource,,This attribute whether the queue is for normal usage or for transmitting messages to a remote message queue manager (parameter identifier: `MQIA_USAGE`).,0,ibm_mq,usage,
ibm_mq.queue.scope,gauge,,resource,,"Scope of the queue definition (parameter identifier: `MQIA_SCOPE`). On OS/400, this is valid for receipt by MQSeries for AS/400 V4R2, or later. Specifies whether the scope of the queue definition does not extend beyond the queue manager which owns the queue, or whether the queue name is contained in a cell directory, so that it is known to all of the queue managers within the cell.",0,ibm_mq,scope,
ibm_mq.queue.type,gauge,,resource,,"Type of queue to which the alias resolves (parameter identifier: `MQIA_Q_TYPE`).",0,ibm_mq,queue type,
ibm_mq.queue.depth_max,gauge,,message,,"Maximum queue depth (parameter identifier: `MQIA_MAX_Q_DEPTH`). The maximum number of messages allowed on the queue. Note that other factors may cause the queue to be treated as full; for example, it will appear to be full if there is no storage available for a message.",0,ibm_mq,queue max depth,
ibm_mq.queue.backout_threshold,gauge,,resource,,"Backout threshold (parameter identifier: `MQIA_BACKOUT_THRESHOLD`). That is, the number of times a message can be backed out before it is transferred to the backout queue specified by BackoutRequeueName.",0,ibm_mq,backout threshold,
ibm_mq.queue.depth_high_event,gauge,,event,,"High limit for queue depth (parameter identifier: `MQIA_Q_DEPTH_HIGH_LIMIT`). This event indicates that an application has put a message to a queue, and this has caused the number of messages on the queue to become greater than or equal to the queue depth high threshold.",0,ibm_mq,depth high event,
ibm_mq.queue.depth_low_event,gauge,,event,,"Low limit for queue depth (parameter identifier: `MQIA_Q_DEPTH_LOW_LIMIT`). This event indicates that an application has retrieved a message from a queue, and this has caused the number of messages on the queue to become less than or equal to the queue depth low threshold.",0,ibm_mq,depth low event,
ibm_mq.queue.trigger_message_priority,gauge,,resource,,"Threshold message priority for triggers (parameter identifier: `MQIA_TRIGGER_MSG_PRIORITY`). Specifies the minimum priority that a message must have before it can cause, or be counted for, a trigger event. The value must be in the range of priority values that are supported (0 through 9).",0,ibm_mq,trigger message priority,
ibm_mq.queue.depth_current,gauge,,message,,"The number of messages currently in the queue (parameter identifier: `MQIA_CURRENT_Q_DEPTH`).",0,ibm_mq,messages,
ibm_mq.queue.depth_max_event,gauge,,event,,"Controls whether Queue Full events are generated (parameter identifier: `MQIA_Q_DEPTH_MAX_EVENT`).",0,ibm_mq,messages,
ibm_mq.queue.open_input_count,gauge,,connection,,"Number of MQOPEN calls that have the queue open for input (parameter identifier: `MQIA_OPEN_INPUT_COUNT`).",0,ibm_mq,open handles,
ibm_mq.queue.persistence,gauge,,resource,,"Specifies the default for message-persistence on the queue. Message persistence determines whether or not messages are preserved across restarts of the queue manager (parameter identifier: `MQIA_DEF_PERSISTENCE`).",0,ibm_mq,persistence,
ibm_mq.queue.trigger_depth,gauge,,resource,,"This attribute specifies the number of messages that will initiate a trigger message to the initiation queue (parameter identifier: `MQIA_TRIGGER_DEPTH`). ",0,ibm_mq,queue trigger depth,
ibm_mq.queue.max_message_length,gauge,,resource,,"This attribute specifies the maximum message length that can be transmitted on the channel (parameter identifier: `MQIACH_MAX_MSG_LENGTH`). ",0,ibm_mq,max message length,
ibm_mq.queue.depth_high_limit,gauge,,resource,,"This attribute specifies the threshold against which the queue depth is compared before generated a queue high event (parameter identifier: `MQIA_Q_DEPTH_HIGH_LIMIT`).",0,ibm_mq,depth high limit,
ibm_mq.queue.priority,gauge,,resource,,"Specifies the default priority of messages put on the queue (parameter identifier: `MQIA_DEF_PRIORITY`).",0,ibm_mq,default priority,
ibm_mq.queue.input_open_option,gauge,,resource,,"Specifies the default share option for applications opening this queue for input (parameter identifier: `MQIA_DEF_INPUT_OPEN_OPTION`).",0,ibm_mq,default open option,
ibm_mq.queue.message_delivery_sequence,gauge,,resource,,"The order in which messages will be returned after a get operation (parameter identifier: `MQIA_MSG_DELIVERY_SEQUENCE`).",0,ibm_mq,message delivery sequence,
ibm_mq.queue.retention_interval,gauge,,hour,,"The number of hours for which the queue may be needed, based on the date and time when the queue was created (parameter identifier: `MQIA_RETENTION_INTERVAL`).",0,ibm_mq,retention interval,
ibm_mq.queue.open_output_count,gauge,,connection,,"Number of MQOPEN calls that have the queue open for output (parameter identifier: `MQIA_OPEN_OUTPUT_COUNT`).",0,ibm_mq,open output count,
ibm_mq.queue.trigger_type,gauge,,resource,,"The conditions under which trigger messages are written as a result of messages arriving on this queue (parameter identifier: `MQIA_TRIGGER_TYPE`).",0,ibm_mq,trigger type,
ibm_mq.queue.depth_percent,gauge,,percent,,The percent of the queue that is currently utilized.,0,ibm_mq,queue usage percentage,
ibm_mq.queue.last_get_time,gauge,,second,,The elapsed time in seconds since the last message get from a queue.,0,ibm_mq,last get time,
ibm_mq.queue.last_put_time,gauge,,second,,The elapsed time in seconds since the last message put to a queue.,0,ibm_mq,last put time,
ibm_mq.queue_manager.dist_lists,gauge,,resource,,"Specifies whether distribution-list messages can be placed on the queue (parameter identifier: `MQIA_DIST_LISTS`).",0,ibm_mq,dist list,
ibm_mq.queue_manager.max_msg_list,gauge,,byte,,"Specifies the maximum message length that can be transmitted on the channel. This is compared with the value for the remote channel and the actual maximum is the lowest of the two values (parameter identifier: `MQIACH_MAX_MSG_LENGTH`).",0,ibm_mq,max message length,
ibm_mq.queue.max_channels,gauge,,connection,,"This attribute is the maximum number of channels that can be current (parameter identifier: `MQIA_MAX_CHANNELS`).",0,ibm_mq,max channels,
ibm_mq.queue.oldest_message_age,gauge,,second,,"The age, in seconds, of the oldest message on the queue (parameter identifier: `MSGAGE`).",0,ibm_mq,oldest message,
ibm_mq.queue.uncommitted_msgs,gauge,,message,,"Specifies the maximum number of uncommitted messages. That is, the number of messages that can be retrieved, the number of messages that can be put, and any trigger messages generated within this unit of work (parameter identifier: `MQIA_MAX_UNCOMMITTED_MSGS`).",0,ibm_mq,uncommitted msgs,
ibm_mq.stats.channel.msgs,count,,message,,"The number of persistent and nonpersistent messages sent or received (parameter identifier: `QCSTNMSG`).",0,ibm_mq,stats chan msgs,
ibm_mq.stats.channel.bytes,count,,message,,"The number of bytes sent or received for persistent and nonpersistent messages. (parameter identifier: `QCSTNBYT`).",0,ibm_mq,stats chan msgs,
ibm_mq.stats.channel.put_retries,count,,message,,"The number of times in the time interval that a message failed to be put, and entered a retry loop (parameter identifier: `MQIAMO_PUT_RETRIES`).",0,ibm_mq,stats chan put retries,
ibm_mq.stats.channel.full_batches,count,,message,,"The number of batches processed by the channel that were sent because the value of the channel attributes BATCHSZ or BATCHLIM was reached (parameter identifier: `MQIAMO_FULL_BATCHES`).",0,ibm_mq,stats chan full batches,
ibm_mq.stats.channel.incomplete_batches,count,,message,,"The number of batches processed by the channel, that were sent without the value of the channel attribute BATCHSZ being reached (parameter identifier: `MQIAMO_INCOMPLETE_BATCHES`).",0,ibm_mq,stats chan incomplete batches,
ibm_mq.stats.channel.avg_batch_size,gauge,,message,,"The average batch size of batches processed by the channel (parameter identifier: `MQIAMO_AVG_BATCH_SIZE`).",0,ibm_mq,stats chan avg batch size,
ibm_mq.stats.queue.q_min_depth,gauge,,message,,"The minimum queue depth during the monitoring period (parameter identifier: `MQIAMO_Q_MIN_DEPTH`).",0,ibm_mq,stats queue q min depth,
ibm_mq.stats.queue.q_max_depth,gauge,,message,,The maximum queue depth during the monitoring period (parameter identifier: `MQIAMO_Q_MAX_DEPTH`).,0,ibm_mq,stats queue q max depth,
ibm_mq.stats.queue.put_fail_count,count,,message,,The number of unsuccessful attempts to put a message to the queue (parameter identifier: `MQIAMO_PUTS_FAILED`).,0,ibm_mq,stats queue put fail count,
ibm_mq.stats.queue.get_fail_count,count,,message,,The number of unsuccessful destructive get requests (parameter identifier: `MQIAMO_GETS_FAILED`).,0,ibm_mq,stats queue get fail count,
ibm_mq.stats.queue.put1_fail_count,count,,message,,The number of unsuccessful attempts to put a message using MQPUT1 calls (parameter identifier: `MQIAMO_PUT1S_FAILED`).,0,ibm_mq,stats queue put1 fail count,
ibm_mq.stats.queue.browse_fail_count,count,,message,,The number of unsuccessful non-destructive get requests (parameter identifier: `MQIAMO_BROWSES_FAILED`).,0,ibm_mq,stats queue browse fail count,
ibm_mq.stats.queue.non_queued_msg_count,count,,message,,"The number of messages that bypassed the queue and were transferred directly to a waiting application. This number represents how many times WebSphere MQ was able to bypass the queue, and not the number of times an application was waiting (parameter identifier: MQIAMO_MSGS_NOT_QUEUED).",0,ibm_mq,stats queue non queued msg count,
ibm_mq.stats.queue.expired_msg_count,count,,message,,The number of persistent and non-persistent messages that were discarded because they had expired before they could be retrieved (parameter identifier: `MQIAMO_MSGS_EXPIRED`).,0,ibm_mq,stats queue expired msg count,
ibm_mq.stats.queue.purge_count,count,,message,,The number of messages purged (parameter identifier: `MQIAMO_MSGS_PURGED`).,0,ibm_mq,stats queue purge count,
ibm_mq.stats.queue.avg_q_time,gauge,,message,,"The average latency, in microseconds, of messages destructively retrieved from the queue during the monitoring period for persistent and non-persistent messages (parameter identifier: `MQIAMO64_AVG_Q_TIME`).",0,ibm_mq,stats queue avg q time,
ibm_mq.stats.queue.browse_bytes,gauge,,message,,The number of bytes read in non-destructive get requests for persistent and non-persistent messages (parameter identifier: `MQIAMO64_BROWSE_BYTES`).,0,ibm_mq,stats queue browse bytes,
ibm_mq.stats.queue.browse_count,count,,message,,The number of successful non-destructive get requests for persistent and non-persistent messages (parameter identifier: `MQIAMO_BROWSES`).,0,ibm_mq,stats queue browse count,
ibm_mq.stats.queue.get_bytes,count,,message,,The number of bytes read in destructive put requests for persistent and non-persistent messages (parameter identifier: `MQIAMO64_GET_BYTES`).,0,ibm_mq,stats queue get bytes,
ibm_mq.stats.queue.get_count,count,,message,,The number of successful destructive get requests for persistent and non-persistent messages (parameter identifier: `MQIAMO_GETS`).,0,ibm_mq,stats queue get count,
ibm_mq.stats.queue.put_bytes,count,,message,,The number of bytes written in put requests to the queue for persistent and non-persistent messages (parameter identifier: `MQIAMO64_PUT_BYTES`).,0,ibm_mq,stats queue put bytes,
ibm_mq.stats.queue.put_count,count,,message,,"The number of persistent and non-persistent messages successfully put to the queue, with exception of MQPUT1 requests (parameter identifier: `MQIAMO_PUTS`).",0,ibm_mq,stats queue put count,
ibm_mq.stats.queue.put1_count,count,,message,,The number of persistent and non-persistent messages successfully put to the queue using MQPUT1 calls (parameter identifier: `MQIAMO_PUT1S`).,0,ibm_mq,stats queue put1 count,
