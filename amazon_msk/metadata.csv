metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name
aws.msk.go.gc.duration.seconds.count,gauge,,,,GC invocation durations count.,0,amazon_kafka,
aws.msk.go.gc.duration.seconds.quantile,gauge,,second,,GC invocation duration quantile.,0,amazon_kafka,
aws.msk.go.gc.duration.seconds.sum,gauge,,second,,GC invocation duration total.,0,amazon_kafka,
aws.msk.go.goroutines,gauge,,thread,,Number of goroutines that currently exist.,0,amazon_kafka,
aws.msk.go.info,gauge,,,,Information about the Go environment.,0,amazon_kafka,
aws.msk.go.memstats.alloc.bytes,gauge,,byte,,Number of bytes allocated and still in use.,0,amazon_kafka,
aws.msk.go.memstats.alloc.bytes.total,count,,byte,,"Total number of bytes allocated, even if freed.",0,amazon_kafka,
aws.msk.go.memstats.buck.hash.sys.bytes,gauge,,byte,,Number of bytes used by the profiling bucket hash table.,0,amazon_kafka,
aws.msk.go.memstats.frees.total,count,,,,Total number of frees.,0,amazon_kafka,
aws.msk.go.memstats.gc.cpu.fraction,gauge,,,,The fraction of this program's available CPU time used by the GC since the program started.,0,amazon_kafka,
aws.msk.go.memstats.gc.sys.bytes,gauge,,byte,,Number of bytes used for garbage collection system metadata.,0,amazon_kafka,
aws.msk.go.memstats.heap.alloc.bytes,gauge,,byte,,Number of heap bytes allocated and still in use.,0,amazon_kafka,
aws.msk.go.memstats.heap.idle.bytes,gauge,,byte,,Number of heap bytes waiting to be used.,0,amazon_kafka,
aws.msk.go.memstats.heap.inuse.bytes,gauge,,byte,,Number of heap bytes that are in use.,0,amazon_kafka,
aws.msk.go.memstats.heap.objects,gauge,,,,Number of allocated objects.,0,amazon_kafka,
aws.msk.go.memstats.heap.released.bytes,gauge,,byte,,Number of heap bytes released to OS.,0,amazon_kafka,
aws.msk.go.memstats.heap.sys.bytes,gauge,,byte,,Number of heap bytes obtained from system.,0,amazon_kafka,
aws.msk.go.memstats.last.gc.time.seconds,gauge,,second,,Number of seconds since 1970 of last garbage collection.,0,amazon_kafka,
aws.msk.go.memstats.lookups.total,count,,,,Total number of pointer lookups.,0,amazon_kafka,
aws.msk.go.memstats.mallocs.total,count,,,,Total number of mallocs.,0,amazon_kafka,
aws.msk.go.memstats.mcache.inuse.bytes,gauge,,byte,,Number of bytes in use by mcache structures.,0,amazon_kafka,
aws.msk.go.memstats.mcache.sys.bytes,gauge,,byte,,Number of bytes used for mcache structures obtained from system.,0,amazon_kafka,
aws.msk.go.memstats.mspan.inuse.bytes,gauge,,byte,,Number of bytes in use by mspan structures.,0,amazon_kafka,
aws.msk.go.memstats.mspan.sys.bytes,gauge,,byte,,Number of bytes used for mspan structures obtained from system.,0,amazon_kafka,
aws.msk.go.memstats.next.gc.bytes,gauge,,byte,,Number of heap bytes when next garbage collection will take place.,0,amazon_kafka,
aws.msk.go.memstats.other.sys.bytes,gauge,,byte,,Number of bytes used for other system allocations.,0,amazon_kafka,
aws.msk.go.memstats.stack.inuse.bytes,gauge,,byte,,Number of bytes in use by the stack allocator.,0,amazon_kafka,
aws.msk.go.memstats.stack.sys.bytes,gauge,,byte,,Number of bytes obtained from system for stack allocator.,0,amazon_kafka,
aws.msk.go.memstats.sys.bytes,gauge,,byte,,Number of bytes obtained from system.,0,amazon_kafka,
aws.msk.go.threads,gauge,,thread,,Number of OS threads created.,0,amazon_kafka,
aws.msk.jmx.config.reload.failure.total,count,,,,Number of times configuration have failed to be reloaded.,0,amazon_kafka,
aws.msk.jmx.config.reload.success.total,count,,,,Number of times configuration have successfully been reloaded.,0,amazon_kafka,
aws.msk.jmx.exporter.build.info,gauge,,,,A metric with a constant '1' value labeled with the version of the JMX exporter.,0,amazon_kafka,
aws.msk.jmx.scrape.duration.seconds,gauge,,second,,"Time this JMX scrape took, in seconds.",0,amazon_kafka,
aws.msk.jmx.scrape.error,gauge,,,,Non-zero if this scrape failed.,0,amazon_kafka,
aws.msk.kafka.cluster.Partition.Value,gauge,,,,"Attribute exposed for management (kafka.cluster<type=Partition, name=InSyncReplicasCount, topic=test-topic-15, partition=70><>Value)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.50thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>50thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.75thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>75thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.95thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>95thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.98thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>98thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.999thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>999thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.99thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>99thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.Count,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>Count)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.Max,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>Max)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.Mean,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>Mean)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.MeanRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.Min,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>Min)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.StdDev,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=RequestRateAndQueueTimeMs, broker-id=1><>StdDev)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerChannelManager.Value,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerChannelManager, name=TotalQueueSize><>Value)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.50thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>50thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.75thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>75thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.95thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>95thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.98thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>98thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.999thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>999thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.99thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>99thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.Count,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>Count)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.Max,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>Max)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.Mean,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>Mean)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.Min,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>Min)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.StdDev,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueTimeMs><>StdDev)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerEventManager.Value,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerEventManager, name=EventQueueSize><>Value)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.50thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>50thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.75thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>75thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.95thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>95thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.98thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>98thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.999thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>999thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.99thPercentile,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>99thPercentile)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.Count,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>Count)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.Max,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>Max)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.Mean,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>Mean)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.MeanRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.Min,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>Min)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.controller.ControllerStats.StdDev,gauge,,,,"Attribute exposed for management (kafka.controller<type=ControllerStats, name=ControlledShutdownRateAndTimeMs><>StdDev)",0,amazon_kafka,
aws.msk.kafka.controller.KafkaController.Value,gauge,,,,"Attribute exposed for management (kafka.controller<type=KafkaController, name=GlobalPartitionCount><>Value)",0,amazon_kafka,
aws.msk.kafka.coordinator.group.GroupMetadataManager.Value,gauge,,,,"Attribute exposed for management (kafka.coordinator.group<type=GroupMetadataManager, name=NumGroupsDead><>Value)",0,amazon_kafka,
aws.msk.kafka.coordinator.transaction.TransactionMarkerChannelManager.Value,gauge,,,,"Attribute exposed for management (kafka.coordinator.transaction<type=TransactionMarkerChannelManager, name=LogAppendRetryQueueSize><>Value)",0,amazon_kafka,
aws.msk.kafka.log.Log.Value,gauge,,,,"Attribute exposed for management (kafka.log<type=Log, name=LogStartOffset, topic=test-topic-5, partition=22><>Value)",0,amazon_kafka,
aws.msk.kafka.log.LogCleaner.Value,gauge,,,,"Attribute exposed for management (kafka.log<type=LogCleaner, name=cleaner-recopy-percent><>Value)",0,amazon_kafka,
aws.msk.kafka.log.LogCleanerManager.Value,gauge,,,,"Attribute exposed for management (kafka.log<type=LogCleanerManager, name=max-dirty-percent><>Value)",0,amazon_kafka,
aws.msk.kafka.log.LogManager.Value,gauge,,,,"Attribute exposed for management (kafka.log<type=LogManager, name=OfflineLogDirectoryCount><>Value)",0,amazon_kafka,
aws.msk.kafka.network.Acceptor.Count,gauge,,,,"Attribute exposed for management (kafka.network<type=Acceptor, name=AcceptorBlockedPercent, listener=CLIENT><>Count)",0,amazon_kafka,
aws.msk.kafka.network.Acceptor.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=Acceptor, name=AcceptorBlockedPercent, listener=CLIENT><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.Acceptor.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=Acceptor, name=AcceptorBlockedPercent, listener=CLIENT><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.Acceptor.MeanRate,gauge,,,,"Attribute exposed for management (kafka.network<type=Acceptor, name=AcceptorBlockedPercent, listener=CLIENT><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.network.Acceptor.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=Acceptor, name=AcceptorBlockedPercent, listener=CLIENT><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.Processor.Value,gauge,,,,"Attribute exposed for management (kafka.network<type=Processor, name=IdlePercent, networkProcessor=8><>Value)",0,amazon_kafka,
aws.msk.kafka.network.RequestChannel.Value,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestChannel, name=ResponseQueueSize, processor=8><>Value)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.50thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>50thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.75thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>75thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.95thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>95thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.98thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>98thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.999thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>999thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.99thPercentile,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>99thPercentile)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.Count,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>Count)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ErrorsPerSec, request=UpdateMetadata, error=NONE><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ErrorsPerSec, request=UpdateMetadata, error=NONE><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.Max,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>Max)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.Mean,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>Mean)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.MeanRate,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ErrorsPerSec, request=UpdateMetadata, error=NONE><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.Min,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>Min)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ErrorsPerSec, request=UpdateMetadata, error=NONE><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.network.RequestMetrics.StdDev,gauge,,,,"Attribute exposed for management (kafka.network<type=RequestMetrics, name=ResponseQueueTimeMs, request=ListGroups><>StdDev)",0,amazon_kafka,
aws.msk.kafka.network.SocketServer.Value,gauge,,,,"Attribute exposed for management (kafka.network<type=SocketServer, name=ExpiredConnectionsKilledCount><>Value)",0,amazon_kafka,
aws.msk.kafka.security.SimpleAclAuthorizer.Count,gauge,,,,"Attribute exposed for management (kafka.security<type=SimpleAclAuthorizer, name=ZooKeeperExpiresPerSec><>Count)",0,amazon_kafka,
aws.msk.kafka.security.SimpleAclAuthorizer.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.security<type=SimpleAclAuthorizer, name=ZooKeeperExpiresPerSec><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.security.SimpleAclAuthorizer.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.security<type=SimpleAclAuthorizer, name=ZooKeeperExpiresPerSec><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.security.SimpleAclAuthorizer.MeanRate,gauge,,,,"Attribute exposed for management (kafka.security<type=SimpleAclAuthorizer, name=ZooKeeperExpiresPerSec><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.security.SimpleAclAuthorizer.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.security<type=SimpleAclAuthorizer, name=ZooKeeperExpiresPerSec><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.BrokerTopicMetrics.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>Count)",0,amazon_kafka,
aws.msk.kafka.server.BrokerTopicMetrics.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.BrokerTopicMetrics.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.BrokerTopicMetrics.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.BrokerTopicMetrics.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.DelayedFetchMetrics.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedFetchMetrics, name=ExpiresPerSec, fetcherType=consumer><>Count)",0,amazon_kafka,
aws.msk.kafka.server.DelayedFetchMetrics.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedFetchMetrics, name=ExpiresPerSec, fetcherType=consumer><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.DelayedFetchMetrics.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedFetchMetrics, name=ExpiresPerSec, fetcherType=consumer><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.DelayedFetchMetrics.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedFetchMetrics, name=ExpiresPerSec, fetcherType=consumer><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.DelayedFetchMetrics.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedFetchMetrics, name=ExpiresPerSec, fetcherType=consumer><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.DelayedOperationPurgatory.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=DelayedOperationPurgatory, name=PurgatorySize, delayedOperation=topic><>Value)",0,amazon_kafka,
aws.msk.kafka.server.Fetch.queue.size,gauge,,,,Tracks the size of the delay queue (kafka.server<type=Fetch><>queue-size),0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=IncrementalFetchSessionEvictionsPerSec><>Count)",0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=IncrementalFetchSessionEvictionsPerSec><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=IncrementalFetchSessionEvictionsPerSec><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=IncrementalFetchSessionEvictionsPerSec><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=IncrementalFetchSessionEvictionsPerSec><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.FetchSessionCache.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=FetchSessionCache, name=NumIncrementalFetchPartitionsCached><>Value)",0,amazon_kafka,
aws.msk.kafka.server.FetcherLagMetrics.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherLagMetrics, name=ConsumerLag, clientId=ReplicaFetcherThread-1-3, topic=test-topic-13, partition=38><>Value)",0,amazon_kafka,
aws.msk.kafka.server.FetcherStats.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherStats, name=RequestsPerSec, clientId=ReplicaFetcherThread-1-3, brokerHost=b-3-internal.kafka111cluster-vpc1-4.8fhm2b.c1.kafka.us-east-1.hnahas.net, brokerPort=9093><>Count)",0,amazon_kafka,
aws.msk.kafka.server.FetcherStats.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherStats, name=RequestsPerSec, clientId=ReplicaFetcherThread-1-3, brokerHost=b-3-internal.kafka111cluster-vpc1-4.8fhm2b.c1.kafka.us-east-1.hnahas.net, brokerPort=9093><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.FetcherStats.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherStats, name=RequestsPerSec, clientId=ReplicaFetcherThread-1-3, brokerHost=b-3-internal.kafka111cluster-vpc1-4.8fhm2b.c1.kafka.us-east-1.hnahas.net, brokerPort=9093><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.FetcherStats.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherStats, name=RequestsPerSec, clientId=ReplicaFetcherThread-1-3, brokerHost=b-3-internal.kafka111cluster-vpc1-4.8fhm2b.c1.kafka.us-east-1.hnahas.net, brokerPort=9093><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.FetcherStats.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=FetcherStats, name=RequestsPerSec, clientId=ReplicaFetcherThread-1-3, brokerHost=b-3-internal.kafka111cluster-vpc1-4.8fhm2b.c1.kafka.us-east-1.hnahas.net, brokerPort=9093><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.KafkaRequestHandlerPool.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>Count)",0,amazon_kafka,
aws.msk.kafka.server.KafkaRequestHandlerPool.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.KafkaRequestHandlerPool.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.KafkaRequestHandlerPool.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.KafkaRequestHandlerPool.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.KafkaServer.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=KafkaServer, name=BrokerState><>Value)",0,amazon_kafka,
aws.msk.kafka.server.LeaderReplication.byte.rate,gauge,,,,Tracking byte-rate for LeaderReplication (kafka.server<type=LeaderReplication><>byte-rate),0,amazon_kafka,
aws.msk.kafka.server.Produce.queue.size,gauge,,,,Tracks the size of the delay queue (kafka.server<type=Produce><>queue-size),0,amazon_kafka,
aws.msk.kafka.server.ReplicaAlterLogDirsManager.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaAlterLogDirsManager, name=MaxLag, clientId=ReplicaAlterLogDirs><>Value)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaFetcherManager.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaFetcherManager, name=MinFetchRate, clientId=Replica><>Value)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=IsrShrinksPerSec><>Count)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=IsrShrinksPerSec><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=IsrShrinksPerSec><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=IsrShrinksPerSec><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=IsrShrinksPerSec><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.ReplicaManager.Value,gauge,,,,"Attribute exposed for management (kafka.server<type=ReplicaManager, name=OfflineReplicaCount><>Value)",0,amazon_kafka,
aws.msk.kafka.server.Request.queue.size,gauge,,,,Tracks the size of the delay queue (kafka.server<type=Request><>queue-size),0,amazon_kafka,
aws.msk.kafka.server.SessionExpireListener.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=SessionExpireListener, name=ZooKeeperSaslAuthenticationsPerSec><>Count)",0,amazon_kafka,
aws.msk.kafka.server.SessionExpireListener.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=SessionExpireListener, name=ZooKeeperSaslAuthenticationsPerSec><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.SessionExpireListener.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=SessionExpireListener, name=ZooKeeperSaslAuthenticationsPerSec><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.SessionExpireListener.MeanRate,gauge,,,,"Attribute exposed for management (kafka.server<type=SessionExpireListener, name=ZooKeeperSaslAuthenticationsPerSec><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.server.SessionExpireListener.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.server<type=SessionExpireListener, name=ZooKeeperSaslAuthenticationsPerSec><>OneMinuteRate)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.50thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>50thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.75thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>75thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.95thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>95thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.98thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>98thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.999thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>999thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.99thPercentile,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>99thPercentile)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.Count,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>Count)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.Max,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>Max)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.Mean,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>Mean)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.Min,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>Min)",0,amazon_kafka,
aws.msk.kafka.server.ZooKeeperClientMetrics.StdDev,gauge,,,,"Attribute exposed for management (kafka.server<type=ZooKeeperClientMetrics, name=ZooKeeperRequestLatencyMs><>StdDev)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.connection.close.rate,gauge,,connection,,"The number of connections closed per second (kafka.server<type=controller-channel-metrics, broker-id=3><>connection-close-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.connection.close.total,gauge,,connection,,"The total number of connections closed (kafka.server<type=controller-channel-metrics, broker-id=3><>connection-close-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.connection.count,gauge,,connection,,"The current number of active connections. (kafka.server<type=controller-channel-metrics, broker-id=3><>connection-count)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.connection.creation.rate,gauge,,,,"The number of new connections established per second (kafka.server<type=controller-channel-metrics, broker-id=3><>connection-creation-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.connection.creation.total,gauge,,,,"The total number of new connections established (kafka.server<type=controller-channel-metrics, broker-id=3><>connection-creation-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.failed.authentication.rate,gauge,,,,"The number of connections with failed authentication per second (kafka.server<type=controller-channel-metrics, broker-id=3><>failed-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.failed.authentication.total,gauge,,,,"The total number of connections with failed authentication (kafka.server<type=controller-channel-metrics, broker-id=3><>failed-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.failed.reauthentication.rate,gauge,,,,"The number of failed re-authentication of connections per second (kafka.server<type=controller-channel-metrics, broker-id=3><>failed-reauthentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.failed.reauthentication.total,gauge,,,,"The total number of failed re-authentication of connections (kafka.server<type=controller-channel-metrics, broker-id=3><>failed-reauthentication-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.incoming.byte.rate,gauge,,byte,,"The number of bytes read off all sockets per second (kafka.server<type=controller-channel-metrics, broker-id=3><>incoming-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.incoming.byte.total,gauge,,byte,,"The total number of bytes read off all sockets (kafka.server<type=controller-channel-metrics, broker-id=3><>incoming-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.io.ratio,gauge,,,,"The fraction of time the I/O thread spent doing I/O (kafka.server<type=controller-channel-metrics, broker-id=3><>io-ratio)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.io.time.ns.avg,gauge,,,,"The average length of time for I/O per select call in nanoseconds. (kafka.server<type=controller-channel-metrics, broker-id=3><>io-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.io.wait.ratio,gauge,,,,"The fraction of time the I/O thread spent waiting (kafka.server<type=controller-channel-metrics, broker-id=3><>io-wait-ratio)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.io.wait.time.ns.avg,gauge,,,,"The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds. (kafka.server<type=controller-channel-metrics, broker-id=3><>io-wait-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.io.waittime.total,gauge,,,,"The total time the I/O thread spent waiting (kafka.server<type=controller-channel-metrics, broker-id=3><>io-waittime-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.iotime.total,gauge,,,,"The total time the I/O thread spent doing I/O (kafka.server<type=controller-channel-metrics, broker-id=3><>iotime-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.network.io.rate,gauge,,,,"The number of network operations (reads or writes) on all connections per second (kafka.server<type=controller-channel-metrics, broker-id=3><>network-io-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.network.io.total,gauge,,,,"The total number of network operations (reads or writes) on all connections (kafka.server<type=controller-channel-metrics, broker-id=3><>network-io-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.outgoing.byte.rate,gauge,,byte,,"The number of outgoing bytes sent to all servers per second (kafka.server<type=controller-channel-metrics, broker-id=3><>outgoing-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.outgoing.byte.total,gauge,,byte,,"The total number of outgoing bytes sent to all servers (kafka.server<type=controller-channel-metrics, broker-id=3><>outgoing-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.reauthentication.latency.avg,gauge,,,,"The average latency observed due to re-authentication (kafka.server<type=controller-channel-metrics, broker-id=3><>reauthentication-latency-avg)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.reauthentication.latency.max,gauge,,,,"The max latency observed due to re-authentication (kafka.server<type=controller-channel-metrics, broker-id=3><>reauthentication-latency-max)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.request.rate,gauge,,,,"The number of requests sent per second (kafka.server<type=controller-channel-metrics, broker-id=3><>request-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.request.size.avg,gauge,,,,"The average size of requests sent. (kafka.server<type=controller-channel-metrics, broker-id=3><>request-size-avg)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.request.size.max,gauge,,,,"The maximum size of any request sent. (kafka.server<type=controller-channel-metrics, broker-id=3><>request-size-max)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.request.total,gauge,,,,"The total number of requests sent (kafka.server<type=controller-channel-metrics, broker-id=3><>request-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.response.rate,gauge,,,,"The number of responses received per second (kafka.server<type=controller-channel-metrics, broker-id=3><>response-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.response.total,gauge,,,,"The total number of responses received (kafka.server<type=controller-channel-metrics, broker-id=3><>response-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.select.rate,gauge,,,,"The number of times the I/O layer checked for new I/O to perform per second (kafka.server<type=controller-channel-metrics, broker-id=3><>select-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.select.total,gauge,,,,"The total number of times the I/O layer checked for new I/O to perform (kafka.server<type=controller-channel-metrics, broker-id=3><>select-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.successful.authentication.no.reauth.total,gauge,,,,"The total number of connections with successful authentication where the client does not support re-authentication (kafka.server<type=controller-channel-metrics, broker-id=3><>successful-authentication-no-reauth-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.successful.authentication.rate,gauge,,,,"The number of connections with successful authentication per second (kafka.server<type=controller-channel-metrics, broker-id=3><>successful-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.successful.authentication.total,gauge,,,,"The total number of connections with successful authentication (kafka.server<type=controller-channel-metrics, broker-id=3><>successful-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.successful.reauthentication.rate,gauge,,,,"The number of successful re-authentication of connections per second (kafka.server<type=controller-channel-metrics, broker-id=3><>successful-reauthentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.controller.channel.metrics.successful.reauthentication.total,gauge,,,,"The total number of successful re-authentication of connections (kafka.server<type=controller-channel-metrics, broker-id=3><>successful-reauthentication-total)",0,amazon_kafka,
aws.msk.kafka.server.kafka.metrics.count.count,gauge,,,,total number of registered metrics (kafka.server<type=kafka-metrics-count><>count),0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.connection.close.rate,gauge,,,,"The number of connections closed per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>connection-close-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.connection.close.total,gauge,,,,"The total number of connections closed (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>connection-close-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.connection.count,gauge,,,,"The current number of active connections. (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>connection-count)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.connection.creation.rate,gauge,,,,"The number of new connections established per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>connection-creation-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.connection.creation.total,gauge,,,,"The total number of new connections established (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>connection-creation-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.failed.authentication.rate,gauge,,,,"The number of connections with failed authentication per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>failed-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.failed.authentication.total,gauge,,,,"The total number of connections with failed authentication (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>failed-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.incoming.byte.rate,gauge,,byte,,"The number of bytes read off all sockets per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>incoming-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.incoming.byte.total,gauge,,byte,,"The total number of bytes read off all sockets (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>incoming-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.io.ratio,gauge,,,,"The fraction of time the I/O thread spent doing I/O (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>io-ratio)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.io.time.ns.avg,gauge,,,,"The average length of time for I/O per select call in nanoseconds. (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>io-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.io.wait.ratio,gauge,,,,"The fraction of time the I/O thread spent waiting (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>io-wait-ratio)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.io.wait.time.ns.avg,gauge,,,,"The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds. (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>io-wait-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.io.waittime.total,gauge,,,,"The total time the I/O thread spent waiting (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>io-waittime-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.iotime.total,gauge,,,,"The total time the I/O thread spent doing I/O (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>iotime-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.network.io.rate,gauge,,,,"The number of network operations (reads or writes) on all connections per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>network-io-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.network.io.total,gauge,,,,"The total number of network operations (reads or writes) on all connections (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>network-io-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.outgoing.byte.rate,gauge,,byte,,"The number of outgoing bytes sent to all servers per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>outgoing-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.outgoing.byte.total,gauge,,byte,,"The total number of outgoing bytes sent to all servers (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>outgoing-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.request.rate,gauge,,,,"The number of requests sent per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>request-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.request.size.avg,gauge,,,,"The average size of requests sent. (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>request-size-avg)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.request.size.max,gauge,,,,"The maximum size of any request sent. (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>request-size-max)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.request.total,gauge,,,,"The total number of requests sent (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>request-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.response.rate,gauge,,,,"The number of responses received per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>response-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.response.total,gauge,,,,"The total number of responses received (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>response-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.select.rate,gauge,,,,"The number of times the I/O layer checked for new I/O to perform per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>select-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.select.total,gauge,,,,"The total number of times the I/O layer checked for new I/O to perform (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>select-total)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.successful.authentication.rate,gauge,,,,"The number of connections with successful authentication per second (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>successful-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.replica.fetcher.metrics.successful.authentication.total,gauge,,,,"The total number of connections with successful authentication (kafka.server<type=replica-fetcher-metrics, broker-id=2, fetcher-id=0><>successful-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.MemoryPoolAvgDepletedPercent,gauge,,,,(kafka.server<type=socket-server-metrics><>MemoryPoolAvgDepletedPercent),0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.MemoryPoolDepletedTimeTotal,gauge,,,,(kafka.server<type=socket-server-metrics><>MemoryPoolDepletedTimeTotal),0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.connection.close.rate,gauge,,,,"The number of connections closed per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>connection-close-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.connection.close.total,gauge,,,,"The total number of connections closed (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>connection-close-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.connection.count,gauge,,,,"The current number of active connections. (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>connection-count)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.connection.creation.rate,gauge,,,,"The number of new connections established per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>connection-creation-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.connection.creation.total,gauge,,,,"The total number of new connections established (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>connection-creation-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.expired.connections.killed.count,gauge,,,,"(kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>expired-connections-killed-count)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.failed.authentication.rate,gauge,,,,"The number of connections with failed authentication per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>failed-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.failed.authentication.total,gauge,,,,"The total number of connections with failed authentication (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>failed-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.failed.reauthentication.rate,gauge,,,,"The number of failed re-authentication of connections per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>failed-reauthentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.failed.reauthentication.total,gauge,,,,"The total number of failed re-authentication of connections (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>failed-reauthentication-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.incoming.byte.rate,gauge,,,,"The number of bytes read off all sockets per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>incoming-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.incoming.byte.total,gauge,,,,"The total number of bytes read off all sockets (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>incoming-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.io.ratio,gauge,,,,"The fraction of time the I/O thread spent doing I/O (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>io-ratio)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.io.time.ns.avg,gauge,,,,"The average length of time for I/O per select call in nanoseconds. (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>io-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.io.wait.ratio,gauge,,,,"The fraction of time the I/O thread spent waiting (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>io-wait-ratio)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.io.wait.time.ns.avg,gauge,,,,"The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds. (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>io-wait-time-ns-avg)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.io.waittime.total,gauge,,,,"The total time the I/O thread spent waiting (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>io-waittime-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.iotime.total,gauge,,,,"The total time the I/O thread spent doing I/O (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>iotime-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.network.io.rate,gauge,,,,"The number of network operations (reads or writes) on all connections per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>network-io-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.network.io.total,gauge,,,,"The total number of network operations (reads or writes) on all connections (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>network-io-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.outgoing.byte.rate,gauge,,,,"The number of outgoing bytes sent to all servers per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>outgoing-byte-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.outgoing.byte.total,gauge,,,,"The total number of outgoing bytes sent to all servers (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>outgoing-byte-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.reauthentication.latency.avg,gauge,,,,"The average latency observed due to re-authentication (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>reauthentication-latency-avg)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.reauthentication.latency.max,gauge,,,,"The max latency observed due to re-authentication (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>reauthentication-latency-max)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.request.rate,gauge,,,,"The number of requests sent per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>request-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.request.size.avg,gauge,,,,"The average size of requests sent. (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>request-size-avg)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.request.size.max,gauge,,,,"The maximum size of any request sent. (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>request-size-max)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.request.total,gauge,,,,"The total number of requests sent (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>request-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.response.rate,gauge,,,,"The number of responses received per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>response-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.response.total,gauge,,,,"The total number of responses received (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>response-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.select.rate,gauge,,,,"The number of times the I/O layer checked for new I/O to perform per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>select-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.select.total,gauge,,,,"The total number of times the I/O layer checked for new I/O to perform (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>select-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.successful.authentication.no.reauth.total,gauge,,,,"The total number of connections with successful authentication where the client does not support re-authentication (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>successful-authentication-no-reauth-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.successful.authentication.rate,gauge,,,,"The number of connections with successful authentication per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>successful-authentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.successful.authentication.total,gauge,,,,"The total number of connections with successful authentication (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>successful-authentication-total)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.successful.reauthentication.rate,gauge,,,,"The number of successful re-authentication of connections per second (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>successful-reauthentication-rate)",0,amazon_kafka,
aws.msk.kafka.server.socket.server.metrics.successful.reauthentication.total,gauge,,,,"The total number of successful re-authentication of connections (kafka.server<type=socket-server-metrics, listener=CLIENT, networkProcessor=4><>successful-reauthentication-total)",0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.connection.close.rate,gauge,,,,The number of connections closed per second (kafka.server<type=txn-marker-channel-metrics><>connection-close-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.connection.close.total,gauge,,,,The total number of connections closed (kafka.server<type=txn-marker-channel-metrics><>connection-close-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.connection.count,gauge,,,,The current number of active connections. (kafka.server<type=txn-marker-channel-metrics><>connection-count),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.connection.creation.rate,gauge,,,,The number of new connections established per second (kafka.server<type=txn-marker-channel-metrics><>connection-creation-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.connection.creation.total,gauge,,,,The total number of new connections established (kafka.server<type=txn-marker-channel-metrics><>connection-creation-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.failed.authentication.rate,gauge,,,,The number of connections with failed authentication per second (kafka.server<type=txn-marker-channel-metrics><>failed-authentication-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.failed.authentication.total,gauge,,,,The total number of connections with failed authentication (kafka.server<type=txn-marker-channel-metrics><>failed-authentication-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.failed.reauthentication.rate,gauge,,,,The number of failed re-authentication of connections per second (kafka.server<type=txn-marker-channel-metrics><>failed-reauthentication-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.failed.reauthentication.total,gauge,,,,The total number of failed re-authentication of connections (kafka.server<type=txn-marker-channel-metrics><>failed-reauthentication-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.incoming.byte.rate,gauge,,,,The number of bytes read off all sockets per second (kafka.server<type=txn-marker-channel-metrics><>incoming-byte-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.incoming.byte.total,gauge,,,,The total number of bytes read off all sockets (kafka.server<type=txn-marker-channel-metrics><>incoming-byte-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.io.ratio,gauge,,,,The fraction of time the I/O thread spent doing I/O (kafka.server<type=txn-marker-channel-metrics><>io-ratio),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.io.time.ns.avg,gauge,,,,The average length of time for I/O per select call in nanoseconds. (kafka.server<type=txn-marker-channel-metrics><>io-time-ns-avg),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.io.wait.ratio,gauge,,,,The fraction of time the I/O thread spent waiting (kafka.server<type=txn-marker-channel-metrics><>io-wait-ratio),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.io.wait.time.ns.avg,gauge,,,,The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds. (kafka.server<type=txn-marker-channel-metrics><>io-wait-time-ns-avg),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.io.waittime.total,gauge,,,,The total time the I/O thread spent waiting (kafka.server<type=txn-marker-channel-metrics><>io-waittime-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.iotime.total,gauge,,,,The total time the I/O thread spent doing I/O (kafka.server<type=txn-marker-channel-metrics><>iotime-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.network.io.rate,gauge,,,,The number of network operations (reads or writes) on all connections per second (kafka.server<type=txn-marker-channel-metrics><>network-io-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.network.io.total,gauge,,,,The total number of network operations (reads or writes) on all connections (kafka.server<type=txn-marker-channel-metrics><>network-io-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.outgoing.byte.rate,gauge,,,,The number of outgoing bytes sent to all servers per second (kafka.server<type=txn-marker-channel-metrics><>outgoing-byte-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.outgoing.byte.total,gauge,,,,The total number of outgoing bytes sent to all servers (kafka.server<type=txn-marker-channel-metrics><>outgoing-byte-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.reauthentication.latency.avg,gauge,,,,The average latency observed due to re-authentication (kafka.server<type=txn-marker-channel-metrics><>reauthentication-latency-avg),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.reauthentication.latency.max,gauge,,,,The max latency observed due to re-authentication (kafka.server<type=txn-marker-channel-metrics><>reauthentication-latency-max),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.request.rate,gauge,,,,The number of requests sent per second (kafka.server<type=txn-marker-channel-metrics><>request-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.request.size.avg,gauge,,,,The average size of requests sent. (kafka.server<type=txn-marker-channel-metrics><>request-size-avg),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.request.size.max,gauge,,,,The maximum size of any request sent. (kafka.server<type=txn-marker-channel-metrics><>request-size-max),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.request.total,gauge,,,,The total number of requests sent (kafka.server<type=txn-marker-channel-metrics><>request-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.response.rate,gauge,,,,The number of responses received per second (kafka.server<type=txn-marker-channel-metrics><>response-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.response.total,gauge,,,,The total number of responses received (kafka.server<type=txn-marker-channel-metrics><>response-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.select.rate,gauge,,,,The number of times the I/O layer checked for new I/O to perform per second (kafka.server<type=txn-marker-channel-metrics><>select-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.select.total,gauge,,,,The total number of times the I/O layer checked for new I/O to perform (kafka.server<type=txn-marker-channel-metrics><>select-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.successful.authentication.no.reauth.total,gauge,,,,The total number of connections with successful authentication where the client does not support re-authentication (kafka.server<type=txn-marker-channel-metrics><>successful-authentication-no-reauth-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.successful.authentication.rate,gauge,,,,The number of connections with successful authentication per second (kafka.server<type=txn-marker-channel-metrics><>successful-authentication-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.successful.authentication.total,gauge,,,,The total number of connections with successful authentication (kafka.server<type=txn-marker-channel-metrics><>successful-authentication-total),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.successful.reauthentication.rate,gauge,,,,The number of successful re-authentication of connections per second (kafka.server<type=txn-marker-channel-metrics><>successful-reauthentication-rate),0,amazon_kafka,
aws.msk.kafka.server.txn.marker.channel.metrics.successful.reauthentication.total,gauge,,,,The total number of successful re-authentication of connections (kafka.server<type=txn-marker-channel-metrics><>successful-reauthentication-total),0,amazon_kafka,
aws.msk.kafka.utils.Throttler.Count,gauge,,,,"Attribute exposed for management (kafka.utils<type=Throttler, name=cleaner-io><>Count)",0,amazon_kafka,
aws.msk.kafka.utils.Throttler.FifteenMinuteRate,gauge,,,,"Attribute exposed for management (kafka.utils<type=Throttler, name=cleaner-io><>FifteenMinuteRate)",0,amazon_kafka,
aws.msk.kafka.utils.Throttler.FiveMinuteRate,gauge,,,,"Attribute exposed for management (kafka.utils<type=Throttler, name=cleaner-io><>FiveMinuteRate)",0,amazon_kafka,
aws.msk.kafka.utils.Throttler.MeanRate,gauge,,,,"Attribute exposed for management (kafka.utils<type=Throttler, name=cleaner-io><>MeanRate)",0,amazon_kafka,
aws.msk.kafka.utils.Throttler.OneMinuteRate,gauge,,,,"Attribute exposed for management (kafka.utils<type=Throttler, name=cleaner-io><>OneMinuteRate)",0,amazon_kafka,
aws.msk.node.cpu.seconds.total,count,,,,Seconds the cpus spent in each mode.,0,amazon_kafka,
aws.msk.node.exporter.build.info,gauge,,,,"A metric with a constant '1' value labeled by version, revision, branch, and goversion from which node_exporter was built.",0,amazon_kafka,
aws.msk.node.filesystem.avail.bytes,gauge,,byte,,Filesystem space available to non-root users in bytes.,0,amazon_kafka,
aws.msk.node.filesystem.device.error,gauge,,,,Whether an error occurred while getting statistics for the given device.,0,amazon_kafka,
aws.msk.node.filesystem.files,gauge,,,,Filesystem total file nodes.,0,amazon_kafka,
aws.msk.node.filesystem.files.free,gauge,,,,Filesystem total free file nodes.,0,amazon_kafka,
aws.msk.node.filesystem.free.bytes,gauge,,byte,,Filesystem free space in bytes.,0,amazon_kafka,
aws.msk.node.filesystem.readonly,gauge,,,,Filesystem read-only status.,0,amazon_kafka,
aws.msk.node.filesystem.size.bytes,gauge,,byte,,Filesystem size in bytes.,0,amazon_kafka,
aws.msk.node.scrape.collector.duration.seconds,gauge,,second,,node_exporter: Duration of a collector scrape.,0,amazon_kafka,
aws.msk.node.scrape.collector.success,gauge,,,,node_exporter: Whether a collector succeeded.,0,amazon_kafka,
aws.msk.process.cpu.seconds.total,count,,,,Total user and system CPU time spent in seconds.,0,amazon_kafka,
aws.msk.process.max.fds,gauge,,,,Maximum number of open file descriptors.,0,amazon_kafka,
aws.msk.process.open.fds,gauge,,,,Number of open file descriptors.,0,amazon_kafka,
aws.msk.process.resident.memory.bytes,gauge,,byte,,Resident memory size in bytes.,0,amazon_kafka,
aws.msk.process.start.time.seconds,gauge,,second,,Start time of the process since unix epoch in seconds.,0,amazon_kafka,
aws.msk.process.virtual.memory.bytes,gauge,,byte,,Virtual memory size in bytes.,0,amazon_kafka,
aws.msk.process.virtual.memory.max.bytes,gauge,,byte,,Maximum amount of virtual memory available in bytes.,0,amazon_kafka,
aws.msk.promhttp.metric.handler.requests.in.flight,gauge,,,,Current number of scrapes being served.,0,amazon_kafka,
aws.msk.promhttp.metric.handler.requests.total,count,,,,Total number of scrapes by HTTP status code.,0,amazon_kafka,
