## All options defined here are available to all instances.
#
init_config:

    ## @param is_jmx - boolean - required
    ## Whether or not this file is a configuration for a JMX integration.
    #
    is_jmx: true

    ## @param collect_default_metrics - boolean - required
    ## Whether or not the check should collect all default metrics.
    #
    collect_default_metrics: true

    ## @param conf - list of mappings - optional
    ## List of metrics to be collected by the integration
    ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
    ## Agent 5: Customize all your metrics below
    ## Agent 6: The default metrics to be collected are kept in metrics.yaml,
    ##          but you can still add your own metrics here
    #
    # conf:
    #   - include:
    #       bean: <BEAN_NAME>
    #       attribute:
    #         MyAttribute:
    #           alias: my.metric.name
    #           metric_type: gauge

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

    ## @param host - string - required
    ## HiveServer2 or Hive Metastore JMX host to connect to.
    #
  - host: localhost

    ## @param port - integer - required
    ## HiveServer2 or Hive Metastore JMX port to connect to.
    #
    port: 8809

    ## @param user - string - optional
    ## User to use when connecting to JMX.
    #
    # user: <USER>

    ## @param password - string - optional
    ## Password to use when connecting to JMX.
    #
    # password: <PASSWORD>

    ## @param process_name_regex - string - optional
    ## Instead of specifying a host, and port. The agent can connect using the attach api.
    ## This requires the JDK to be installed and the path to tools.jar to be set below.
    ## Note: It needs to be set when process_name_regex parameter is set
    ## e.g. .*process_name.*
    #
    # process_name_regex: <PROCESS_NAME_REGEX>

    ## @param tools_jar_path - string - optional
    ## Path to the tool.jar file to use with `process_name_regex` parameter.
    ## e.g. /usr/lib/jvm/java-7-openjdk-amd64/lib/tools.jar
    #
    # tools_jar_path: <TOOLS_JAR_PATH>

    ## @param name - string - optional
    ## Set your instance name that will be used as `instance` tag.
    #
    # name: <NAME>

    ## @param java_bin_path - string - optional
    ## `java_bin_path` should be set if the agent cannot find your java executable
    #
    # java_bin_path: <JAVA_BIN_PATH>

    ## @param java_options - string - optional
    ## List of Java JVM options e.g. "-Xmx200m -Xms50m".
    #
    # java_options: <JAVA_OPTIONS>

    ## @param trust_store_path - string - optional
    ## Path to your trusted store.
    ## `trust_store_path` should be set if ssl is enabled.
    #
    # trust_store_path: <TRUST_STORE_PATH>

    ## @param trust_store_password - string - optional
    ## Password for your TrustStore.jks file.
    ## `trust_store_password` should be set if ssl is enabled.
    #
    # trust_store_password: <TRUST_STORE_PASSWORD>

    ## @param key_store_path - string - optional
    ## Path to your key store.
    ## `key_store_path` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_path: <KEY_STORE_PATH>

    ## @param key_store_password - string - optional
    ## Password to your key store.
    ## `key_store_password` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_password: <KEY_STORE_PASSWORD>

    ## @param rmi_registry_ssl - boolean - optional - default: false
    ## Whether or not the agent should connect to the rmi registry using ssl.
    #
    # rmi_registry_ssl: false

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which Integration sent the logs
## service - required - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## sourcecategory - optional - Multiple value attribute. Used to refine the source attribute
## tags - optional - Add tags to the collected logs
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /tmp/<USER>/hive.log
#     source: hive
#     sourcecategory: database
#     service: <SERVICE_NAME>
#     log_processing_rules:
#     - type: multi_line
#       name: new_log_start_with_date
#       pattern: \d{4}\-\d{2}\-\d{2}
