name: Postgres
files:
- name: postgres.yaml
  options:
  - template: init_config
    options:
    - template: init_config/default
  - template: instances
    options:
    - name: host
      required: true
      description: |
        The hostname to connect to.
        NOTE: Even if the server name is `localhost`, the Agent connects to PostgreSQL using TCP/IP unless you also
        provide a value for the sock key.
        If `use_psycopg2` is enabled, use the directory containing the UNIX socket (ex: `/run/postgresql/`)
        otherwise, use the full path to the socket file (ex: `/run/postgresql/.s.PGSQL.5433`).
      value:
        example: localhost
        type: string
    - name: port
      description: The port to use when connecting to PostgreSQL.
      value:
        type: integer
        example: 5432
    - name: username
      required: true
      description: The Datadog username created to connect to PostgreSQL.
      value:
          type: string
          example: datadog
    - name: password
      description: The password associated with the Datadog user.
      value:
        type: string
    - name: dbname
      description: |
        The name of the PostgresSQL database to monitor.
        Note: If omitted, the default system Postgres database is queried.
      value:
        type: string
        default: postgres
    - name: ssl
      description: |
        This option determines whether or not and with what priority a secure SSL TCP/IP connection
        is negotiated with the server. There are six modes:
        - `disable`: Only tries a non-SSL connection.
        - `allow`: First tries a non-SSL connection; if if fails, tries an SSL connection.
        - `prefer`: First tries an SSL connection; if it fails, tries a non-SSL connection.
        - `require`: Only tries an SSL connection. If a root CA file is present, verifies the certificate in
                     the same way as if verify-ca was specified.
        - `verify-ca`: Only tries an SSL connection, and verifies that the server certificate is issued by a
                       trusted certificate authority (CA).
        - `verify-full`: Only tries an SSL connection and verifies that the server certificate is issued by a
                         trusted CA and that the requested server host name matches the one in the certificate.

        For a detailed description of how these options work see https://www.postgresql.org/docs/current/libpq-ssl.html

        Note: `true` is an alias for `require`, and `false` is an alias for `disable`
      value:
        type: string
        default: false
        example: "false"
    - name: query_timeout
      description: |
        Abort any statement that takes more than the specified number of milliseconds, starting from the time the command
        arrives at the server from the client. A value of zero (the default) turns this off.
        Cancelled queries won't log any metrics
      value:
        type: integer
        example: 1000
        default: null
    - name: relations
      description: |
        The list of relations/tables must be specified here to track per-relation (table) metrics.
        If enabled, `dbname` should be specified to collect database-specific relations metrics.
        You can either specify a single relation by its exact name in 'relation_name' or use a regex to track metrics
        from all matching relations (useful in cases where relation names are dynamically generated, e.g. TimescaleDB).
        Each relation generates many metrics (10 + 10 per index)
        By default all schemas are included. To track relations from specific schemas only,
        you can specify the `schemas` attribute and provide a list of schemas to use for filtering.

        Note: For compatibility reasons you can also use the following syntax to track relations metrics by specifying
        the list of table names. All schemas are included and regex are not supported.
        relations:
          - <TABLE_NAME1>
          - <TABLE_NAME2>
      value:
        type: array
        items:
          type: object
          properties:
            - name: relation_name
              type: string
              required: false
            - name: relation_schema
              type: string
              required: false
            - name: schemas
              type: array
              required: false
              items:
                type: string
        example:
          - relation_name: <TABLE_NAME>
            schemas:
               - <SCHEMA_NAME1>
          - relation_regex: <TABLE_PATTERN>
    - name: max_relations
      description: Determines the maximum number of relations to fetch
      value:
        type: integer
        example: 300
    - name: collect_function_metrics
      description: |
        If set to true, collects metrics regarding PL/pgSQL functions from pg_stat_user_functions
      value:
        type: boolean
        example: false
    - name: collect_count_metrics
      description: Collect count metrics.
      value:
        type: boolean
        example: true
    - name: collect_activity_metrics
      description: |
        Collect metrics regarding transactions from pg_stat_activity. Please make sure the user
        has sufficient privileges to read from pg_stat_activity before enabling this option.
      value:
        type: boolean
        example: false
    - name: collect_database_size_metrics
      description: Collect database size metrics.
      value:
        type: boolean
        example: true
    - name: collect_default_database
      description: Include statistics from the default database 'postgres' in the check metrics.
      value:
        type: boolean
        example: false
    - name: tag_replication_role
      description: Tag metrics and checks with `replication_role:<master|standby>`.
      value:
        type: boolean
        example: false
    - name: table_count_limit
      description: The maximum number of tables to collect metrics from
      value:
        type: integer
        default: 200
        example: 200
    - name: custom_queries
      description: |
        Define custom queries to collect custom metrics from your PostgreSQL
        See Datadog FAQ article for a guide on collecting custom metrics from PostgreSQL:
        https://docs.datadoghq.com/integrations/faq/postgres-custom-metric-collection-explained/
      value:
        type: array
        items:
          type: object
          properties: []
        example:
            - metric_prefix: postgresql
              query: <QUERY>
              columns:
                - name: <COLUNMS_1_NAME>
                  type: <COLUMNS_1_TYPE>
                - name: <COLUNMS_2_NAME>
                  type: <COLUMNS_2_TYPE>
              tags:
                - <TAG_KEY>:<TAG_VALUE>
    - template: instances/default
  - template: logs
    example:
    - type: file
      path:  /path/to/postgres.log
      source: postgresql
      service: <SERVICE>
      log_processing_rules:
        - type: multi_line
          pattern: \d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])
          name: new_log_start_with_date
