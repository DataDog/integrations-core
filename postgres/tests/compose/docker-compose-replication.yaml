version: '3'
networks:
  pg-net:

services:
  postgres:
    image: "postgres:${POSTGRES_IMAGE}"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datadog -d datadog_test && if [[ ! -e /tmp/container_ready.txt ]]; then exit 1; fi"]
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - pg-net
    volumes:
      - ./resources:/docker-entrypoint-initdb.d/
      - ./etc/postgresql:/etc/postgresql/
    environment:
      POSTGRES_PASSWORD: datad0g
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf' -c 'hba_file=/etc/postgresql/pg_hba.conf'

  postgres_replica:
    image: "postgres:${POSTGRES_IMAGE}"
    ports:
      - "5433:5433"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datadog -d datadog_test && if [[ ! -e /tmp/container_ready.txt ]]; then exit 1; fi"]
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - pg-net
    volumes:
      - ./resources_replica:/docker-entrypoint-initdb.d/
      - ./etc/postgresql_replica:/etc/postgresql/
    environment:
      POSTGRES_PASSWORD: datad0g
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'

  postgres_replica2:
    image: "postgres:${POSTGRES_IMAGE}"
    ports:
      - "5434:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datadog -d datadog_test && if [[ ! -e /tmp/container_ready.txt ]]; then exit 1; fi"]
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - pg-net
    volumes:
      - ./resources_replica2:/docker-entrypoint-initdb.d/
      - ./etc/postgresql_replica2:/etc/postgresql/
    environment:
      POSTGRES_PASSWORD: datad0g
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
