metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
karpeneter.disruption.actions_performed.count,count,,,,Count of disruption actions performed. Labeled by disruption method,0,karpenter,,
karpeneter.disruption.consolidation_timeouts.count,count,,,,Count of times the Consolidation algorithm has reached a timeout. Labeled by consolidation type,0,karpenter,,
karpeneter.disruption.eligible_nodes,gauge,,,,Number of nodes eligible for disruption by Karpenter. Labeled by disruption method,0,karpenter,,
karpeneter.disruption.evaluation.duration_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpeneter.disruption.evaluation.duration_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpeneter.disruption.evaluation.duration_seconds.sum,count,,,,Duration of the disruption evaluation process in seconds,0,karpenter,,
karpeneter.disruption.replacement.nodeclaim.failures.count,count,,,,The number of times that Karpenter failed to launch a replacement node for disruption. Labeled by disruption method,0,karpenter,,
karpeneter.disruption.replacement.nodeclaim.initialized_seconds.bucket,count,,,,Amount of time required for a replacement nodeclaim to become initialized.,0,karpenter,,
karpeneter.disruption.replacement.nodeclaim.initialized_seconds.count,count,,,,Amount of time required for a replacement nodeclaim to become initialized.,0,karpenter,,
karpeneter.disruption.replacement.nodeclaim.initialized_seconds.sum,count,,,,Amount of time required for a replacement nodeclaim to become initialized.,0,karpenter,,
karpeneter.nodeclaims_created,gauge,,,,Number of nodeclaims created in total by Karpenter. Labeled by reason the nodeclaim was created and the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_disrupted,gauge,,,,Number of nodeclaims disrupted in total by Karpenter. Labeled by disruption type of the nodeclaim and the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_drifted,gauge,,,,Number of nodeclaims drifted reasons in total by Karpenter. Labeled by drift type of the nodeclaim and the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_initialized,gauge,,,,Number of nodeclaims initialized in total by Karpenter. Labeled by the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_launched,gauge,,,,Number of nodeclaims launched in total by Karpenter. Labeled by the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_registered,gauge,,,,Number of nodeclaims registered in total by Karpenter. Labeled by the owning nodepool.,0,karpenter,,
karpeneter.nodeclaims_terminated,gauge,,,,Number of nodeclaims terminated in total by Karpenter. Labeled by reason the nodeclaim was terminated and the owning nodepool.,0,karpenter,,
karpeneter.nodepool_limit,gauge,,,,The nodepool limits are the limits specified on the provisioner that restrict the quantity of resources provisioned. Labeled by nodepool name and resource type.,0,karpenter,,
karpeneter.nodepool_usage,gauge,,,,The nodepool usage is the amount of resources that have been provisioned by a particular nodepool. Labeled by nodepool name and resource type,0,karpenter,,
karpeneter.pods.state,gauge,,,,"Pod state is the current state of pods. This metric can be used several ways as it is labeled by the pod name, namespace, owner, node, provisioner name, zone, architecture, capacity type, instance type and pod phase.",0,karpenter,,
karpenter.certwatcher.read.certificate.count,count,,,,Count of certificate reads,0,karpenter,,
karpenter.certwatcher.read.certificate.errors.count,count,,,,Count of certificate read errors,0,karpenter,,
karpenter.cloudprovider.batcher.batch.time_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.batcher.batch.time_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.batcher.batch.time_seconds.sum,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.batcher.batch_size.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.batcher.batch_size.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.batcher.batch_size.sum,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.duration_seconds.bucket,count,,,,Duration of cloud provider method calls. Labeled by the controller,method name and provider.,0,karpenter,,
karpenter.cloudprovider.duration_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.duration_seconds.sum,count,,,,<Placeholder>,0,karpenter,,
karpenter.cloudprovider.errors.count,count,,,,Count of errors returned from CloudProvider calls,0,karpenter,,
karpenter.cloudprovider.instance.type.cpu_cores,gauge,,,,VCPUs cores for a given instance type,0,karpenter,,
karpenter.cloudprovider.instance.type.memory_bytes,gauge,,,,"Memory, in bytes, for a given instance type",0,karpenter,,
karpenter.cloudprovider.instance.type.price_estimate,gauge,,,,Estimated hourly price used when making informed decisions on node cost calculation. This is updated once on startup and then every 12 hours.,0,karpenter,,
karpenter.consistency.errors,gauge,,,,Number of consistency checks that have failed.,0,karpenter,,
karpenter.controller.runtime.active_workers,gauge,,,,Number of currently used workers per controller,0,karpenter,,
karpenter.controller.runtime.max.concurrent_reconciles,gauge,,,,Maximum number of concurrent reconciles per controller,0,karpenter,,
karpenter.controller.runtime.reconcile.count,count,,,,Count of reconciliations per controller,0,karpenter,,
karpenter.controller.runtime.reconcile.time_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.controller.runtime.reconcile.time_seconds.quantile,gauge,,,,<Placeholder>,0,karpenter,,
karpenter.controller.runtime.reconcile.time_seconds.sum,count,,,,Length of time per reconciliation per controller,0,karpenter,,
karpenter.controller.runtime.reconcile_errors.count,count,,,,Count of reconciliation errors per controller,0,karpenter,,
karpenter.deprovisioning.actions_performed.count,count,,,,Count of deprovisioning actions performed. Labeled by deprovisioner.,0,karpenter,,
karpenter.deprovisioning.consolidation_timeouts,gauge,,,,Number of times the Consolidation algorithm has reached a timeout. Labeled by consolidation type.,0,karpenter,,
karpenter.deprovisioning.eligible_machines,gauge,,,,Number of machines eligible for deprovisioning by Karpenter. Labeled by deprovisioner,0,karpenter,,
karpenter.deprovisioning.evaluation.duration_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.deprovisioning.evaluation.duration_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.deprovisioning.evaluation.duration_seconds.sum,count,,,,Duration of the deprovisioning evaluation process in seconds.,0,karpenter,,
karpenter.deprovisioning.replacement.machine.initialized_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.deprovisioning.replacement.machine.initialized_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.deprovisioning.replacement.machine.initialized_seconds.sum,count,,,,Amount of time required for a replacement machine to become initialized.,0,karpenter,,
karpenter.deprovisioning.replacement.machine.launch.failure_counter.count,count,,,,Count of times that Karpenter failed to launch a replacement node for deprovisioning. Labeled by deprovisioner.,0,karpenter,,
karpenter.go.gc.duration_seconds.count,count,,,,A summary of the pause duration of garbage collection cycles.,0,karpenter,,
karpenter.go.gc.duration_seconds.quantile,gauge,,,,A summary of the pause duration of garbage collection cycles.,0,karpenter,,
karpenter.go.gc.duration_seconds.sum,count,,,,A summary of the pause duration of garbage collection cycles.,0,karpenter,,
karpenter.go.memstats.alloc_bytes,gauge,,,,Number of bytes allocated and still in use.,0,karpenter,,
karpenter.go.memstats.alloc_bytes.count,count,,,,"Count of bytes allocated, even if freed.",0,karpenter,,
karpenter.go.memstats.buck.hash.sys_bytes,gauge,,,,Number of bytes used by the profiling bucket hash table.,0,karpenter,,
karpenter.go.memstats.frees.count,count,,,,Count of frees.,0,karpenter,,
karpenter.go.memstats.gc.sys_bytes,gauge,,,,Number of bytes used for garbage collection system metadata.,0,karpenter,,
karpenter.go.memstats.heap.alloc_bytes,gauge,,,,Number of heap bytes allocated and still in use.,0,karpenter,,
karpenter.go.memstats.heap.idle_bytes,gauge,,,,Number of heap bytes waiting to be used.,0,karpenter,,
karpenter.go.memstats.heap.inuse_bytes,gauge,,,,Number of heap bytes that are in use.,0,karpenter,,
karpenter.go.memstats.heap.objects,gauge,,,,Number of allocated objects.,0,karpenter,,
karpenter.go.memstats.heap.released_bytes,gauge,,,,Number of heap bytes released to OS.,0,karpenter,,
karpenter.go.memstats.heap.sys_bytes,gauge,,,,Number of heap bytes obtained from system.,0,karpenter,,
karpenter.go.memstats.last.gc.time_seconds,gauge,,,,Number of seconds since 1970 of last garbage collection.,0,karpenter,,
karpenter.go.memstats.lookups.count,count,,,,Count of pointer lookups.,0,karpenter,,
karpenter.go.memstats.mallocs.count,count,,,,Count of mallocs.,0,karpenter,,
karpenter.go.memstats.mcache.inuse_bytes,gauge,,,,Number of bytes in use by mcache structures.,0,karpenter,,
karpenter.go.memstats.mcache.sys_bytes,gauge,,,,Number of bytes used for mcache structures obtained from system.,0,karpenter,,
karpenter.go.memstats.mspan.inuse_bytes,gauge,,,,Number of bytes in use by mspan structures.,0,karpenter,,
karpenter.go.memstats.mspan.sys_bytes,gauge,,,,Number of bytes used for mspan structures obtained from system.,0,karpenter,,
karpenter.go.memstats.next.gc_bytes,gauge,,,,Number of heap bytes when next garbage collection will take place.,0,karpenter,,
karpenter.go.memstats.other.sys_bytes,gauge,,,,Number of bytes used for other system allocations.,0,karpenter,,
karpenter.go.memstats.stack.inuse_bytes,gauge,,,,Number of bytes in use by the stack allocator.,0,karpenter,,
karpenter.go.memstats.stack.sys_bytes,gauge,,,,Number of bytes obtained from system for stack allocator.,0,karpenter,,
karpenter.go.memstats.sys_bytes,gauge,,,,Number of bytes obtained from system.,0,karpenter,,
karpenter.go_goroutines,gauge,,,,Number of goroutines that currently exist.,0,karpenter,,
karpenter.go_info,gauge,,,,Information about the Go environment.,0,karpenter,,
karpenter.go_threads,gauge,,,,Number of OS threads created.,0,karpenter,,
karpenter.interruption.actions_performed.count,count,,,,Count of notification actions performed. Labeled by action,0,karpenter,,
karpenter.interruption.deleted_messages.count,count,,,,Count of messages deleted from the SQS queue.,0,karpenter,,
karpenter.interruption.message.latency.time_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.interruption.message.latency.time_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.interruption.message.latency.time_seconds.sum,count,,,,*Length of time between message creation in queue and an action taken on the message by the controller.,0,karpenter,,
karpenter.interruption.received_messages.count,count,,,,Count of messages received from the SQS queue. Broken down by message type and whether the message was actionable.,0,karpenter,,
karpenter.machines_created,gauge,,,,Number of machines created in total by Karpenter. Labeled by reason the machine was created and the owning provisioner.,0,karpenter,,
karpenter.machines_disrupted,gauge,,,,Number of machines disrupted in total by Karpenter. Labeled by disruption type of the machine and the owning provisioner.,0,karpenter,,
karpenter.machines_drifted,gauge,,,,Number of machine drifted reasons in total by Karpenter. Labeled by drift type of the machine and the owning provisioner.,0,karpenter,,
karpenter.machines_initialized,gauge,,,,Number of machines initialized in total by Karpenter. Labeled by the owning provisioner.,0,karpenter,,
karpenter.machines_launched,gauge,,,,Number of machines launched in total by Karpenter. Labeled by the owning provisioner.,0,karpenter,,
karpenter.machines_registered,gauge,,,,Number of machines registered in total by Karpenter. Labeled by the owning provisioner.,0,karpenter,,
karpenter.machines_terminated,gauge,,,,Number of machines terminated in total by Karpenter. Labeled by reason the machine was terminated and the owning provisioner.,0,karpenter,,
karpenter.nodes.allocatable,gauge,,,,Node allocatable are the resources allocatable by nodes.,0,karpenter,,
karpenter.nodes.created,gauge,,,,Number of nodes created in total by Karpenter. Labeled by owning provisioner.,0,karpenter,,
karpenter.nodes.leases_deleted,gauge,,,,Number of deleted leaked leases.,0,karpenter,,
karpenter.nodes.system_overhead,gauge,,,,"Node system daemon overhead are the resources reserved for system overhead, the difference between the node’s capacity and allocatable values are reported by the status.",0,karpenter,,
karpenter.nodes.terminated,gauge,,,,Number of nodes terminated in total by Karpenter. Labeled by owning provisioner.,0,karpenter,,
karpenter.nodes.termination.time_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.nodes.termination.time_seconds.quantile,gauge,,,,<Placeholder>,0,karpenter,,
karpenter.nodes.termination.time_seconds.sum,count,,,,The time taken between a node’s deletion request and the removal of its finalizer,0,karpenter,,
karpenter.nodes.total.daemon_limits,gauge,,,,Total resources specified by DaemonSet pod limits,0,karpenter,,
karpenter.nodes.total.daemon_requests,gauge,,,,Total resources requested by DaemonSet pods,0,karpenter,,
karpenter.nodes.total.pod_limits,gauge,,,,Total pod resources specified by non-DaemonSet pod limits.,0,karpenter,,
karpenter.nodes.total.pod_requests,gauge,,,,Total pod resources requested by non-DaemonSet pods bound,0,karpenter,,
karpenter.pods.startup.time_seconds.count,count,,,,The time from pod creation until the pod is running.,0,karpenter,,
karpenter.pods.startup.time_seconds.sum,count,,,,The time from pod creation until the pod is running.,0,karpenter,,
karpenter.process.cpu_seconds.count,count,,,,Total user and system CPU time spent in seconds.,0,karpenter,,
karpenter.process.max_fds,gauge,,,,Maximum number of open file descriptors.,0,karpenter,,
karpenter.process.open_fds,gauge,,,,Number of open file descriptors.,0,karpenter,,
karpenter.process.resident.memory_bytes,gauge,,,,Resident memory size in bytes.,0,karpenter,,
karpenter.process.start.time_seconds,gauge,,,,Start time of the process since unix epoch in seconds.,0,karpenter,,
karpenter.process.virtual.memory.max_bytes,gauge,,,,Maximum amount of virtual memory available in bytes.,0,karpenter,,
karpenter.process.virtual.memory_bytes,gauge,,,,Virtual memory size in bytes.,0,karpenter,,
karpenter.provisioner.limit,gauge,,,,The limits specified on the provisioner that restrict the quantity of resources provisioned. Labeled by provisioner name and resource type.,0,karpenter,,
karpenter.provisioner.scheduling.duration_seconds.bucket,count,,,,Duration of scheduling process in seconds. Broken down by provisioner and error.,0,karpenter,,
karpenter.provisioner.scheduling.duration_seconds.count,count,,,,Duration of scheduling process in seconds. Broken down by provisioner and error.,0,karpenter,,
karpenter.provisioner.scheduling.duration_seconds.sum,count,,,,Duration of scheduling process in seconds. Broken down by provisioner and error.,0,karpenter,,
karpenter.provisioner.scheduling.simulation.duration_seconds.bucket,count,,,,<Placeholder>,0,karpenter,,
karpenter.provisioner.scheduling.simulation.duration_seconds.count,count,,,,<Placeholder>,0,karpenter,,
karpenter.provisioner.scheduling.simulation.duration_seconds.sum,count,,,,Duration of scheduling simulations used for deprovisioning and provisioning in seconds.,0,karpenter,,
karpenter.provisioner.usage,gauge,,,,The amount of resources that have been provisioned by a particular provisioner. Labeled by provisioner name and resource type.,0,karpenter,,
karpenter.provisioner.usage.pct,gauge,,,,The percentage of each resource used based on the resources provisioned and the limits that have been configured in the range [0,100]. Labeled by provisioner name and resource type.,0,karpenter,,
karpenter.rest.client_requests.count,count,,,,"Count of HTTP requests, partitioned by status code, method, and host.",0,karpenter,,
karpenter.workqueue.longest.running.processor_seconds,gauge,,,,How many seconds has the longest running processor for workqueue been running.,0,karpenter,,
karpenter.workqueue.queue.duration_seconds.bucket,count,,,,<placeholder>,0,karpenter,,
karpenter.workqueue.queue.duration_seconds.count,count,,,,<placeholder>,0,karpenter,,
karpenter.workqueue.queue.duration_seconds.sum,count,,,,How long in seconds an item stays in workqueue before being requested,0,karpenter,,
karpenter.workqueue.unfinished.work_seconds,gauge,,,,How many seconds of work has been done that is in progress and hasn't been observed by work_duration. Large values indicate stuck threads. One can deduce the number of stuck threads by observing the rate at which this increases.,0,karpenter,,
karpenter.workqueue.work.duration_seconds.bucket,count,,,,How long in seconds processing an item from workqueue takes.,0,karpenter,,
karpenter.workqueue.work.duration_seconds.count,count,,,,How long in seconds processing an item from workqueue takes.,0,karpenter,,
karpenter.workqueue.work.duration_seconds.sum,count,,,,How long in seconds processing an item from workqueue takes.,0,karpenter,,
karpenter.workqueue_adds.count,count,,,,Count of adds handled by workqueue,0,karpenter,,
karpenter.workqueue_depth,gauge,,,,Current depth of workqueue,0,karpenter,,
karpenter.workqueue_retries.count,count,,,,Count of retries handled by workqueue,0,karpenter,,
