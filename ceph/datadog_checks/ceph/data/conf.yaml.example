## All options defined here are available to all instances.
#
init_config:

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

## Every instance is scheduled independent of the others.
#
instances:

  -
    ## @param ceph_cmd - string - optional - default: /usr/bin/ceph
    ## Ceph command to use.
    #
    # ceph_cmd: /usr/bin/ceph

    ## @param ceph_cluster - string - optional - default: ceph
    ## Cluster ceph to query.
    #
    # ceph_cluster: ceph

    ## @param use_sudo - boolean - optional - default: false
    ## If your environment requires sudo, please add the following line:
    ##
    ## dd-agent ALL=(ALL) NOPASSWD:/usr/bin/ceph
    ##
    ## to your sudoers file, and uncomment the option below:
    #
    # use_sudo: false

    ## @param collect_service_check_for - list of strings - optional
    ## If you wish to customize the health checks sent as a service check, uncomment and edit the list below.
    ## It collects by default the health check listed below.
    ## The list of health checks is available here: http://docs.ceph.com/docs/master/rados/operations/health-checks/
    ## The health checks are only available if you're running ceph luminous or later
    #
    # collect_service_check_for:
    #   - OSD_DOWN
    #   - OSD_ORPHAN
    #   - OSD_FULL
    #   - OSD_NEARFULL
    #   - POOL_FULL
    #   - POOL_NEAR_FULL
    #   - PG_AVAILABILITY
    #   - PG_DEGRADED
    #   - PG_DEGRADED_FULL
    #   - PG_DAMAGED
    #   - PG_NOT_SCRUBBED
    #   - PG_NOT_DEEP_SCRUBBED
    #   - CACHE_POOL_NEAR_FULL
    #   - TOO_FEW_PGS
    #   - TOO_MANY_PGS
    #   - OBJECT_UNFOUND
    #   - REQUEST_SLOW
    #   - REQUEST_STUCK

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which Integration sent the logs.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /var/log/ceph/*.log
#     source: ceph
#     service: <APPLICATION_NAME>
#     log_processing_rules:
#     - type: multi_line
#       name: log_start_with_date
#       pattern: \d{4}-\d{2}-\d{2}
