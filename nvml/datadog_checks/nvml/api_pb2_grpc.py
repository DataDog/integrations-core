# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
# flake8: noqa
import grpc

from . import api_pb2 as api__pb2


class PodResourcesListerStub(object):
    """PodResourcesLister is a service provided by the kubelet that provides information about the
    node resources consumed by pods and containers on the node
    """

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
            '/v1alpha1.PodResourcesLister/List',
            request_serializer=api__pb2.ListPodResourcesRequest.SerializeToString,
            response_deserializer=api__pb2.ListPodResourcesResponse.FromString,
        )


class PodResourcesListerServicer(object):
    """PodResourcesLister is a service provided by the kubelet that provides information about the
    node resources consumed by pods and containers on the node
    """

    def List(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PodResourcesListerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'List': grpc.unary_unary_rpc_method_handler(
            servicer.List,
            request_deserializer=api__pb2.ListPodResourcesRequest.FromString,
            response_serializer=api__pb2.ListPodResourcesResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler('v1alpha1.PodResourcesLister', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
