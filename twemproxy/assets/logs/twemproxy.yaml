id: twemproxy
metric_id: twemproxy
backend_only: false
facets:
  - groups:
      - Twemproxy
    name: Host
    path: hostname
    source: log
  - groups:
      - Twemproxy
    name: Port
    path: port
    source: log
pipeline:
  type: pipeline
  name: Twemproxy
  enabled: true
  filter:
    query: source:twemproxy
  processors:
    - type: grok-parser
      name: Parsing Twemproxy logs
      enabled: true
      source: message
      samples:
        - "[Tue Mar 30 15:51:03 2021] nc_proxy.c:206 p 5 listening on '0.0.0.0:6100' in redis pool 0 'situ' with 2 servers"
        - "[2021-03-19 11:24:36.976] nc_ketama.c:120 1 of 1 servers are live for pool 1 'alpha'"
        - "[2021-03-19 11:24:37.302] nc_proxy.c:213 p 9 listening on '127.0.0.1:22121' in memcache pool 3 'gamma' with 2 servers"
      grok:
        supportRules: |
          _date \[(%{date("yyyy-MM-dd HH:mm:ss.SSS"):timestamp}|%{date("EEE MMM dd HH:mm:ss yyyy"):timestamp}|%{date("EEE MMM  d HH:mm:ss yyyy"):timestamp})\]
          _code %{notSpace:filename}:%{integer:lineno}
          _log_message (%{_init_message}|%{_listen_message}|%{_live_message}|%{_error_message}|%{_message})
          _init_message init %{integer:twemproxy.pool.servers} servers in pool %{integer:twemproxy.pool.number} '%{notSpace:twemproxy.pool.name}'
          _listen_message p %{integer:process.id} listening on %{_address} in %{_pool_info}
          _address '%{ipOrHost:hostname}:%{port:port}'
          _pool_info %{notSpace:twemproxy.pool.service} pool %{integer:twemproxy.pool.number} '%{notSpace:twemproxy.pool.name}' with %{integer:twemproxy.pool.servers} servers
          _live_message %{integer:twemproxy.servers.live} of %{integer:twemproxy.servers.total} servers are live for pool %{integer:twemproxy.pool.number} '%{notSpace:twemproxy.pool.name}'
          _error_message %{data:error.message} failed:\s+%{data:error.type}
          _message %{data}

        matchRules: |
          log_rule %{_date}\s+%{_code}\s+%{_log_message:msg}
    - type: date-remapper
      name: Define `timestamp` as the official date of the log
      enabled: true
      sources:
        - timestamp

    - type: category-processor
      name: Categorize level
      enabled: true
      categories:
        - filter:
            query: '@error.message:*'
          name: warning
        - filter:
            query: -@error.message:*
          name: info
      target: level
    - type: status-remapper
      name: Define `level` as the official status of the log
      enabled: true
      sources:
        - level
    - type: message-remapper
      name: Define `msg` as the official message of the log
      enabled: true
      sources:
        - msg
