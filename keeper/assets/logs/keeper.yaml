id: keeper
metric_id: keeper
backend_only: false
facets:
  - groups:
      - Event
    name: Event Name
    path: evt.name
    source: log
  - groups:
      - Geoip
    name: City Name
    path: network.client.geoip.city.name
    source: log
  - groups:
      - Geoip
    name: Continent Code
    path: network.client.geoip.continent.code
    source: log
  - groups:
      - Geoip
    name: Continent Name
    path: network.client.geoip.continent.name
    source: log
  - groups:
      - Geoip
    name: Country ISO Code
    path: network.client.geoip.country.iso_code
    source: log
  - groups:
      - Geoip
    name: Country Name
    path: network.client.geoip.country.name
    source: log
  - groups:
      - Geoip
    name: Subdivision ISO Code
    path: network.client.geoip.subdivision.iso_code
    source: log
  - groups:
      - Geoip
    name: Subdivision Name
    path: network.client.geoip.subdivision.name
    source: log
  - groups:
      - Web Access
    name: Client IP
    path: network.client.ip
    source: log
  - groups:
      - User
    name: User Email
    path: usr.email
    source: log
pipeline:
  type: pipeline
  name: Keeper
  enabled: true
  filter:
    query: source:keeper
  processors:
    - type: grok-parser
      name: Extract timestamp and JSON from message
      enabled: true
      source: message
      samples:
        - <165>1 2025-06-11T05:27:24.000Z keepersecurity.com keeper - - -
          {"record_uid":"Dm_l4bk34Rj62ef-XUPv3g","audit_event":"copy_password","remote_address":"10.10.10.10","category":"usage","client_version":"Web
          App.17.2.2","username":"xakemaukubri-2168@company.com","enterprise_id":260753}
        - <165>1 2025-6-1T5:7:4.123Z keepersecurity.com keeper - - -
          {"record_uid":"Dm_l4bk34Rj62ef-XUPv3g"}
        - <165>1 2025-6-1T5:7:4.123Z keepersecurity.com keeper - 1234 -
          {"record_uid":"Dm_l4bk34Rj62ef-XUPv3g"}
      grok:
        supportRules: ""
        matchRules: extract_event_time_and_json <%{integer}>%{integer}
          %{date("yyyy-M-d'T'H:m:s.SSSZ"):timestamp} %{notSpace} %{notSpace}
          %{notSpace} %{notSpace} - %{data::json}
    - type: service-remapper
      name: Define `service` as the official service of the log
      enabled: true
      sources:
        - service
    - type: date-remapper
      name: Define `timestamp` as the official date of the log
      enabled: true
      sources:
        - timestamp
    - type: attribute-remapper
      name: Map `audit_event` to `evt.name`
      enabled: true
      sources:
        - audit_event
      sourceType: attribute
      target: evt.name
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `category` to `evt.category`
      enabled: true
      sources:
        - category
      sourceType: attribute
      target: evt.category
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: attribute-remapper
      name: Map `remote_address` to `network.client.ip`
      enabled: true
      sources:
        - remote_address
      sourceType: attribute
      target: network.client.ip
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: geo-ip-parser
      name: Extract geolocation information from `network.client.ip`
      enabled: true
      sources:
        - network.client.ip
      target: network.client.geoip
      ip_processing_behavior: do-nothing
    - type: attribute-remapper
      name: Map `username` to `usr.email`
      enabled: true
      sources:
        - username
      sourceType: attribute
      target: usr.email
      targetType: attribute
      preserveSource: false
      overrideOnConflict: false
    - type: pipeline
      name: Process external record sharing events
      enabled: true
      filter:
        query: "@evt.name:(ext_share_added OR ext_share_access OR ext_share_connected OR
          ext_share_expired OR ext_share_removed)"
      processors:
        - type: attribute-remapper
          name: Map `app_uid` to `record_uid`
          enabled: true
          sources:
            - app_uid
          sourceType: attribute
          target: record_uid
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: pipeline
      name: Process `pending_added_to_role` and `pending_removed_from_role` events
      enabled: true
      filter:
        query: "@evt.name:(pending_added_to_role OR pending_removed_from_role)"
      processors:
        - type: attribute-remapper
          name: Map `value` to `to_username`
          enabled: true
          sources:
            - value
          sourceType: attribute
          target: to_username
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: pipeline
      name: Process `vault_transferred` event
      enabled: true
      filter:
        query: "@evt.name:vault_transferred"
      processors:
        - type: attribute-remapper
          name: Map `email` to `from_user`
          enabled: true
          sources:
            - email
          sourceType: attribute
          target: from_user
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
        - type: attribute-remapper
          name: Map `to_username` to `to_user`
          enabled: true
          sources:
            - to_username
          sourceType: attribute
          target: to_user
          targetType: attribute
          preserveSource: false
          overrideOnConflict: false
    - type: string-builder-processor
      name: "Reset `additionalProperties` attribute "
      enabled: true
      template: "%{resolve_to_empty_string}"
      target: additionalProperties
      replaceMissing: true
