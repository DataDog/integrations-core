## All options defined here are available to all instances.
#
init_config:

    ## @param is_jmx - boolean - optional - default: false
    ## Whether or not this file is a configuration for a JMX integration.
    #
    # is_jmx: false

    ## @param collect_default_metrics - boolean - optional - default: false
    ## Whether or not the check should collect all default metrics.
    #
    collect_default_metrics: true

    ## @param new_gc_metrics - boolean - optional - default: false
    ## Set to true to use better metric names for garbage collection metrics.
    ## jvm.gc.cms.count   => jvm.gc.minor_collection_count
    ##                       jvm.gc.major_collection_count
    ## jvm.gc.parnew.time => jvm.gc.minor_collection_time
    ##                       jvm.gc.major_collection_time
    ## The default value is false to ensure backward compatibility.
    #
    new_gc_metrics: true

    ## @param service_check_prefix - string - optional
    ## Custom service check prefix. e.g. `my_prefix` to get a service check called `my_prefix.can_connect`.
    ## If not set, the default service check used is the integration name.
    #
    # service_check_prefix: <SERVICE_CHECK_PREFIX>

    ## @param conf - list of mappings - optional
    ## The list of metrics to be collected by the integration
    ## Read http://docs.datadoghq.com/integrations/java/ to learn how to customize it
    ## The default metrics to be collected are kept in metrics.yaml, but you can still
    ## add your own metrics here.
    #
    # conf:
    #   - include:
    #       bean: <BEAN_NAME>
    #       attribute:
    #         MyAttribute:
    #           alias: my.metric.name
    #           metric_type: gauge

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Additionally, this sets the default `service` for every log source.
    #
    # service: <SERVICE>

    ## @param proxy - mapping - optional
    ## Set HTTP or HTTPS proxies for all instances. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported like so:
    ##
    ##   socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #   - <HOSTNAME_1>
    #   - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

    ## @param timeout - number - optional - default: 10
    ## The timeout for connecting to services.
    #
    # timeout: 10

## Every instance is scheduled independent of the others.
#
instances:

    ## Web API instance example
  -
    ## @param web_endpoint - string - optional
    ## The SonarQube web endpoint with an exposed API at `/api`. For example:
    ##
    ##   web_endpoint: http://<WEB_ENDPOINT>:<PORT>
    ##
    ## Note: This only takes effect when `is_jmx` is set to `false` and is required for all
    ## API metrics.
    #
    # web_endpoint: <WEB_ENDPOINT>

    ## @param default_tag - string - optional - default: component
    ## The tag name to use for `components` by default.
    ##
    ## Note: This only takes effect when `is_jmx` is set to `false`.
    #
    # default_tag: component

    ## @param default_include - list of strings - optional
    ## A list of regular expressions used to collect metrics by default. For brevity,
    ## you may alter the `sonarqube.` prefix and `.` (dot) characters are treated literally.
    ##
    ## By default, all available metrics are collected.
    ##
    ## Note: This only takes effect when `is_jmx` is set to `false`.
    #
    # default_include: []

    ## @param default_exclude - list of strings - optional
    ## A list of regular expressions used to collect metrics by default. For brevity,
    ## you may alter the `sonarqube.` prefix and `.` (dot) characters are treated literally.
    ##
    ## By default, no metrics are excluded.
    ##
    ## Note: This only takes effect when `is_jmx` is set to `false`.
    #
    # default_exclude: []

    ## @param components - mapping - optional
    ## The components for which metrics should be collected. Each object may override the default
    ## options. The following example gathers all default metrics for "some-project",
    ## and only what is included/excluded for "another-project":
    ##
    ##   components:
    ##     some-project:
    ##     another-project:
    ##       tag: project-2
    ##       include:
    ##         - issues.
    ##         - maintainability.
    ##         - security.
    ##       exclude:
    ##         - issues.(false_positive_issues|reopened_issues)
    ##
    ## Note: This is required for all project checks, whether `is_jmx` is set to `true`
    ## or `false.
    #
    # components: {}

    ## @param proxy - mapping - optional
    ## This overrides the `proxy` setting in `init_config`.
    ##
    ## Set HTTP or HTTPS proxies for this instance. Use the `no_proxy` list
    ## to specify hosts that must bypass proxies.
    ##
    ## The SOCKS protocol is also supported, for example:
    ##
    ##   socks5://user:pass@host:port
    ##
    ## Using the scheme `socks5` causes the DNS resolution to happen on the
    ## client, rather than on the proxy server. This is in line with `curl`,
    ## which uses the scheme to decide whether to do the DNS resolution on
    ## the client or proxy. If you want to resolve the domains on the proxy
    ## server, use `socks5h` as the scheme.
    #
    # proxy:
    #   http: http://<PROXY_SERVER_FOR_HTTP>:<PORT>
    #   https: https://<PROXY_SERVER_FOR_HTTPS>:<PORT>
    #   no_proxy:
    #   - <HOSTNAME_1>
    #   - <HOSTNAME_2>

    ## @param skip_proxy - boolean - optional - default: false
    ## This overrides the `skip_proxy` setting in `init_config`.
    ##
    ## If set to `true`, this makes the check bypass any proxy
    ## settings enabled and attempt to reach services directly.
    #
    # skip_proxy: false

    ## @param auth_type - string - optional - default: basic
    ## The type of authentication to use. The available types (and related options) are:
    ##
    ##   - basic
    ##     |__ username
    ##     |__ password
    ##     |__ use_legacy_auth_encoding
    ##   - digest
    ##     |__ username
    ##     |__ password
    ##   - ntlm
    ##     |__ ntlm_domain
    ##     |__ password
    ##   - kerberos
    ##     |__ kerberos_auth
    ##     |__ kerberos_cache
    ##     |__ kerberos_delegate
    ##     |__ kerberos_force_initiate
    ##     |__ kerberos_hostname
    ##     |__ kerberos_keytab
    ##     |__ kerberos_principal
    ##   - aws
    ##     |__ aws_region
    ##     |__ aws_host
    ##     |__ aws_service
    ##
    ## The `aws` auth type relies on boto3 to automatically gather AWS credentials, for example: from `.aws/credentials`.
    ## Details: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html#configuring-credentials
    #
    # auth_type: basic

    ## @param use_legacy_auth_encoding - boolean - optional - default: true
    ## When `auth_type` is set to `basic`, this determines whether to encode as `latin1` rather than `utf-8`.
    #
    # use_legacy_auth_encoding: true

    ## @param username - string - optional
    ## The username to use if services are behind basic or digest auth.
    #
    # username: <USERNAME>

    ## @param ntlm_domain - string - optional
    ## If your services use NTLM authentication, specify
    ## the domain used in the check. For NTLM Auth, append
    ## the username to domain, not as the `username` parameter.
    #
    # ntlm_domain: <NTLM_DOMAIN>\<USERNAME>

    ## @param kerberos_auth - string - optional - default: disabled
    ## If your services use Kerberos authentication, you can specify the Kerberos
    ## strategy to use between:
    ##
    ##   - required
    ##   - optional
    ##   - disabled
    ##
    ## See https://github.com/requests/requests-kerberos#mutual-authentication
    #
    # kerberos_auth: disabled

    ## @param kerberos_cache - string - optional
    ## Sets the KRB5CCNAME environment variable.
    ## It should point to a credential cache with a valid TGT.
    #
    # kerberos_cache: <KERBEROS_CACHE>

    ## @param kerberos_delegate - boolean - optional - default: false
    ## Set to `true` to enable Kerberos delegation of credentials to a server that requests delegation.
    ##
    ## See https://github.com/requests/requests-kerberos#delegation
    #
    # kerberos_delegate: false

    ## @param kerberos_force_initiate - boolean - optional - default: false
    ## Set to `true` to preemptively initiate the Kerberos GSS exchange and
    ## present a Kerberos ticket on the initial request (and all subsequent).
    ##
    ## See https://github.com/requests/requests-kerberos#preemptive-authentication
    #
    # kerberos_force_initiate: false

    ## @param kerberos_hostname - string - optional
    ## Override the hostname used for the Kerberos GSS exchange if its DNS name doesn't
    ## match its Kerberos hostname, for example: behind a content switch or load balancer.
    ##
    ## See https://github.com/requests/requests-kerberos#hostname-override
    #
    # kerberos_hostname: <KERBEROS_HOSTNAME>

    ## @param kerberos_principal - string - optional
    ## Set an explicit principal, to force Kerberos to look for a
    ## matching credential cache for the named user.
    ##
    ## See https://github.com/requests/requests-kerberos#explicit-principal
    #
    # kerberos_principal: <KERBEROS_PRINCIPAL>

    ## @param kerberos_keytab - string - optional
    ## Set the path to your Kerberos key tab file.
    #
    # kerberos_keytab: <KEYTAB_FILE_PATH>

    ## @param auth_token - mapping - optional
    ## This allows for the use of authentication information from dynamic sources.
    ## Both a reader and writer must be configured.
    ##
    ## The available readers are:
    ##
    ##   - type: file
    ##     path (required): The absolute path for the file to read from.
    ##     pattern: A regular expression pattern with a single capture group used to find the
    ##              token rather than using the entire file, for example: Your secret is (.+)
    ##
    ## The available writers are:
    ##
    ##   - type: header
    ##     name (required): The name of the field, for example: Authorization
    ##     value: The template value, for example `Bearer <TOKEN>`. The default is: <TOKEN>
    ##     placeholder: The substring in `value` to replace by the token, defaults to: <TOKEN>
    #
    # auth_token:
    #   reader:
    #     type: <READER_TYPE>
    #     <OPTION_1>: <VALUE_1>
    #     <OPTION_2>: <VALUE_2>
    #   writer:
    #     type: <WRITER_TYPE>
    #     <OPTION_1>: <VALUE_1>
    #     <OPTION_2>: <VALUE_2>

    ## @param aws_region - string - optional
    ## If your services require AWS Signature Version 4 signing, set the region.
    ##
    ## See https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
    #
    # aws_region: <AWS_REGION>

    ## @param aws_host - string - optional
    ## If your services require AWS Signature Version 4 signing, set the host.
    ##
    ## Note: This setting is not necessary for official integrations.
    ##
    ## See https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
    #
    # aws_host: <AWS_HOST>

    ## @param aws_service - string - optional
    ## If your services require AWS Signature Version 4 signing, set the service code. For a list
    ## of available service codes, see https://docs.aws.amazon.com/general/latest/gr/rande.html
    ##
    ## Note: This setting is not necessary for official integrations.
    ##
    ## See https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html
    #
    # aws_service: <AWS_SERVICE>

    ## @param tls_verify - boolean - optional - default: true
    ## Instructs the check to validate the TLS certificate of services.
    #
    # tls_verify: true

    ## @param tls_use_host_header - boolean - optional - default: false
    ## If a `Host` header is set, this enables its use for SNI (matching against the TLS certificate CN or SAN).
    #
    # tls_use_host_header: false

    ## @param tls_ignore_warning - boolean - optional - default: false
    ## If `tls_verify` is disabled, security warnings are logged by the check.
    ## Disable those by setting `tls_ignore_warning` to true.
    ##
    ## Note: `tls_ignore_warning` set to true is currently only reliable if used by one instance of one integration.
    ## If enabled for multiple instances, spurious warnings might still appear even if `tls_ignore_warning` is set
    ## to true.
    #
    # tls_ignore_warning: false

    ## @param tls_cert - string - optional
    ## The path to a single file in PEM format containing a certificate as well as any
    ## number of CA certificates needed to establish the certificate's authenticity for
    ## use when connecting to services. It may also contain an unencrypted private key to use.
    #
    # tls_cert: <CERT_PATH>

    ## @param tls_private_key - string - optional
    ## The unencrypted private key to use for `tls_cert` when connecting to services. This is
    ## required if `tls_cert` is set and it does not already contain a private key.
    #
    # tls_private_key: <PRIVATE_KEY_PATH>

    ## @param tls_ca_cert - string - optional
    ## The path to a file of concatenated CA certificates in PEM format or a directory
    ## containing several CA certificates in PEM format. If a directory, the directory
    ## must have been processed using the c_rehash utility supplied with OpenSSL. See:
    ## https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html
    #
    # tls_ca_cert: <CA_CERT_PATH>

    ## @param headers - mapping - optional
    ## The headers parameter allows you to send specific headers with every request.
    ## You can use it for explicitly specifying the host header or adding headers for
    ## authorization purposes.
    ##
    ## This overrides any default headers.
    #
    # headers:
    #   Host: <ALTERNATIVE_HOSTNAME>
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param extra_headers - mapping - optional
    ## Additional headers to send with every request.
    #
    # extra_headers:
    #   Host: <ALTERNATIVE_HOSTNAME>
    #   X-Auth-Token: <AUTH_TOKEN>

    ## @param timeout - number - optional - default: 10
    ## The timeout for accessing services.
    ##
    ## This overrides the `timeout` setting in `init_config`.
    #
    # timeout: 10

    ## @param connect_timeout - number - optional
    ## The connect timeout for accessing services. Defaults to `timeout`.
    #
    # connect_timeout: <CONNECT_TIMEOUT>

    ## @param read_timeout - number - optional
    ## The read timeout for accessing services. Defaults to `timeout`.
    #
    # read_timeout: <READ_TIMEOUT>

    ## @param request_size - number - optional - default: 16
    ## The number of kibibytes (KiB) to read from streaming HTTP responses at a time.
    #
    # request_size: 16

    ## @param log_requests - boolean - optional - default: false
    ## Whether or not to debug log the HTTP(S) requests made, including the method and URL.
    #
    # log_requests: false

    ## @param persist_connections - boolean - optional - default: false
    ## Whether or not to persist cookies and use connection pooling for increased performance.
    #
    # persist_connections: false

    ## @param allow_redirects - boolean - optional - default: true
    ## Whether or not to allow URL redirection.
    #
    # allow_redirects: true

    ## Web JMX instance example
  -
    ## @param is_jmx - boolean - optional - default: true
    ## Whether or not this instance is a configuration for a JMX integration.
    ## If `is_jmx` is set to true at the init_config level, this flag is ignored.
    ##
    ## Note: Setting `is_jmx` to true disables some configuration options.
    #
    # is_jmx: true

    ## @param host - string - optional
    ## JMX hostname to connect to.
    #
    # host: <HOST>

    ## @param port - integer - optional
    ## JMX port to connect to.
    #
    # port: <PORT>

    ## @param user - string - optional
    ## The user name for connecting to JMX (or HTTP if `is_jmx = false`).
    #
    # user: <USER>

    ## @param password - string - optional
    ## The password for connecting to JMX (or HTTP if `is_jmx = false`).
    #
    # password: <PASSWORD>

    ## @param process_name_regex - string - optional
    ## Instead of using a host and port, the Agent can connect using the attach API.
    ## This requires the JDK to be installed and the path to tools.jar to be set below.
    ## Note: It needs to be set when process_name_regex parameter is set
    ## e.g. .*process_name.*
    ##
    ## Note: tools.jar was removed in Java 9: https://openjdk.java.net/jeps/220.
    ## This option is supported in Java 8 and below.
    #
    # process_name_regex: <PROCESS_NAME_REGEX>

    ## @param tools_jar_path - string - optional
    ## The tools.jar path to be used with the `process_name_regex` parameter,
    ## for example: /usr/lib/jvm/java-7-openjdk-amd64/lib/tools.jar
    ##
    ## Note: tools.jar was removed in Java 9: https://openjdk.java.net/jeps/220.
    ## This option is supported in Java 8 and below.
    #
    # tools_jar_path: <TOOLS_JAR_PATH>

    ## @param name - string - optional
    ## Set the instance name to be used as the `instance` tag.
    #
    # name: <NAME>

    ## @param java_bin_path - string - optional
    ## `java_bin_path` should be set if the Agent cannot find your java executable.
    #
    # java_bin_path: <JAVA_BIN_PATH>

    ## @param java_options - string - optional
    ## A list of Java JVM options, for example: "-Xmx200m -Xms50m".
    #
    # java_options: <JAVA_OPTIONS>

    ## @param trust_store_path - string - optional
    ## The path to your trusted store.
    ## `trust_store_path` should be set if SSL is enabled.
    #
    # trust_store_path: <TRUST_STORE_PATH>

    ## @param trust_store_password - string - optional
    ## The password for your TrustStore.jks file.
    ## `trust_store_password` should be set if SSL is enabled.
    #
    # trust_store_password: <TRUST_STORE_PASSWORD>

    ## @param key_store_path - string - optional
    ## The path to your key store.
    ## `key_store_path` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_path: <KEY_STORE_PATH>

    ## @param key_store_password - string - optional
    ## The password to your key store.
    ## `key_store_password` should be set if client authentication is enabled on the target JVM.
    #
    # key_store_password: <KEY_STORE_PASSWORD>

    ## @param rmi_registry_ssl - boolean - optional - default: false
    ## Whether or not the Agent should connect to the RMI registry using SSL.
    #
    # rmi_registry_ssl: false

    ## @param rmi_connection_timeout - number - optional - default: 20000
    ## The connection timeout, in milliseconds, when connecting to a remote JVM.
    #
    # rmi_connection_timeout: 20000

    ## @param rmi_client_timeout - number - optional - default: 15000
    ## The timeout to consider a remote connection, already successfully established, as lost.
    ## If a connected remote JVM does not reply after `rmi_client_timeout` milliseconds jmxfetch
    ## will give up on that connection and retry.
    #
    # rmi_client_timeout: 15000

    ## @param collect_default_jvm_metrics - boolean - optional - default: true
    ## Configures the collection of default JVM metrics.
    #
    # collect_default_jvm_metrics: true

    ## @param tags - list of strings - optional
    ## A list of tags to attach to every metric and service check emitted by this instance.
    ##
    ## Learn more about tagging at https://docs.datadoghq.com/tagging
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## @param service - string - optional
    ## Attach the tag `service:<SERVICE>` to every metric, event, and service check emitted by this integration.
    ##
    ## Overrides any `service` defined in the `init_config` section.
    #
    # service: <SERVICE>

    ## @param min_collection_interval - number - optional - default: 15
    ## This changes the collection interval of the check. For more information, see:
    ## https://docs.datadoghq.com/developers/write_agent_check/#collection-interval
    #
    # min_collection_interval: 15

    ## @param empty_default_hostname - boolean - optional - default: false
    ## This forces the check to send metrics with no hostname.
    ##
    ## This is useful for cluster-level checks.
    #
    # empty_default_hostname: false

## Log Section
##
## type - required - Type of log input source (tcp / udp / file / windows_event)
## port / path / channel_path - required - Set port if type is tcp or udp.
##                                         Set path if type is file.
##                                         Set channel_path if type is windows_event.
## source  - required - Attribute that defines which integration sent the logs.
## encoding - optional - For file specifies the file encoding, default is utf-8, other
##                       possible values are utf-16-le and utf-16-be.
## service - optional - The name of the service that generates the log.
##                      Overrides any `service` defined in the `init_config` section.
## tags - optional - Add tags to the collected logs.
##
## Discover Datadog log collection: https://docs.datadoghq.com/logs/log_collection/
#
# logs:
#   - type: file
#     path: /opt/sonarqube/logs/access.log
#     source: sonarqube
#   - type: file
#     path: /opt/sonarqube/logs/ce.log
#     source: sonarqube
#     log_processing_rules:
#     - type: multi_line
#       name: log_start_with_date
#       pattern: \d{4}\.\d{2}\.\d{2}
#   - type: file
#     path: /opt/sonarqube/logs/es.log
#     source: sonarqube
#     log_processing_rules:
#     - type: multi_line
#       name: log_start_with_date
#       pattern: \d{4}\.\d{2}\.\d{2}
#   - type: file
#     path: /opt/sonarqube/logs/sonar.log
#     source: sonarqube
#     log_processing_rules:
#     - type: multi_line
#       name: log_start_with_date
#       pattern: \d{4}\.\d{2}\.\d{2}
#   - type: file
#     path: /opt/sonarqube/logs/web.log
#     source: sonarqube
#     log_processing_rules:
#     - type: multi_line
#       name: log_start_with_date
#       pattern: \d{4}\.\d{2}\.\d{2}
