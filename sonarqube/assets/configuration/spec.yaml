name: SonarQube
files:
- name: sonarqube.yaml
  options:
  - template: init_config
    options:
    - template: init_config/jmx
      overrides:
        is_jmx.required: false
        is_jmx.value.example: false
    - template: init_config/http
  - template: instances
    multiple_instances_defined: true
    options:
    - name: web_api
      description: Web API instance example
      options:
      - name: web_endpoint
        description: |
          The SonarQube web endpoint with an exposed API at `/api`. For example:

            web_endpoint: http://<WEB_ENDPOINT>:<PORT>

          Note: This only takes effect when `is_jmx` is set to `false` and is required for all
          API metrics.
        value:
          type: string
      - name: default_tag
        description: |
          The tag name to use for `components` by default.

          Note: This only takes effect when `is_jmx` is set to `false`.
        value:
          type: string
          example: component
      - name: default_include
        description: |
          A list of regular expressions used to collect metrics by default. For brevity,
          you may alter the `sonarqube.` prefix and `.` (dot) characters are treated literally.

          By default, all available metrics are collected.

          Note: This only takes effect when `is_jmx` is set to `false`.
        value:
          type: array
          items:
            type: string
      - name: default_exclude
        description: |
          A list of regular expressions used to collect metrics by default. For brevity,
          you may alter the `sonarqube.` prefix and `.` (dot) characters are treated literally.

          By default, no metrics are excluded.

          Note: This only takes effect when `is_jmx` is set to `false`.
        value:
          type: array
          items:
            type: string
      - name: components
        description: |
          The components for which metrics should be collected. Each object may override the default
          options. The following example gathers all default metrics for "some-project",
          and only what is included/excluded for "another-project":

            components:
              some-project:
              another-project:
                tag: project-2
                include:
                  - issues.
                  - maintainability.
                  - security.
                exclude:
                  - issues.(false_positive_issues|reopened_issues)

          Note: This only takes effect when `is_jmx` is set to `false`.

          The keys 'projects' and 'components' are mutually exclusive. 
          'components' is kept for compatibility with older versions of the configuration. 
          In the future it will be deprecated. 
          It is recommended to use 'projects' which allows the new 'autodiscovery' feature
        value:
          type: object
          properties:
          - name: tag
            type: string
          - name: include
            type: array
            items:
              type: string
          - name: exclude
            type: array
            items:
              type: string
      - name: projects
        description: |
          The projects for which metrics should be collected. Each object may override the default
          options. The following example gathers all default metrics for "some-project",
          and only what is included/excluded for "another-project":
          
            projects:
              keys:
                - some-project: {}
                - another-project:
                    tag: project-2
                    metrics:
                      discovery:
                        include:
                        - issues\..*
                        - maintainability\..*
                        - security\..*
                        exclude:
                        - issues.(false_positive_issues|reopened_issues)
              discovery:
                exclude:
                - tmp_project\..*
          
          Note: This only takes effect when `is_jmx` is set to `false`.

          The keys 'projects' and 'components' are mutually exclusive. 
          'components' is kept for compatibility with older versions of the configuration. 
          In the future it will be deprecated. 
          It is recommended to use 'projects' which allows the new 'autodiscovery' feature
        value:
          type: object
          properties:
          - name: keys
            type: array
            items:
              anyOf:
                - type: object
                - type: string
          - name: discovery
            description: |
              It allows the 'autodiscovery' functionality in the list of projects so that the user does not have to
              include them one by one.
            type: object
            properties:
              - name: limit
                description: |
                  Maximum number of items to be 'autodiscovered'
                type: number
              - name: include
                description: |
                  List of regular expressions that will be able to match autodiscovered elements
                type: array
                items:
                  type: string
              - name: exclude
                description: |
                  List of regular expressions with the patterns of elements that will not be included
                  in the autodiscovery
                type: array
                items:
                  type: string
      - template: instances/http
        overrides:
          password.hidden: true
    - name: jmx
      description: Web JMX instance example
      options:
      - template: instances/jmx
        overrides:
          host.required: false
          port.required: false
          is_jmx.hidden: false
          is_jmx.display_priority: 1
          is_jmx.value.default: false
          is_jmx.value.example: true
          is_jmx.description: |
            Whether or not this instance is a configuration for a JMX integration.
            If `is_jmx` is set to true at the init_config level, this flag is ignored.

            Note: Setting `is_jmx` to true disables some configuration options.
          user.description: |
            The user name for connecting to JMX (or HTTP if `is_jmx = false`).
          password.description: |
            The password for connecting to JMX (or HTTP if `is_jmx = false`).
  - template: logs
    example:
    - type: file
      path: /opt/sonarqube/logs/access.log
      source: sonarqube
    - type: file
      path: /opt/sonarqube/logs/ce.log
      source: sonarqube
      log_processing_rules:
      - type: multi_line
        name: log_start_with_date
        pattern: \d{4}\.\d{2}\.\d{2}
    - type: file
      path: /opt/sonarqube/logs/es.log
      source: sonarqube
      log_processing_rules:
      - type: multi_line
        name: log_start_with_date
        pattern: \d{4}\.\d{2}\.\d{2}
    - type: file
      path: /opt/sonarqube/logs/sonar.log
      source: sonarqube
      log_processing_rules:
      - type: multi_line
        name: log_start_with_date
        pattern: \d{4}\.\d{2}\.\d{2}
    - type: file
      path: /opt/sonarqube/logs/web.log
      source: sonarqube
      log_processing_rules:
      - type: multi_line
        name: log_start_with_date
        pattern: \d{4}\.\d{2}\.\d{2}
