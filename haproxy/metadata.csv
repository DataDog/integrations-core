metric_name,metric_type,interval,unit_name,per_unit_name,description,orientation,integration,short_name,curated_metric
haproxy.backend.active.servers,gauge,,,,[OpenMetrics V1 and V2] Current number of active servers.,0,haproxy,,
haproxy.backend.agg.server.check.status,gauge,,,,[OpenMetrics V1 and V2] Backend's aggregated gauge of servers' state check status (deprecated).,0,haproxy,,
haproxy.backend.agg.check.status,gauge,,,,[OpenMetrics V1 and V2] Backend's aggregated gauge of servers' state check status (since >= 2.4).,0,haproxy,,
haproxy.backend.agg.server.status,gauge,,,,[OpenMetrics V1 and V2] Backend's aggregated gauge of servers' status (since >= 2.4).,0,haproxy,,
haproxy.backend.backup.servers,gauge,,,,[OpenMetrics V1 and V2] Current number of backup servers.,0,haproxy,,
haproxy.backend.bytes.in.total,count,,byte,,"[OpenMetrics V1] Current total of incoming bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.backend.bytes.in.count,count,,byte,,"[OpenMetrics V2] Current total of incoming bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.backend.bytes.out.total,count,,byte,,"[OpenMetrics V1] Current total of outgoing bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.backend.bytes.out.count,count,,byte,,"[OpenMetrics V2] Current total of outgoing bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.backend.check.last.change.seconds,gauge,,,,[OpenMetrics V1 and V2] Number of seconds since the last UP<->DOWN transition.,0,haproxy,,
haproxy.backend.check.up.down.total,count,,,,[OpenMetrics V1] Total number of UP->DOWN transitions.,0,haproxy,,
haproxy.backend.check.up.down.count,count,,,,[OpenMetrics V2] Total number of UP->DOWN transitions.,0,haproxy,,
haproxy.backend.client.aborts.total,count,,,,[OpenMetrics V1] Total number of data transfers aborted by the client.,0,haproxy,,
haproxy.backend.client.aborts.count,count,,,,[OpenMetrics V2] Total number of data transfers aborted by the client.,0,haproxy,,
haproxy.backend.connect.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. connect time for last 1024 successful connections.,0,haproxy,,
haproxy.backend.connection.attempts.total,count,,,,[OpenMetrics V1] Total number of connection establishment attempts.,0,haproxy,,
haproxy.backend.connection.attempts.count,count,,,,[OpenMetrics V2] Total number of connection establishment attempts.,0,haproxy,,
haproxy.backend.connection.errors.total,count,,,,[OpenMetrics V1] Total number of connection errors.,0,haproxy,,
haproxy.backend.connection.errors.count,count,,,,[OpenMetrics V2] Total number of connection errors.,0,haproxy,,
haproxy.backend.connection.reuses.total,count,,,,[OpenMetrics V1] Total number of connection reuses.,0,haproxy,,
haproxy.backend.connection.reuses.count,count,,,,[OpenMetrics V2] Total number of connection reuses.,0,haproxy,,
haproxy.backend.current.queue,gauge,,,,[OpenMetrics V1 and V2] Current number of queued requests.,0,haproxy,,memory
haproxy.backend.current.sessions,gauge,,,,[OpenMetrics V1 and V2] Current number of active sessions.,0,haproxy,,cpu
haproxy.backend.downtime.seconds.total,count,,,,[OpenMetrics V1] Total downtime (in seconds) for the service.,0,haproxy,,
haproxy.backend.downtime.seconds.count,count,,,,[OpenMetrics V2] Total downtime (in seconds) for the service.,0,haproxy,,
haproxy.backend.failed.header.rewriting.total,count,,,,[OpenMetrics V1] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.backend.failed.header.rewriting.count,count,,,,[OpenMetrics V2] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.backend.http.cache.hits.total,count,,,,[OpenMetrics V1] Total number of HTTP cache hits.,0,haproxy,,
haproxy.backend.http.cache.hits.count,count,,,,[OpenMetrics V2] Total number of HTTP cache hits.,0,haproxy,,
haproxy.backend.http.cache.lookups.total,count,,,,[OpenMetrics V1] Total number of HTTP cache lookups.,0,haproxy,,
haproxy.backend.http.cache.lookups.count,count,,,,[OpenMetrics V2] Total number of HTTP cache lookups.,0,haproxy,,
haproxy.backend.http.comp.bytes.bypassed.total,count,,byte,,[OpenMetrics V1] Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,haproxy,,
haproxy.backend.http.comp.bytes.bypassed.count,count,,byte,,[OpenMetrics V2] Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,haproxy,,
haproxy.backend.http.comp.bytes.in.total,count,,byte,,[OpenMetrics V1] Total number of HTTP response bytes fed to the compressor.,0,haproxy,,
haproxy.backend.http.comp.bytes.in.count,count,,byte,,[OpenMetrics V2] Total number of HTTP response bytes fed to the compressor.,0,haproxy,,
haproxy.backend.http.comp.bytes.out.total,count,,byte,,[OpenMetrics V1] Total number of HTTP response bytes emitted by the compressor.,0,haproxy,,
haproxy.backend.http.comp.bytes.out.count,count,,byte,,[OpenMetrics V2] Total number of HTTP response bytes emitted by the compressor.,0,haproxy,,
haproxy.backend.http.comp.responses.total,count,,,,[OpenMetrics V1] Total number of HTTP responses that were compressed.,0,haproxy,,
haproxy.backend.http.comp.responses.count,count,,,,[OpenMetrics V2] Total number of HTTP responses that were compressed.,0,haproxy,,
haproxy.backend.http.requests.total,count,,,,[OpenMetrics V1] Total number of HTTP requests received.,0,haproxy,,
haproxy.backend.http.requests.count,count,,,,[OpenMetrics V2] Total number of HTTP requests received.,0,haproxy,,
haproxy.backend.http.responses.total,count,,,,[OpenMetrics V1] Total number of HTTP responses.,0,haproxy,,
haproxy.backend.http.responses.count,count,,,,[OpenMetrics V2] Total number of HTTP responses.,0,haproxy,,
haproxy.backend.internal.errors.total,count,,,,[OpenMetrics V1] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.backend.internal.errors.count,count,,,,[OpenMetrics V2] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.backend.last.session.seconds,gauge,,,,[OpenMetrics V1 and V2] Number of seconds since last session assigned to server/backend.,0,haproxy,,
haproxy.backend.limit.sessions,gauge,,,,[OpenMetrics V1 and V2] Configured session limit.,0,haproxy,,
haproxy.backend.loadbalanced.total,count,,,,"[OpenMetrics V1] Total number of times a service was selected, either for new sessions, or when redispatching.",0,haproxy,,
haproxy.backend.loadbalanced.count,count,,,,"[OpenMetrics V2] Total number of times a service was selected, either for new sessions, or when redispatching.",0,haproxy,,
haproxy.backend.max.connect.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent waiting for a connection to complete,0,haproxy,,
haproxy.backend.max.queue,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of queued requests.,0,haproxy,,
haproxy.backend.max.queue.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent in the queue,0,haproxy,,memory
haproxy.backend.max.response.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent waiting for a server response,0,haproxy,,
haproxy.backend.max.session.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of sessions per second.,0,haproxy,,cpu
haproxy.backend.max.sessions,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of active sessions.,0,haproxy,,cpu
haproxy.backend.max.total.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed total request+response time (request+queue+connect+response+processing),0,haproxy,,memory
haproxy.backend.max.count.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed total request+response time (request+queue+connect+response+processing),0,haproxy,,memory
haproxy.backend.queue.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. queue time for last 1024 successful connections.,0,haproxy,,
haproxy.backend.redispatch.warnings.total,count,,,,[OpenMetrics V1] Total number of redispatch warnings.,0,haproxy,,
haproxy.backend.redispatch.warnings.count,count,,,,[OpenMetrics V2] Total number of redispatch warnings.,0,haproxy,,
haproxy.backend.requests.denied.total,count,,,,[OpenMetrics V1] Total number of denied requests.,0,haproxy,,
haproxy.backend.requests.denied.count,count,,,,[OpenMetrics V2] Total number of denied requests.,0,haproxy,,
haproxy.backend.response.errors.total,count,,,,[OpenMetrics V1] Total number of response errors.,0,haproxy,,
haproxy.backend.response.errors.count,count,,,,[OpenMetrics V2] Total number of response errors.,0,haproxy,,
haproxy.backend.response.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. response time for last 1024 successful connections.,0,haproxy,,
haproxy.backend.responses.denied.total,count,,,,[OpenMetrics V1] Total number of denied responses.,0,haproxy,,
haproxy.backend.responses.denied.count,count,,,,[OpenMetrics V2] Total number of denied responses.,0,haproxy,,
haproxy.backend.retry.warnings.total,count,,,,[OpenMetrics V1] Total number of retry warnings.,0,haproxy,,
haproxy.backend.retry.warnings.count,count,,,,[OpenMetrics V2] Total number of retry warnings.,0,haproxy,,
haproxy.backend.server.aborts.total,count,,,,[OpenMetrics V1] Total number of data transfers aborted by the server.,0,haproxy,,
haproxy.backend.server.aborts.count,count,,,,[OpenMetrics V2] Total number of data transfers aborted by the server.,0,haproxy,,
haproxy.backend.sessions.total,count,,,,[OpenMetrics V1] Total number of sessions.,0,haproxy,,memory
haproxy.backend.sessions.count,count,,,,[OpenMetrics V2] Total number of sessions.,0,haproxy,,
haproxy.backend.status,gauge,,,,"[OpenMetrics V1 and V2] Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,haproxy,,
haproxy.backend.total.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. total time for last 1024 successful connections.,0,haproxy,,
haproxy.backend.count.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. total time for last 1024 successful connections.,0,haproxy,,
haproxy.backend.uweight,gauge,,,,[OpenMetrics V1 and V2] Server's user weight or sum of active servers' user weights for a backend (>= 2.4).,0,haproxy,,
haproxy.backend.weight,gauge,,,,[OpenMetrics V1 and V2] Service weight.,0,haproxy,,
haproxy.backend_hosts,gauge,,host,,[Legacy] Number of backend hosts.,0,haproxy,backend hosts,
haproxy.backend.bytes.in_rate,gauge,,byte,second,[Legacy] Rate of bytes in on backend hosts.,0,haproxy,backend bytes in rate,
haproxy.backend.bytes.out_rate,gauge,,byte,second,[Legacy] Rate of bytes out on backend hosts.,0,haproxy,backend bytes out rate,
haproxy.backend.connect.time,gauge,,millisecond,,[Legacy] Average connect time over the last 1024 backend requests.,0,haproxy,backend conn time,
haproxy.backend.denied.req_rate,gauge,,request,second,[Legacy] Number of backend requests denied due to security concerns.,-1,haproxy,backend den req rate,
haproxy.backend.denied.resp_rate,gauge,,response,second,[Legacy] Number of backend responses denied due to security concerns.,-1,haproxy,backend den resp rate,
haproxy.backend.errors.con_rate,gauge,,error,second,[Legacy] Rate of backend requests that encountered an error trying to connect to a backend server.,-1,haproxy,backend err conn rate,
haproxy.backend.errors.resp_rate,gauge,,error,second,[Legacy] Rate of backend responses aborted due to error.,-1,haproxy,backend err resp rate,
haproxy.backend.queue.current,gauge,,request,,[Legacy] Number of backend requests without an assigned backend.,0,haproxy,backend queue,
haproxy.backend.queue.time,gauge,,millisecond,,[Legacy] Average queue time over the last 1024 backend requests.,0,haproxy,backend queue time,
haproxy.backend.response.1xx,gauge,,response,second,[Legacy] Backend HTTP responses with 1xx code per second.,0,haproxy,backend resp 1xx,
haproxy.backend.response.2xx,gauge,,response,second,[Legacy] Backend HTTP responses with 2xx code per second.,0,haproxy,backend resp 2xx,
haproxy.backend.response.3xx,gauge,,response,second,[Legacy] Backend HTTP responses with 3xx code per second.,0,haproxy,backend resp 3xx,
haproxy.backend.response.4xx,gauge,,response,second,[Legacy] Backend HTTP responses with 4xx code per second.,-1,haproxy,backend resp 4xx,
haproxy.backend.response.5xx,gauge,,response,second,[Legacy] Backend HTTP responses with 5xx code per second.,-1,haproxy,backend resp 5xx,
haproxy.backend.response.other,gauge,,response,second,[Legacy] Backend HTTP responses with other code (protocol error).,0,haproxy,backend resp other,
haproxy.backend.response.time,gauge,,millisecond,,[Legacy] Average response time over the last 1024 backend requests (0 for TCP).,-1,haproxy,backend resp time,
haproxy.backend.requests.tot_rate,gauge,,request,second,[Legacy] Rate of total number of backend HTTP requests.,0,haproxy,backend total req rate,
haproxy.backend.session.current,gauge,,connection,,[Legacy] Number of active backend sessions.,0,haproxy,backend sess,
haproxy.backend.session.limit,gauge,,connection,,[Legacy] Configured backend session limit.,0,haproxy,backend sess lim,
haproxy.backend.session.pct,gauge,,percent,,[Legacy] Percentage of sessions in use (backend.session.current/backend.session.limit * 100).,-1,haproxy,backend sess pct,
haproxy.backend.session.rate,gauge,,connection,second,[Legacy] Number of backend sessions created per second.,0,haproxy,backend sess rate,
haproxy.backend.session.time,gauge,,millisecond,,[Legacy] Average total session time over the last 1024 requests.,0,haproxy,backend sess time,
haproxy.backend.uptime,gauge,,second,,[Legacy] Number of seconds since the last UP<->DOWN transition,0,haproxy,backend uptime,
haproxy.backend.warnings.redis_rate,gauge,,error,second,[Legacy] Number of times a request was redispatched to another server.,-1,haproxy,backend warn redis rate,
haproxy.backend.warnings.retr_rate,gauge,,error,second,[Legacy] Number of times a connection to a server was retried.,-1,haproxy,backend warn retry rate,
haproxy.count_per_status,gauge,,host,,[Legacy] Number of hosts by status (UP/DOWN/NOLB/MAINT).,0,haproxy,hosts status,
haproxy.frontend.bytes.in.total,count,,byte,,"[OpenMetrics V1] Current total of incoming bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.frontend.bytes.in.count,count,,byte,,"[OpenMetrics V2] Current total of incoming bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.frontend.bytes.out.total,count,,byte,,"[OpenMetrics V1] Current total of outgoing bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.frontend.bytes.out.count,count,,byte,,"[OpenMetrics V2] Current total of outgoing bytes. By default, submitted as count if using Prometheus.",0,haproxy,,
haproxy.frontend.connections.rate.max,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of connections per second.,0,haproxy,,cpu
haproxy.frontend.connections.total,count,,,,[OpenMetrics V1] Total number of connections.,0,haproxy,,cpu
haproxy.frontend.connections.count,count,,,,[OpenMetrics V2] Total number of connections.,0,haproxy,,
haproxy.frontend.current.sessions,gauge,,,,[OpenMetrics V1 and V2] Current number of active sessions.,0,haproxy,,memory
haproxy.frontend.denied.connections.total,count,,,,[OpenMetrics V1] Total number of requests denied by 'tcp-request connection' rules.,0,haproxy,,
haproxy.frontend.denied.connections.count,count,,,,[OpenMetrics V2] Total number of requests denied by 'tcp-request connection' rules.,0,haproxy,,
haproxy.frontend.denied.sessions.total,count,,,,[OpenMetrics V1] Total number of requests denied by 'tcp-request session' rules.,0,haproxy,,
haproxy.frontend.denied.sessions.count,count,,,,[OpenMetrics V2] Total number of requests denied by 'tcp-request session' rules.,0,haproxy,,
haproxy.frontend.failed.header.rewriting.total,count,,,,[OpenMetrics V1] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.frontend.failed.header.rewriting.count,count,,,,[OpenMetrics V2] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.frontend.http.cache.hits.total,count,,,,[OpenMetrics V1] Total number of HTTP cache hits.,0,haproxy,,
haproxy.frontend.http.cache.hits.count,count,,,,[OpenMetrics V2] Total number of HTTP cache hits.,0,haproxy,,
haproxy.frontend.http.cache.lookups.total,count,,,,[OpenMetrics V1] Total number of HTTP cache lookups.,0,haproxy,,
haproxy.frontend.http.cache.lookups.count,count,,,,[OpenMetrics V2] Total number of HTTP cache lookups.,0,haproxy,,
haproxy.frontend.http.comp.bytes.bypassed.total,count,,byte,,[OpenMetrics V1] Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,haproxy,,
haproxy.frontend.http.comp.bytes.bypassed.count,count,,byte,,[OpenMetrics V2] Total number of bytes that bypassed the HTTP compressor (CPU/BW limit).,0,haproxy,,
haproxy.frontend.http.comp.bytes.in.total,count,,byte,,[OpenMetrics V1] Total number of HTTP response bytes fed to the compressor.,0,haproxy,,
haproxy.frontend.http.comp.bytes.in.count,count,,byte,,[OpenMetrics V2] Total number of HTTP response bytes fed to the compressor.,0,haproxy,,
haproxy.frontend.http.comp.bytes.out.total,count,,byte,,[OpenMetrics V1] Total number of HTTP response bytes emitted by the compressor.,0,haproxy,,
haproxy.frontend.http.comp.bytes.out.count,count,,byte,,[OpenMetrics V2] Total number of HTTP response bytes emitted by the compressor.,0,haproxy,,
haproxy.frontend.http.comp.responses.total,count,,,,[OpenMetrics V1] Total number of HTTP responses that were compressed.,0,haproxy,,
haproxy.frontend.http.comp.responses.count,count,,,,[OpenMetrics V2] Total number of HTTP responses that were compressed.,0,haproxy,,
haproxy.frontend.http.requests.rate.max,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of HTTP requests per second.,0,haproxy,,
haproxy.frontend.http.requests.total,count,,,,[OpenMetrics V1] Total number of HTTP requests received.,0,haproxy,,
haproxy.frontend.http.requests.count,count,,,,[OpenMetrics V2] Total number of HTTP requests received.,0,haproxy,,
haproxy.frontend.http.responses.total,count,,,,[OpenMetrics V1] Total number of HTTP responses.,0,haproxy,,
haproxy.frontend.http.responses.count,count,,,,[OpenMetrics V2] Total number of HTTP responses.,0,haproxy,,
haproxy.frontend.intercepted.requests.total,count,,,,[OpenMetrics V1] Total number of intercepted HTTP requests.,0,haproxy,,
haproxy.frontend.intercepted.requests.count,count,,,,[OpenMetrics V2] Total number of intercepted HTTP requests.,0,haproxy,,
haproxy.frontend.internal.errors.total,count,,,,[OpenMetrics V1] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.frontend.internal.errors.count,count,,,,[OpenMetrics V2] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.frontend.limit.session.rate,gauge,,,,[OpenMetrics V1 and V2] Configured limit on new sessions per second.,0,haproxy,,
haproxy.frontend.limit.sessions,gauge,,,,[OpenMetrics V1 and V2] Configured session limit.,0,haproxy,,
haproxy.frontend.max.session.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of sessions per second.,0,haproxy,,
haproxy.frontend.max.sessions,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of active sessions.,0,haproxy,,
haproxy.frontend.request.errors.total,count,,,,[OpenMetrics V1] Total number of request errors.,0,haproxy,,
haproxy.frontend.request.errors.count,count,,,,[OpenMetrics V2] Total number of request errors.,0,haproxy,,
haproxy.frontend.requests.denied.total,count,,,,[OpenMetrics V1] Total number of denied requests.,0,haproxy,,
haproxy.frontend.requests.denied.count,count,,,,[OpenMetrics V2] Total number of denied requests.,0,haproxy,,
haproxy.frontend.responses.denied.total,count,,,,[OpenMetrics V1] Total number of denied responses.,0,haproxy,,
haproxy.frontend.responses.denied.count,count,,,,[OpenMetrics V2] Total number of denied responses.,0,haproxy,,
haproxy.frontend.sessions.total,count,,,,[OpenMetrics V1] Total number of sessions.,0,haproxy,,
haproxy.frontend.sessions.count,count,,,,[OpenMetrics V2] Total number of sessions.,0,haproxy,,
haproxy.frontend.status,gauge,,,,"[OpenMetrics V1 and V2] Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,haproxy,,
haproxy.frontend.bytes.in_rate,gauge,,byte,second,[Legacy] Rate of bytes in on frontend hosts.,0,haproxy,frontend bytes in rate,
haproxy.frontend.bytes.out_rate,gauge,,byte,second,[Legacy] Rate of bytes out on frontend hosts.,0,haproxy,frontend bytes out rate,
haproxy.frontend.connections.rate,gauge,,connection,second,[Legacy] Number of connections per second.,0,haproxy,frontend connections rate,
haproxy.frontend.connections.tot_rate,gauge,,connection,second,[Legacy] Rate of total number of frontend connections.,0,haproxy,frontend tot connections rate,
haproxy.frontend.denied.req_rate,gauge,,request,second,[Legacy] Number of frontend requests denied due to security concerns.,-1,haproxy,frontend den req rate,
haproxy.frontend.denied.resp_rate,gauge,,response,second,[Legacy] Number of frontend responses denied due to security concerns.,-1,haproxy,frontend den resp rate,
haproxy.frontend.errors.req_rate,gauge,,error,second,[Legacy] Rate of frontend request errors.,-1,haproxy,frontend err req rate,
haproxy.frontend.requests.intercepted,gauge,,request,second,[Legacy] Number of intercepted frontend requests per second.,0,haproxy,frontend intercepted req rate,
haproxy.frontend.requests.rate,gauge,,request,second,[Legacy] Number of frontend HTTP requests per second.,0,haproxy,frontend req rate,
haproxy.frontend.requests.tot_rate,gauge,,request,second,[Legacy] Rate of total number of frontend HTTP requests.,0,haproxy,frontend total req rate,
haproxy.frontend.response.1xx,gauge,,response,,[Legacy] Frontend HTTP responses with 1xx code.,0,haproxy,frontend resp 1xx,
haproxy.frontend.response.2xx,gauge,,response,,[Legacy] Frontend HTTP responses with 2xx code.,0,haproxy,frontend resp 2xx,
haproxy.frontend.response.3xx,gauge,,response,,[Legacy] Frontend HTTP responses with 3xx code.,0,haproxy,frontend resp 3xx,
haproxy.frontend.response.4xx,gauge,,response,,[Legacy] Frontend HTTP responses with 4xx code.,-1,haproxy,frontend resp 4xx,
haproxy.frontend.response.5xx,gauge,,response,,[Legacy] Frontend HTTP responses with 5xx code.,-1,haproxy,frontend resp 5xx,
haproxy.frontend.response.other,gauge,,response,,[Legacy] Frontend HTTP responses with other code (protocol error).,0,haproxy,frontend resp other,
haproxy.frontend.session.current,gauge,,connection,,[Legacy] Number of active frontend sessions.,0,haproxy,frontend sess,
haproxy.frontend.session.limit,gauge,,connection,,[Legacy] Configured frontend session limit.,0,haproxy,frontend sess lim,
haproxy.frontend.session.pct,gauge,,percent,,[Legacy] Percentage of sessions in use (frontend.session.current/frontend.session.limit * 100.,-1,haproxy,frontend sess pct,
haproxy.frontend.session.rate,gauge,,connection,second,[Legacy] Number of frontend sessions created per second.,0,haproxy,frontend sess rate,
haproxy.listener.bytes.in.total,count,,,,[OpenMetrics V1] Total number of request bytes since process started (>= 2.4).,0,haproxy,,
haproxy.listener.bytes.in.count,count,,,,[OpenMetrics V2] Total number of request bytes since process started (>= 2.4).,0,haproxy,,
haproxy.listener.bytes.out.total,count,,,,[OpenMetrics V1] Total number of response bytes since process started (>= 2.4).,0,haproxy,,
haproxy.listener.bytes.out.count,count,,,,[OpenMetrics V2] Total number of response bytes since process started (>= 2.4).,0,haproxy,,
haproxy.listener.current.sessions,gauge,,,,"[OpenMetrics V1 and V2] Number of current sessions on the frontend, backend or server (>= 2.4).",0,haproxy,,
haproxy.listener.denied.connections.total,count,,,,[OpenMetrics V1] Total number of incoming connections blocked on a listener/frontend by a tcp-request connection rule since the worker process started (>= 2.4).,0,haproxy,,
haproxy.listener.denied.connections.count,count,,,,[OpenMetrics V2] Total number of incoming connections blocked on a listener/frontend by a tcp-request connection rule since the worker process started (>= 2.4).,0,haproxy,,
haproxy.listener.denied.sessions.total,count,,,,[OpenMetrics V1] Total number of incoming sessions blocked on a listener/frontend by a tcp-request connection rule since the worker process started,0,haproxy,,
haproxy.listener.denied.sessions.count,count,,,,[OpenMetrics V2] Total number of incoming sessions blocked on a listener/frontend by a tcp-request connection rule since the worker process started,0,haproxy,,
haproxy.listener.failed.header.rewriting.total,count,,,,[OpenMetrics V1] Total number of failed HTTP header rewrites since the worker process started (>= 2.4).,0,haproxy,,
haproxy.listener.failed.header.rewriting.count,count,,,,[OpenMetrics V2] Total number of failed HTTP header rewrites since the worker process started (>= 2.4).,0,haproxy,,
haproxy.listener.internal.errors.total,count,,,,[OpenMetrics V1] Total number of internal errors since process started (>= 2.4).,0,haproxy,,
haproxy.listener.internal.errors.count,count,,,,[OpenMetrics V2] Total number of internal errors since process started (>= 2.4).,0,haproxy,,
haproxy.listener.limit.sessions,gauge,,,,"[OpenMetrics V1 and V2] Frontend/listener/server's maxconn, backend's fullconn (>= 2.4).",0,haproxy,,
haproxy.listener.max.sessions,gauge,,,,[OpenMetrics V1 and V2] Highest value of current sessions encountered since process started (>= 2.4).,0,haproxy,,
haproxy.listener.request.errors.total,count,,,,[OpenMetrics V1] Total number of invalid requests since process started (>= 2.4).,0,haproxy,,
haproxy.listener.request.errors.count,count,,,,[OpenMetrics V2] Total number of invalid requests since process started (>= 2.4).,0,haproxy,,
haproxy.listener.requests.denied.total,count,,,,[OpenMetrics V1] Total number of denied requests since process started (>= 2.4).,0,haproxy,,
haproxy.listener.requests.denied.count,count,,,,[OpenMetrics V2] Total number of denied requests since process started (>= 2.4).,0,haproxy,,
haproxy.listener.responses.denied.total,count,,,,[OpenMetrics V1] Total number of denied responses since process started (>= 2.4).,0,haproxy,,
haproxy.listener.responses.denied.count,count,,,,[OpenMetrics V2] Total number of denied responses since process started (>= 2.4).,0,haproxy,,
haproxy.listener.sessions.total,count,,,,[OpenMetrics V1] Total number of sessions since process started (>= 2.4).,0,haproxy,,
haproxy.listener.sessions.count,count,,,,[OpenMetrics V2] Total number of sessions since process started (>= 2.4).,0,haproxy,,
haproxy.listener.status,gauge,,,,"[OpenMetrics V1 and V2] Current status of the service, per state label value (>= 2.4).",0,haproxy,,
haproxy.process.active.peers,gauge,,,,[OpenMetrics V1 and V2] Current number of active peers.,0,haproxy,,
haproxy.process.build_info,gauge,,,,[OpenMetrics V1 and V2] Build info.,0,haproxy,,
haproxy.process.busy.polling.enabled,gauge,,,,[OpenMetrics V1 and V2] Non zero if the busy polling is enabled.,0,haproxy,,
haproxy.process.bytes.out.rate,gauge,,,,[OpenMetrics V1 and V2] Number of bytes emitted by current worker process over the last second (>= 2.3).,0,haproxy,,
haproxy.process.bytes.out.total,count,,,,[OpenMetrics V1] Total number of bytes emitted by current worker process since started (>= 2.3).,0,haproxy,,
haproxy.process.bytes.out.count,count,,,,[OpenMetrics V2] Total number of bytes emitted by current worker process since started (>= 2.3).,0,haproxy,,
haproxy.process.connected.peers,gauge,,,,[OpenMetrics V1 and V2] Current number of connected peers.,0,haproxy,,
haproxy.process.connections.total,count,,,,[OpenMetrics V1] Total number of created sessions.,0,haproxy,,
haproxy.process.connections.count,count,,,,[OpenMetrics V2] Total number of created sessions.,0,haproxy,,
haproxy.process.current.backend.ssl.key.rate,gauge,,,,[OpenMetrics V1 and V2] Current backend SSL Key computation per second over last elapsed second.,0,haproxy,,
haproxy.process.current.connection.rate,gauge,,,,[OpenMetrics V1 and V2] Current number of connections per second over last elapsed second.,0,haproxy,,
haproxy.process.current.connections,gauge,,,,[OpenMetrics V1 and V2] Number of active sessions.,0,haproxy,,
haproxy.process.current.frontend.ssl.key.rate,gauge,,,,[OpenMetrics V1 and V2] Current frontend SSL Key computation per second over last elapsed second.,0,haproxy,,
haproxy.process.current.run.queue,gauge,,,,[OpenMetrics V1 and V2] Current number of tasks in the run-queue.,0,haproxy,,
haproxy.process.current.session.rate,gauge,,,,[OpenMetrics V1 and V2] Current number of sessions per second over last elapsed second.,0,haproxy,,memory
haproxy.process.current.ssl.connections,gauge,,,,[OpenMetrics V1 and V2] Number of opened SSL connections.,0,haproxy,,
haproxy.process.current.ssl.rate,gauge,,,,[OpenMetrics V1 and V2] Current number of SSL sessions per second over last elapsed second.,0,haproxy,,
haproxy.process.current.tasks,gauge,,,,[OpenMetrics V1 and V2] Current number of tasks.,0,haproxy,,
haproxy.process.current.zlib.memory,gauge,,,,[OpenMetrics V1 and V2] Current memory used for zlib in bytes (zlib is no longer the default since >= 2.4).,0,haproxy,,
haproxy.process.dropped.logs.total,count,,,,[OpenMetrics V1] Total number of dropped logs.,0,haproxy,,
haproxy.process.dropped.logs.count,count,,,,[OpenMetrics V2] Total number of dropped logs.,0,haproxy,,
haproxy.process.failed.resolutions,count,,,,[OpenMetrics V1] Total number of failed DNS resolutions in current worker process since started (>= 2.3).,0,haproxy,,
haproxy.process.failed.resolutions.count,count,,,,[OpenMetrics V2] Total number of failed DNS resolutions in current worker process since started (>= 2.3).,0,haproxy,,
haproxy.process.frontend.ssl.reuse,gauge,,,,[OpenMetrics V1 and V2] SSL session reuse ratio (percent).,0,haproxy,,
haproxy.process.hard.max.connections,gauge,,,,[OpenMetrics V1 and V2] Initial Maximum number of concurrent connections.,0,haproxy,,
haproxy.process.http.comp.bytes.in.total,count,,byte,,"[OpenMetrics V1] Number of bytes per second over last elapsed second, before http compression.",0,haproxy,,
haproxy.process.http.comp.bytes.in.count,count,,byte,,"[OpenMetrics V2] Number of bytes per second over last elapsed second, before http compression.",0,haproxy,,
haproxy.process.http.comp.bytes.out.total,count,,byte,,"[OpenMetrics V1] Number of bytes per second over last elapsed second, after http compression.",0,haproxy,,
haproxy.process.http.comp.bytes.out.count,count,,byte,,"[OpenMetrics V2] Number of bytes per second over last elapsed second, after http compression.",0,haproxy,,
haproxy.process.idle.time.percent,gauge,,,,[OpenMetrics V1 and V2] Idle to total ratio over last sample (percent).,0,haproxy,,cpu
haproxy.process.jobs,gauge,,,,"[OpenMetrics V1 and V2] Current number of active jobs (listeners, sessions, open devices).",0,haproxy,,
haproxy.process.limit.connection.rate,gauge,,,,[OpenMetrics V1 and V2] Configured maximum number of connections per second.,0,haproxy,,
haproxy.process.limit.http.comp,gauge,,,,[OpenMetrics V1 and V2] Configured maximum input compression rate in bytes.,0,haproxy,,
haproxy.process.limit.session.rate,gauge,,,,[OpenMetrics V1 and V2] Configured maximum number of sessions per second.,0,haproxy,,
haproxy.process.limit.ssl.rate,gauge,,,,[OpenMetrics V1 and V2] Configured maximum number of SSL sessions per second.,0,haproxy,,
haproxy.process.listeners,gauge,,,,[OpenMetrics V1 and V2] Current number of active listeners.,0,haproxy,,
haproxy.process.max.backend.ssl.key.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed backend SSL Key computation per second.,0,haproxy,,
haproxy.process.max.connection.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of connections per second.,0,haproxy,,
haproxy.process.max.connections,gauge,,,,[OpenMetrics V1 and V2] Maximum number of concurrent connections.,0,haproxy,,
haproxy.process.max.fds,gauge,,,,[OpenMetrics V1 and V2] Maximum number of open file descriptors; 0=unset.,0,haproxy,,
haproxy.process.max.frontend.ssl.key.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed frontend SSL Key computation per second.,0,haproxy,,
haproxy.process.max.memory.bytes,gauge,,,,[OpenMetrics V1 and V2] Per-process memory limit (in bytes); 0=unset.,0,haproxy,,
haproxy.process.max.pipes,gauge,,,,[OpenMetrics V1 and V2] Configured maximum number of pipes.,0,haproxy,,
haproxy.process.max.session.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of sessions per second.,0,haproxy,,
haproxy.process.max.sockets,gauge,,,,[OpenMetrics V1 and V2] Maximum number of open sockets.,0,haproxy,,
haproxy.process.max.ssl.connections,gauge,,,,[OpenMetrics V1 and V2] Configured maximum number of concurrent SSL connections.,0,haproxy,,
haproxy.process.max.ssl.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of SSL sessions per second.,0,haproxy,,
haproxy.process.max.zlib.memory,gauge,,,,[OpenMetrics V1 and V2] Configured maximum amount of memory for zlib in bytes (zlib is no longer the default since >= 2.4).,0,haproxy,,
haproxy.process.nbproc,gauge,,,,[OpenMetrics V1 and V2] Configured number of processes.,0,haproxy,,
haproxy.process.nbthread,gauge,,,,[OpenMetrics V1 and V2] Configured number of threads.,0,haproxy,,
haproxy.process.pipes.free.total,count,,,,[OpenMetrics V1] Number of pipes unused.,0,haproxy,,
haproxy.process.pipes.free.count,count,,,,[OpenMetrics V2] Number of pipes unused.,0,haproxy,,
haproxy.process.pipes.used.total,count,,,,[OpenMetrics V1] Number of pipes in used.,0,haproxy,,
haproxy.process.pipes.used.count,count,,,,[OpenMetrics V2] Number of pipes in used.,0,haproxy,,
haproxy.process.pool.allocated.bytes,gauge,,,,[OpenMetrics V1 and V2] Total amount of memory allocated in pools (in bytes).,0,haproxy,,
haproxy.process.pool.failures.total,count,,,,[OpenMetrics V1] Total number of failed pool allocations.,0,haproxy,,
haproxy.process.pool.failures.count,count,,,,[OpenMetrics V2] Total number of failed pool allocations.,0,haproxy,,
haproxy.process.pool.used.bytes,gauge,,,,[OpenMetrics V1 and V2] Total amount of memory used in pools (in bytes).,0,haproxy,,
haproxy.process.recv.logs.total,count,,,,[OpenMetrics V1] Total number of log messages received by log-forwarding listeners on this worker process since started (>= 2.4).,0,haproxy,,
haproxy.process.recv.logs.count,count,,,,[OpenMetrics V2] Total number of log messages received by log-forwarding listeners on this worker process since started (>= 2.4).,0,haproxy,,
haproxy.process.relative.process.id,gauge,,,,"[OpenMetrics V1 and V2] Relative process id, starting at 1.",0,haproxy,,
haproxy.process.requests.total,count,,,,[OpenMetrics V1] Total number of requests (TCP or HTTP).,0,haproxy,,
haproxy.process.requests.count,count,,,,[OpenMetrics V2] Total number of requests (TCP or HTTP).,0,haproxy,,
haproxy.process.spliced.bytes.out.total,count,,,,[OpenMetrics V1] Total number of bytes emitted by current worker process through a kernel pipe since started (>= 2.3).,0,haproxy,,
haproxy.process.spliced.bytes.out.count,count,,,,[OpenMetrics V2] Total number of bytes emitted by current worker process through a kernel pipe since started (>= 2.3).,0,haproxy,,
haproxy.process.ssl.cache.lookups.total,count,,,,[OpenMetrics V1] Total number of SSL session cache lookups.,0,haproxy,,
haproxy.process.ssl.cache.lookups.count,count,,,,[OpenMetrics V2] Total number of SSL session cache lookups.,0,haproxy,,
haproxy.process.ssl.cache.misses.total,count,,,,[OpenMetrics V1] Total number of SSL session cache misses.,0,haproxy,,
haproxy.process.ssl.cache.misses.count,count,,,,[OpenMetrics V2] Total number of SSL session cache misses.,0,haproxy,,
haproxy.process.ssl.connections.total,count,,,,[OpenMetrics V1] Total number of opened SSL connections.,0,haproxy,,
haproxy.process.ssl.connections.count,count,,,,[OpenMetrics V2] Total number of opened SSL connections.,0,haproxy,,
haproxy.process.start.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Start time in seconds.,0,haproxy,,
haproxy.process.stopping,gauge,,,,[OpenMetrics V1 and V2] Non zero means stopping in progress.,0,haproxy,,
haproxy.process.unstoppable.jobs,gauge,,,,[OpenMetrics V1 and V2] Current number of active jobs that can't be stopped during a soft stop.,0,haproxy,,
haproxy.process.uptime.seconds,gauge,,,,[OpenMetrics V1 and V2] How long ago this worker process was started (>= 2.4).,0,haproxy,,
haproxy.server.bytes.in.total,count,,byte,,[OpenMetrics V1] Current total of incoming bytes.,0,haproxy,,
haproxy.server.bytes.in.count,count,,byte,,[OpenMetrics V2] Current total of incoming bytes.,0,haproxy,,
haproxy.server.bytes.out.total,count,,byte,,[OpenMetrics V1] Current total of outgoing bytes.,0,haproxy,,
haproxy.server.bytes.out.count,count,,byte,,[OpenMetrics V2] Current total of outgoing bytes.,0,haproxy,,
haproxy.server.check.code,gauge,,,,"[OpenMetrics V1 and V2] layer5-7 code, if available of the last health check. (>= 2.0)",0,haproxy,,
haproxy.server.check.duration.seconds,gauge,,second,,[OpenMetrics V1 and V2] Previously run health check duration (>= 2.0),0,haproxy,,
haproxy.server.check.failures.total,count,,,,[OpenMetrics V1] Total number of failed check (Only counts checks failed when the server is up).,0,haproxy,,
haproxy.server.check.failures.count,count,,,,[OpenMetrics V2] Total number of failed check (Only counts checks failed when the server is up).,0,haproxy,,
haproxy.server.check.last.change.seconds,gauge,,second,,[OpenMetrics V1 and V2] Number of seconds since the last UP<->DOWN transition. (>= 2.0),0,haproxy,,
haproxy.server.check.status,gauge,,,,"[OpenMetrics V1 and V2] Status of last health check, if enabled.. <= 2.3 HCHK_STATUS_* values in haproxy doc. >= 2.4 per state label value.",0,haproxy,,
haproxy.server.check.up.down.total,count,,,,[OpenMetrics V1] Total number of UP->DOWN transitions.,0,haproxy,,
haproxy.server.check.up.down.count,count,,,,[OpenMetrics V2] Total number of UP->DOWN transitions.,0,haproxy,,
haproxy.server.client.aborts.total,count,,,,[OpenMetrics V1] Total number of data transfers aborted by the client.,0,haproxy,,
haproxy.server.client.aborts.count,count,,,,[OpenMetrics V2] Total number of data transfers aborted by the client.,0,haproxy,,
haproxy.server.connect.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. connect time for last 1024 successful connections.,0,haproxy,,
haproxy.server.connection.attempts.total,count,,,,[OpenMetrics V1] Total number of connection establishment attempts.,0,haproxy,,
haproxy.server.connection.attempts.count,count,,,,[OpenMetrics V2] Total number of connection establishment attempts.,0,haproxy,,
haproxy.server.connection.errors.total,count,,,,[OpenMetrics V1] Total number of connection errors.,0,haproxy,,
haproxy.server.connection.errors.count,count,,,,[OpenMetrics V2] Total number of connection errors.,0,haproxy,,
haproxy.server.connection.reuses.total,count,,,,[OpenMetrics V1] Total number of connection reuses.,0,haproxy,,
haproxy.server.connection.reuses.count,count,,,,[OpenMetrics V2] Total number of connection reuses.,0,haproxy,,
haproxy.server.current.queue,gauge,,,,[OpenMetrics V1 and V2] Current number of queued requests.,0,haproxy,,
haproxy.server.current.sessions,gauge,,,,[OpenMetrics V1 and V2] Current number of active sessions.,0,haproxy,,
haproxy.server.current.throttle,gauge,,,,"[OpenMetrics V1 and V2] Current throttle percentage for the server, when slowstart is active, or no value if not in slowstart.",0,haproxy,,
haproxy.server.downtime.seconds.total,count,,,,[OpenMetrics V1] Total downtime (in seconds) for the service.,0,haproxy,,
haproxy.server.downtime.seconds.count,count,,,,[OpenMetrics V2] Total downtime (in seconds) for the service.,0,haproxy,,
haproxy.server.failed.header.rewriting.total,count,,,,[OpenMetrics V1] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.server.failed.header.rewriting.count,count,,,,[OpenMetrics V2] Total number of failed header rewriting warnings.,0,haproxy,,
haproxy.server.http.responses.total,count,,,,[OpenMetrics V1] Total number of HTTP responses.,0,haproxy,,
haproxy.server.http.responses.count,count,,,,[OpenMetrics V2] Total number of HTTP responses.,0,haproxy,,
haproxy.server.idle.connections.current,gauge,,,,[OpenMetrics V1 and V2] Current number of idle connections available for reuse.,0,haproxy,,cpu
haproxy.server.idle.connections.limit,gauge,,,,[OpenMetrics V1 and V2] Limit on the number of available idle connections.,0,haproxy,,
haproxy.server.internal.errors.total,count,,,,[OpenMetrics V1] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.server.internal.errors.count,count,,,,[OpenMetrics V2] Total number of internal errors since process started (since >= 2.2).,0,haproxy,,
haproxy.server.last.session.seconds,gauge,,,,[OpenMetrics V1 and V2] Number of seconds since last session assigned to server/backend.,0,haproxy,,
haproxy.server.limit.sessions,gauge,,,,[OpenMetrics V1 and V2] Configured session limit.,0,haproxy,,
haproxy.server.loadbalanced.total,count,,,,"[OpenMetrics V1] Total number of times a service was selected, either for new sessions, or when redispatching.",0,haproxy,,
haproxy.server.loadbalanced.count,count,,,,"[OpenMetrics V2] Total number of times a service was selected, either for new sessions, or when redispatching.",0,haproxy,,
haproxy.server.max.connect.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent waiting for a connection to complete,0,haproxy,,
haproxy.server.max.queue,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of queued requests.,0,haproxy,,
haproxy.server.max.queue.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent in the queue,0,haproxy,,
haproxy.server.max.response.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed time spent waiting for a server response,0,haproxy,,
haproxy.server.max.session.rate,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of sessions per second.,0,haproxy,,memory
haproxy.server.max.sessions,gauge,,,,[OpenMetrics V1 and V2] Maximum observed number of active sessions.,0,haproxy,,
haproxy.server.max.total.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed total request+response time (request+queue+connect+response+processing),0,haproxy,,
haproxy.server.max.count.time.seconds,gauge,,,,[OpenMetrics V1 and V2] Maximum observed total request+response time (request+queue+connect+response+processing),0,haproxy,,
haproxy.server.need.connections.current,gauge,,,,[OpenMetrics V1 and V2] Estimated needed number of connections (>= 2.3).,0,haproxy,,
haproxy.server.queue.limit,gauge,,,,[OpenMetrics V1 and V2] Configured maxqueue for the server (0 meaning no limit).,0,haproxy,,
haproxy.server.queue.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. queue time for last 1024 successful connections.,0,haproxy,,
haproxy.server.redispatch.warnings.total,count,,,,[OpenMetrics V1] Total number of redispatch warnings.,0,haproxy,,
haproxy.server.redispatch.warnings.count,count,,,,[OpenMetrics V2] Total number of redispatch warnings.,0,haproxy,,
haproxy.server.response.errors.total,count,,,,[OpenMetrics V1] Total number of response errors.,0,haproxy,,
haproxy.server.response.errors.count,count,,,,[OpenMetrics V2] Total number of response errors.,0,haproxy,,
haproxy.server.response.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. response time for last 1024 successful connections.,0,haproxy,,
haproxy.server.responses.denied.total,count,,,,[OpenMetrics V1] Total number of denied responses.,0,haproxy,,
haproxy.server.responses.denied.count,count,,,,[OpenMetrics V2] Total number of denied responses.,0,haproxy,,
haproxy.server.safe.idle.connections.current,gauge,,,,[OpenMetrics V1 and V2] Current number of safe idle connections (>= 2.3).,0,haproxy,,
haproxy.server.retry.warnings.total,count,,,,[OpenMetrics V1] Total number of retry warnings.,0,haproxy,,
haproxy.server.retry.warnings.count,count,,,,[OpenMetrics V2] Total number of retry warnings.,0,haproxy,,
haproxy.server.server.aborts.total,count,,,,[OpenMetrics V1] Total number of data transfers aborted by the server.,0,haproxy,,
haproxy.server.server.aborts.count,count,,,,[OpenMetrics V2] Total number of data transfers aborted by the server.,0,haproxy,,
haproxy.server.server.idle.connections.current,gauge,,,,[OpenMetrics V1 and V2] Current number of idle connections available for reuse,0,haproxy,,
haproxy.server.server.idle.connections.limit,gauge,,,,[OpenMetrics V1 and V2] Limit on the number of available idle connections,0,haproxy,,
haproxy.server.sessions.total,count,,,,[OpenMetrics V1] Total number of sessions.,0,haproxy,,
haproxy.server.sessions.count,count,,,,[OpenMetrics V2] Total number of sessions.,0,haproxy,,
haproxy.server.status,gauge,,,,"[OpenMetrics V1 and V2] Current status of the service. <= 2.3: gauge value determines state (frontend: 0=STOP, 1=UP, 2=FULL - backend: 0=DOWN, 1=UP - server: 0=DOWN, 1=UP, 2=MAINT, 3=DRAIN, 4=NOLB). >= 2.4 per state label value.",0,haproxy,,
haproxy.server.total.time.average.seconds,gauge,,,,[OpenMetrics V1 and V2] Avg. total time for last 1024 successful connections.,0,haproxy,,
haproxy.server.unsafe.idle.connections.current,gauge,,,,[OpenMetrics V1 and V2] Current number of unsafe idle connections (>= 2.3).,0,haproxy,,
haproxy.server.used.connections.current,gauge,,,,[OpenMetrics V1 and V2] Current number of connections in use (>= 2.3).,0,haproxy,,
haproxy.server.uweight,gauge,,,,[OpenMetrics V1 and V2] Server's user weight or sum of active servers' user weights for a backend (>= 2.4).,0,haproxy,,
haproxy.server.weight,gauge,,,,[OpenMetrics V1 and V2] Service weight.,0,haproxy,,
haproxy.sticktable.size,gauge,,,,"[OpenMetrics V1 and V2] Maximum number of elements the table can hold (<= 2.3 through a Unix socket, >= 2.4 through Prometheus).",0,haproxy,,
haproxy.sticktable.used,gauge,,,,"[OpenMetrics V1 and V2] Number of elements in the table (<= 2.3 through a Unix socket, >= 2.4 through Prometheus).",0,haproxy,,
