# (C) Datadog, Inc. 2025-present
# All rights reserved
# Licensed under a 3-clause BSD style license (see LICENSE)

METRICS_MAP = {
    "go_gc_duration_seconds": "go.gc_duration_seconds",
    "go_gc_gogc_percent": "go.gc_gogc_percent",
    "go_gc_gomemlimit_bytes": "go.gc_gomemlimit_bytes",
    "go_goroutines": "go.goroutines",
    "go_info": "go.info",
    "go_memstats_alloc_bytes": "go.memstats.alloc_bytes",
    "go_memstats_buck_hash_sys_bytes": "go.memstats.buck_hash_sys_bytes",
    "go_memstats_frees": "go.memstats.frees",
    "go_memstats_gc_sys_bytes": "go.memstats.gc_sys_bytes",
    "go_memstats_heap_alloc_bytes": "go.memstats.heap_alloc_bytes",
    "go_memstats_heap_idle_bytes": "go.memstats.heap_idle_bytes",
    "go_memstats_heap_inuse_bytes": "go.memstats.heap_inuse_bytes",
    "go_memstats_heap_objects": "go.memstats.heap_objects",
    "go_memstats_heap_released_bytes": "go.memstats.heap_released_bytes",
    "go_memstats_heap_sys_bytes": "go.memstats.heap_sys_bytes",
    "go_memstats_last_gc_time_seconds": "go.memstats.last_gc_time_seconds",
    "go_memstats_mallocs": "go.memstats.mallocs",
    "go_memstats_mcache_inuse_bytes": "go.memstats.mcache_inuse_bytes",
    "go_memstats_mcache_sys_bytes": "go.memstats.mcache_sys_bytes",
    "go_memstats_mspan_inuse_bytes": "go.memstats.mspan_inuse_bytes",
    "go_memstats_mspan_sys_bytes": "go.memstats.mspan_sys_bytes",
    "go_memstats_next_gc_bytes": "go.memstats.next_gc_bytes",
    "go_memstats_other_sys_bytes": "go.memstats.other_sys_bytes",
    "go_memstats_stack_inuse_bytes": "go.memstats.stack_inuse_bytes",
    "go_memstats_stack_sys_bytes": "go.memstats.stack_sys_bytes",
    "go_memstats_sys_bytes": "go.memstats.sys_bytes",
    "go_sched_gomaxprocs_threads": "go.sched_gomaxprocs_threads",
    "go_threads": "go.threads",
    "http_client_duration": "http_client.duration",
    "http_client_request_dns_duration": "http_client.request_dns_duration",
    "http_client_request_failed_count": "http_client.request_failed",
    "http_client_request_get_conn_duration": "http_client.request_get_conn_duration",
    "http_client_request_size": "http_client.request_size",
    "http_client_request_started_count": "http_client.request_started",
    "http_client_request_timedout_count": "http_client.request_timedout",
    "http_client_request_canceled_count": "http_client.request_canceled",
    "http_client_request_read_errors_count": "http_client.request_read_errors",
    "http_client_request_tls_duration": "http_client.request_tls_duration",
    "http_client_response_no_content_length": "http_client.response_no_content_length",
    "http_client_response_read_size_hist": "http_client.response_read_size_hist",
    "http_client_response_read_size": "http_client.response_read_size",
    "http_client_response_read_time_hist_seconds": "http_client.response_read_time_hist_seconds",
    "http_client_response_read_time_seconds": "http_client.response_read_time_seconds",
    "http_server_duration": "http_server.duration",
    "http_server_response_size": "http_server.response_size",
    "krakend_backend_duration": "backend_duration",
    "krakend_proxy_duration": "proxy_duration",
    "otel_scope_info": "otel_scope_info",
    "process_cpu_seconds": "process.cpu_seconds",
    "process_max_fds": "process.max_fds",
    "process_network_receive_bytes": "process.network_receive_bytes",
    "process_network_transmit_bytes": "process.network_transmit_bytes",
    "process_open_fds": "process.open_fds",
    "process_resident_memory_bytes": "process.resident_memory_bytes",
    "process_start_time_seconds": "process.start_time_seconds",
    "process_virtual_memory_bytes": "process.virtual_memory_bytes",
    "process_virtual_memory_max_bytes": "process.virtual_memory_max_bytes",
}


RENAME_LABELS_MAP = {
    "service_version": "krakend.service_version",
    "service_name": "krakend.service_name",
}
