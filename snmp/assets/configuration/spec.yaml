name: SNMP
files:
- name: snmp.yaml
  options:
  - template: init_config
    options:
    - name: loader
      required: false
      description: |
          Check loader to use for all instances. Available loaders:
          - core: (recommended) will use new corecheck SNMP integration (faster and lower mem usage)
          - python: will use legacy python SNMP integration
      value:
        example: core
        type: string

    - name: oid_batch_size
      required: false
      description: |
          The number of OIDs handled by each batch. Increasing this number improves performance but
          uses more resources.
      value:
        example: 10
        type: integer
      
    - name: global_metrics
      required: false
      description: |
          Specify global_metrics you want to monitor by using MIBS for Counter and Gauge.
          global_metrics are applied to all instances where use_global_metrics is set to true at the instance level.

          Single scalar metrics and table metrics can be defined in this section.
          Details on how to define metrics can be found here:
          https://datadoghq.dev/integrations-core/tutorials/snmp/profile-format/#metrics
      value:
        type: array
        items:
          type: string
        example:
          - OID: 1.3.6.1.2.1.6.5.0
            name: tcpPassiveOpens
          - OID: 1.3.6.1.2.1.6.5.0
            name: tcpPassiveOpens
            metric_tags:
              - TCP
    - name: profiles
      required: false
      description: |
        Specify profiles to be able to reference a set of metrics by name.
        One of definition_file or definition needs to be defined.
        definition_file points to a file with a profile, whereas definition inlines
        it directly here.
        When using a profile present on the profiles directory of the
        configuration, you can directly pass the filename.
        By default, it loads all the profiles installed in the python package and
        in the configuration directory, if the file doesn't start with an underscore.
      value:
        type: object
      example:
        f5-big-ip:
          definition_file: f5-big-ip.yaml
        router:
          definition_file: generic-router.yaml
    - name: refresh_oids_cache_interval
      required: false
      description: |
        (beta feature) Set this option to enable caching of OIDs. The value is the number of seconds before the
        the cache is refreshed.
        This option works best when `oid_batch_size` is set to 128 or 256.
        This is useful to improve performance when fetching metrics from large tables.
        When OID caching is enabled, table row OIDs are reused. This means that the table can be fetched
        using batched GET queries, as opposed to one GETNEXT query per row in the table.
        The caching is disabled if the interval is set to `0` (default).
        Caveat: If some tables rows are dynamic, new rows will only be fetched at every refresh interval.
                - This means new OIDs will only be picked up when OIDs are refreshed according to the refresh interval.
                - With auto discovery, if the same IP is assigned to a different device with different OIDs,
                the OIDs will be refreshed only according to the refresh interval.
        Only available using python SNMP integration
      value:
        type: integer
      example: 3600
    - name: optimize_mib_memory_usage
      required: false
      description: |
        **Experimental** - Setting this flag to true attempts to optimize memory usage related to
        MIB information. This shares internal MIB data across instances.
        Note: The absence of impact on MIB resolution for this strategy is not guaranteed yet.
        Only available using python SNMP integration
      value:
        type: boolean
      example: false
    - name: mibs_folder
      required: false
      description: |
        Specify an additional folder for your custom mib files (python format).
        Only available using python SNMP integration
      value:
        type: string
      example: /path/to/your/mibs/folder
    - name: ignore_nonincreasing_oid 
      required: false
      description: |
        Set to true to ignore non increasing oid.
        See https://github.com/etingof/pysnmp/blob/master/docs/source/faq/oids-not-increasing.rst
        Only available using python SNMP integration
      value:
        type: boolean
      example: false
      
  - template: instances
    options:
    - name: ip_address
      required: false
      description: |
        The IP address of the device to monitor.
        One of ip_address and network_address must be provided.
      value:
        type: string
    - name: port
      required: false
      description: |
        Default SNMP port.
      value:
        type: integer
        example: 161
    - name: community_string
      required: false
      description: |
        Only useful for SNMP v1 & v2.
      value:
        type: string
        example: public
    - name: snmp_version
      required: false
      description: |
        If you are using SNMP v1 set snmp_version to 1
        If you are using SNMP v3 set snmp_version to 3
      value:
        type: integer
        example: 2
    - name: timeout
      required: false
      description: |
        Amount of second before timing out.
      value:
        type: integer
        example:5
    - name: retries
      required: false
      description: |
        Amount of retries before failure.
      value:
        type: integer
        example: 5
    - name: tags
      required: false
      description: |
        List of tags to attach to every metric, event and service check emitted by this integration.
        
        Learn more about tagging: https://docs.datadoghq.com/tagging/
      value:
        type: list
        example: 
          - <KEY_1>:<VALUE_1>
          - <KEY_2>:<VALUE_2>
    - name: loader
      required: false
      description: |
        Check loader to use. Available loaders:
        - core: (recommended) will use new corecheck SNMP integration
        - python: will use legacy python SNMP integration
      value:
        type: string
        example: core
    - name: oid_batch_size
      required: false
      description: |
        The number of OIDs handled by each batch. Increasing this number improves performance but
        uses more resources.
        Only available for corecheck implementation (`loader: core`).
      value:
        type: integer
        example: 10
    - name: user
      required: false
      description: |
        USERNAME to connect to your SNMP devices.
        SNMP v3 specific configuration
      value:
        type: string
        example: <USERNAME>
    - name: authProtocol
      required: false
      description: |
        Authentication type to use when connecting to your SNMP devices.
        It can be one of: MD5, SHA, SHA224, SHA256, SHA384, SHA512.
        Default to MD5 when `authKey` is specified.
        SNMP v3 specific configuration
      value:
        type: string
        example: <AUTHENTICATION_PROTOCOL>
    - name: authKey
      required: false
      description: |
        Authentication key to use with your Authentication type.
        SNMP v3 specific configuration
      value:
        type: string
        example: <AUTHENTICATION_TYPE_KEY>
    - name: privProtocol
      required: false
      description: |
        Privacy type to use when connecting to your SNMP devices.
        It can be one of: DES, 3DES, AES, AES192, AES256, AES192C, AES256C.
        Default to DES when `privKey` is specified.
        SNMP v3 specific configuration
      value:
        type: string
        example: <PRIVACY_TYPE>
    - name: privKey
      required: false
      description: |
        Privacy type key to use with your Privacy type.
        SNMP v3 specific configuration
      value:
        type: string
        example: <PRIVACY_TYPE_KEY>
    - name: context_engine_id
      required: false
      description: |
        ID of your context engine; typically unneeded.
        (optional SNMP v3-only parameter)
        SNMP v3 specific configuration
      value:
        type: string
        example: <CONTEXT_ENGINE_ID>
    - name: context_name
      required: false
      description: |
        Name of your context (optional SNMP v3-only parameter).
        SNMP v3 specific configuration
      value:
        type: string
        example: <CONTEXT_NAME>
    - name: use_global_metrics
      required: false
      description: |
        Whether or not global_metrics should be included for this instance.
      value:
        type: boolean
        example: true
    - name: profile
      required: false
      description: |
        Name of the profile to use, if any.
      value:
        type: string
        example: <PROFILE_NAME>
    - name: metrics
      required: false
      description: |
        Specify metrics you want to monitor.
        metrics set here will override global_metrics set in the init_config section if use_global_metrics is set to false.
        Otherwise, they will be used in addition of global_metrics.
        
        Single scalar metrics and table metrics can be defined in this section.
        Details on how to define metrics can be found here:
        https://datadoghq.dev/integrations-core/tutorials/snmp/profile-format/#metrics
      value:
        type: list
        example: 
          - OID: 1.3.6.1.2.1.6.5.0
            name: tcpPassiveOpens
          - OID: 1.3.6.1.2.1.6.5.0
            name: tcpPassiveOpens
            metric_tags:
              - TCP
     - name: metric_tags
      required: false
      description: |
        Specify tags that you want applied to all metrics. A tag can be applied from a symbol or an OID.
        Regular expressions can be used to separate the resulting value into several tags, or get a
        substring using the regular Python engine: https://docs.python.org/3/library/re.html
      value:
        type: list
        example: 
          - OID: 1.3.6.1.2.1.1.5.0
            symbol: sysName
            tag: snmp_host
          - # With regular expression matching
            OID: 1.3.6.1.2.1.1.5.0
            symbol: sysName
            match: (.*)-(.*)
            tags:
                host: \2
                device_type: \1
    - name: network_address
      required: false
      description: |
        The network address of the devices to scan for monitor.
        Only available using python SNMP integration
      value:
        type: string
        example: <NETWORK_ADRESS>
    - name: ignored_ip_addresses
      required: false
      description: |
        A list of IP addresses to ignore when scanning the network.
        Only available using python SNMP integration
      value:
        type: list
        example: 
          - <IP_ADDRESS_1>
          - <IP_ADDRESS_2>  
    - name: discovery_interval
      required: false
      description: |
        Interval between 2 discovery starts, in seconds.
        Only available using python SNMP integration
      value:
        type: integer
        example: 3600
    - name: discovery_allowed_failures
      required: false
      description: |
        Number of times a discovered host can fail before we remove it from the discovered list.
        Only available using python SNMP integration
      value:
        type: integer
        example: 3

    - name: discovery_allowed_failures
      required: false
      description: |
        Number of times a discovered host can fail before we remove it from the discovered list.
        Only available using python SNMP integration
      value:
        type: integer
        example: 3
    - name: workers
      required: false
      description: |
        Number of workers used for check when using discovery.
        Only available using python SNMP integration
      value:
        type: integer
        example: 5
    - name: enforce_mib_constraints
      required: false
      description: |
        If set to false we will not check the values returned meet the MIB constraints.
        Only available using python SNMP integration
      value:
        type: boolean
        example: true
    - name: bulk_threshold
      required: false
      description: |
        The number of symbols in each table that triggers a BULK request.
        Only relevant for SNMP > 1.
        Only available using python SNMP integration
      value:
        type: integer
        example: 0

    - name: refresh_oids_cache_interval
      required: false
      description: |
        (beta feature) Set this option to enable caching of OIDs. The value is the number of seconds before the
        the cache is refreshed.
        This option works best when `oid_batch_size` is set to 128 or 256.
        This is useful to improve performance when fetching metrics from large tables.
        When OID caching is enabled, table row OIDs are reused. This means that the table can be fetched
        using batched GET queries, as opposed to one GETNEXT query per row in the table.
        The caching is disabled if the interval is set to `0` (default).
        
        Caveat: If some tables rows are dynamic, new rows will only be fetched at every refresh interval.
                - This means new OIDs will only be picked up when OIDs are refreshed according to the refresh interval.
                - With auto discovery, if the same IP is assigned to a different device with different OIDs,
                the OIDs will be refreshed only according to the refresh interval.
        Only available using python SNMP integration
      value:
        type: integer
        example: 3600