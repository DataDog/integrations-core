## WARNING: This configuration files is for SNMP v1, v2 and v3
## Check carefully all variables depending of your SNMP version.
## To learn more about SNMP v3 configuration check:
## http://snmplabs.com/pysnmp/docs/api-reference.html#user-based

init_config:

  ## @param mibs_folder - string - required
  ## Specify an additional folder for your custom mib files (python format).
  #
  # mibs_folder: /path/to/your/mibs/folder

  ## @param ignore_nonincreasing_oid - boolean - optional - default: false
  ## Set to true to ignore non increasing oid.
  ## See http://snmplabs.com/pysnmp/faq/oids-not-increasing.html?highlight=ignorenonincreasingoid
  #
  # ignore_nonincreasing_oid: false

  ## @param global_metrics - list of elements - optional
  ## Specify global_metrics you want to monitor by using MIBS for Counter and Gauge.
  ## global_metrics are applied to all instances where use_global_metrics is set to true at the instance level.
  ## i.e:
  ## - MIB: UDP-MIB
  ##   symbol: udpInDatagrams
  ##
  ## If it's just a scalar, you can specify by OID and name it:
  ##
  ## - OID: 1.3.6.1.2.1.6.5
  ##   name: tcpPassiveOpens
  ##
  ## Optional parameters:
  ##
  ## Use the 'metric_tags' parameter to specify a specific tag for a collected metric:
  ##
  ## - OID: 1.3.6.1.2.1.6.5
  ##   name: tcpPassiveOpens
  ##   metric_tags:
  ##     - TCP
  ##
  ## User the 'forced_type' parameter to enforce a data type for OIDs if the
  ## auto-detection for OID data types from the remote agent's response is failing.
  ## Example: When a F5 Networks load balancer is queried for this OID, it returns
  ## it as a Counter64 when it should be a gauge. So, this configuration forces
  ## the data type to gauge:
  ##
  ## - OID: 1.3.6.1.4.1.3375.2.1.1.2.1.8.0
  ##   name: F5_TotalCurrentConnections
  ##   forced_type: gauge
  ##
  ## Query a table with the 'table' parameter and specify:
  ##  - which columns to report as value with the 'symbols' parameter.
  ##  - which columns / indexes to use as tags with the 'metric_tags' parameter.
  ##  - which column to read the tag value from with the 'column' parameter.
  ##  - which index you want to read the tag value from with the 'index' parameter.
  ##  - which table and MIB are required if the tag is in a different table.
  ##
  ## Example:
  ##
  ##  - MIB: IF-MIB
  ##    table: ifTable
  ##    symbols:
  ##      - ifInOctets
  ##      - ifOutOctets
  ##    metric_tags:
  ##      - tag: interface
  ##        column: ifDescr
  ##  - MIB: IP-MIB
  ##    table: ipSystemStatsTable
  ##    symbols:
  ##      - ipSystemStatsInReceives
  ##    metric_tags:
  ##      - tag: ipversion
  ##        index: 1
  ##  - MIB: ENTITY-SENSOR-MIB
  ##    table: entitySensorObjects
  ##    symbols:
  ##      - entPhySensorValue
  ##    metric_tags:
  ##      - tag: description
  ##        column: entLogicalDescr
  ##        table: entLogicalTable
  ##        MIB: ENTITY-MIB
  #
  # global_metrics:
  #   - MIB: UDP-MIB
  #     symbol: udpInDatagrams
  #   - MIB: TCP-MIB
  #     symbol: tcpActiveOpens
  #   - OID: 1.3.6.1.2.1.6.5
  #     name: tcpPassiveOpens
  #   - OID: 1.3.6.1.2.1.6.5
  #     name: tcpPassiveOpens
  #     metric_tags:
  #       - TCP

  ## @param profiles - object - optional
  ## Specify profiles to be able to reference a set of metrics by name.
  ## One of definition_file or definition needs to be defined.
  ## definition_file points to a file with a prfile, whereas definition inlines
  ## it directly here.
  ## When using a profile present on the profiles directory of the
  ## configuration, you can directly pass the filename.
  #
  profiles:
    f5-big-ip:
      definition_file: f5-big-ip.yaml
    router:
      definition_file: generic-router.yaml
    cisco-3850:
      definition_file: cisco-3850.yaml
    meraki-cloud-controller:
      definition_file: meraki-cloud-controller.yaml
    idrac:
      definition_file: idrac.yaml
    cisco-nexus:
      definition_file: cisco-nexus.yaml
    dell-poweredge:
      definition_file: dell-poweredge.yaml
    hp-ilo4:
      definition_file: hp-ilo4.yaml

instances:
  -
    ## @param ip_address - string - optional
    ## The IP address of the device to monitor.
    ## One of ip_address and network_address must be provided.
    #
    # ip_address: <IP_ADDRESS>

    ## @param network_address - string - optional
    ## The network address of the devices to scan for monitor.
    #
    # network_address: <NETWORK_ADRESS>

    ## @param port - integer - optional - default: 161
    ## Default SNMP port.
    #
    # port: 161

    ## @param community_string - string - optional
    ## Only useful for SNMP v1 & v2.
    #
    # community_string: public

    ## @param snmp_version - integer - optional - default: 2
    ## If you are using SNMP v1 set snmp_version to 1 (required)
    ## If you are using SNMP v3 set snmp_version to 3 (required)
    #
    # snmp_version: 2

    ## @param timeout - integer - optional - default: 1
    ## Amount of second before timing out.
    #
    # timeout: 1

    ## @param retries - integer - optional - default: 5
    ## Amount of retries before failure.
    #
    # retries: 5

    ## @param discovery_interval - integer - optional - default: 3600
    ## Interval between 2 discovery starts, in seconds.
    #
    # discovery_interval: 3600

    ## @param discovery_allowed_failures - integer - optional - default: 3
    ## Number of times a discovered host can fail before we remove it from the discovered list.
    #
    # discovery_allowed_failures: 3

    ## @param enforce_mib_constraints - boolean - optional - default: true
    ## If set to false we will not check the values returned meet the MIB constraints.
    #
    # enforce_mib_constraints: true

    ## @param bulk_threshold - integer - optional - default: 5
    ## The number of symbols in each table that triggers a BULK request.
    ## Only relevant for SNMP > 1.
    #
    # bulk_threshold: 5

    ## @param tags - list of key:value element - optional
    ## List of tags to attach to every metric, event and service check emitted by this integration.
    ##
    ## Learn more about tagging: https://docs.datadoghq.com/tagging/
    #
    # tags:
    #   - <KEY_1>:<VALUE_1>
    #   - <KEY_2>:<VALUE_2>

    ## SNMP v3 specific configuration
    ## All parameter are commented here even if they are required since
    ## the default configuration is for SNMP v2
    ## Learn more about SNMP v3 configuration here: http://snmplabs.com/pysnmp/docs/api-reference.html#user-based

    ## @param user - string - required
    ## USERNAME to connect to your SNMP devices.
    #
    # user: <USERNAME>

    ## @param authProtocol - string - required
    ## Authentication type to use when connecting to your SNMP devices.
    #
    # authProtocol: <AUTHENTICATION_PROTOCOL>

    ## @param authKey - string - required
    ## Authentication key to use with your Authentication type.
    #
    # authKey: <AUTHENTICATION_TYPE_KEY>

    ## @param privProtocol - string - required
    ## Privacy type to use when connecting to your SNMP devices.
    #
    # privProtocol: <PRIVACY_TYPE>

    ## @param privKey - string - required
    ## Privacy type key to use with your Privacy type.
    #
    # privKey: <PRIVACY_TYPE_KEY>

    ## @param context_engine_id - string - optional
    ## ID of your context engine; typically unneeded.
    ## (optional SNMP v3-only parameter)
    #
    # context_engine_id: <CONTEXT_ENGINE_ID>

    ## @param context_name - string - optional
    ## Name of your context (optional SNMP v3-only parameter).
    #
    # context_name: <CONTEXT_NAME>

    ## @param use_global_metrics - boolean - optional - default: true
    ## Whether or not global_metrics should be included for this instance.
    #
    # use_global_metrics: true

    ## @param profile - string - optional
    ## Name of the profile to use, if any.
    #
    # profile: <PROFILE_NAME>

    ## @param metrics - list of elements - optional
    ## Specify metrics you want to monitor by using MIBS for Counter and Gauge.
    ## metrics set here will override global_metrics set in the init_config section if use_global_metrics is set to false.
    ## Otherwise, they will be used in addition of global_metrics.
    ##
    ## i.e:
    ## - MIB: UDP-MIB
    ##   symbol: udpInDatagrams
    ##
    ## If it's just a scalar, you can specify by OID and name it:
    ##
    ## - OID: 1.3.6.1.2.1.6.5
    ##   name: tcpPassiveOpens
    ##
    ## Optional parameters:
    ##
    ## Use the 'metric_tags' parameter to specify a specific tag for a collected metric:
    ##
    ## - OID: 1.3.6.1.2.1.6.5
    ##   name: tcpPassiveOpens
    ##   metric_tags:
    ##     - TCP
    ##
    ## User the 'forced_type' parameter to enforce a data type for OIDs if the
    ## auto-detection for OID data types from the remote agent's response is failing.
    ## Example: When a F5 Networks load balancer is queried for this OID, it returns
    ## it as a Counter64 when it should be a gauge. So, this configuration forces
    ## the data type to gauge:
    ##
    ## - OID: 1.3.6.1.4.1.3375.2.1.1.2.1.8.0
    ##   name: F5_TotalCurrentConnections
    ##   forced_type: gauge
    ##
    ## Query a table with the 'table' parameter and specify:
    ##  - which columns to report as value with the 'symbols' parameter.
    ##  - which columns / indexes to use as tags with the 'metric_tags' parameter.
    ##  - which column to read the tag value from with the 'column' parameter.
    ##  - which index you want to read the tag value from with the 'index' parameter.
    ##
    ## Example:
    ##
    ##  - MIB: IF-MIB
    ##    table: ifTable
    ##    symbols:
    ##      - ifInOctets
    ##      - ifOutOctets
    ##    metric_tags:
    ##      - tag: interface
    ##        column: ifDescr
    ##  - MIB: IP-MIB
    ##    table: ipSystemStatsTable
    ##    symbols:
    ##      - ipSystemStatsInReceives
    ##         metric_tags:
    ##           - tag: ipversion
    ##             index: 1
    #
    metrics:
      - MIB: UDP-MIB
        symbol: udpInDatagrams
      - MIB: TCP-MIB
        symbol: tcpActiveOpens
      - OID: 1.3.6.1.2.1.6.5
        name: tcpPassiveOpens
      - OID: 1.3.6.1.2.1.6.5
        name: tcpPassiveOpens
        metric_tags:
          - TCP

    ## @param metric_tags - list of elements - optional
    ## Specify tags that you want applied to all metrics. A tag can be applied from a symbol or an OID.
    #
    # metric_tags:
    #  - # From a symbol
    #    MIB: SNMPv2-MIB
    #    symbol: sysName
    #    tag: snmp_host
    #  - # From an OID:
    #    OID: 1.3.6.1.2.1.1.5
    #    symbol: sysName
    #    tag: snmp_host
