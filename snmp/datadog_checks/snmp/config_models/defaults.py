# (C) Datadog, Inc. 2023-present
# All rights reserved
# Licensed under a 3-clause BSD style license (see LICENSE)

# This file is autogenerated.
# To change this file you should edit assets/configuration/spec.yaml and then run the following commands:
#     ddev -x validate config -s <INTEGRATION_NAME>
#     ddev -x validate models -s <INTEGRATION_NAME>

from datadog_checks.base.utils.models.fields import get_default_field_value


def shared_collect_device_metadata(_field, _value):
    return True


def shared_global_metrics(field, value):
    return get_default_field_value(field, value)


def shared_ignore_nonincreasing_oid(_field, _value):
    return False


def shared_loader(_field, _value):
    return 'python'


def shared_mibs_folder(field, value):
    return get_default_field_value(field, value)


def shared_min_collection_interval(_field, _value):
    return 15


def shared_oid_batch_size(_field, _value):
    return 10


def shared_optimize_mib_memory_usage(_field, _value):
    return False


def shared_profiles(field, value):
    return get_default_field_value(field, value)


def shared_refresh_oids_cache_interval(_field, _value):
    return 0


def shared_service(field, value):
    return get_default_field_value(field, value)


def shared_use_device_id_as_hostname(_field, _value):
    return False


def instance_authKey(field, value):
    return get_default_field_value(field, value)


def instance_authProtocol(field, value):
    return get_default_field_value(field, value)


def instance_bulk_threshold(_field, _value):
    return 0


def instance_collect_device_metadata(_field, _value):
    return True


def instance_community_string(field, value):
    return get_default_field_value(field, value)


def instance_context_engine_id(field, value):
    return get_default_field_value(field, value)


def instance_context_name(field, value):
    return get_default_field_value(field, value)


def instance_disable_generic_tags(_field, _value):
    return False


def instance_discovery_allowed_failures(_field, _value):
    return 3


def instance_discovery_interval(_field, _value):
    return 3600


def instance_discovery_workers(_field, _value):
    return 5


def instance_empty_default_hostname(_field, _value):
    return False


def instance_enforce_mib_constraints(_field, _value):
    return True


def instance_ignored_ip_addresses(field, value):
    return get_default_field_value(field, value)


def instance_ip_address(field, value):
    return get_default_field_value(field, value)


def instance_loader(_field, _value):
    return 'python'


def instance_metric_patterns(field, value):
    return get_default_field_value(field, value)


def instance_metric_tags(field, value):
    return get_default_field_value(field, value)


def instance_metrics(field, value):
    return get_default_field_value(field, value)


def instance_min_collection_interval(_field, _value):
    return 15


def instance_network_address(field, value):
    return get_default_field_value(field, value)


def instance_oid_batch_size(_field, _value):
    return 5


def instance_port(_field, _value):
    return 161


def instance_privKey(field, value):
    return get_default_field_value(field, value)


def instance_privProtocol(field, value):
    return get_default_field_value(field, value)


def instance_profile(field, value):
    return get_default_field_value(field, value)


def instance_refresh_oids_cache_interval(_field, _value):
    return 0


def instance_retries(_field, _value):
    return 3


def instance_service(field, value):
    return get_default_field_value(field, value)


def instance_snmp_version(_field, _value):
    return 2


def instance_tags(field, value):
    return get_default_field_value(field, value)


def instance_timeout(_field, _value):
    return 2


def instance_use_device_id_as_hostname(_field, _value):
    return False


def instance_use_global_metrics(_field, _value):
    return True


def instance_user(field, value):
    return get_default_field_value(field, value)


def instance_workers(_field, _value):
    return 5
